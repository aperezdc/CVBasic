                        00001 	; CVBasic compiler v0.6.1 Aug/15/2024
                        00002 	; Command: ./cvbasic --creativision examples/viboritas.bas viboritas.asm 
                        00003 	; Created: Sat Aug 17 10:24:48 2024
                        00004 
                        00005 COLECO:	EQU 0
                        00006 SG1000:	EQU 0
                        00007 MSX:	EQU 0
                        00008 SGM:	EQU 0
                        00009 SVI:	EQU 0
                        00010 SORD:	EQU 0
                        00011 MEMOTECH:	EQU 0
                        00012 EINSTEIN:	EQU 0
                        00013 CPM:	EQU 0
                        00014 PENCIL:	EQU 0
                        00015 PV2000:	EQU 0
                        00016 
                        00017 CVBASIC_MUSIC_PLAYER:	EQU 0
                        00018 CVBASIC_COMPRESSION:	EQU 0
                        00019 CVBASIC_BANK_SWITCHING:	EQU 0
                        00020 
                        00021 BASE_RAM:	EQU $0050	; Base of RAM
                        00022 STACK:	EQU $017F	; Base stack pointer
                        00023 VDP:	EQU $00	; VDP port (write)
                        00024 VDPR:	EQU $00	; VDP port (read)
                        00025 PSG:	EQU $00	; PSG port (write)
                        00026 
                        00027 	;
                        00028 	; CVBasic prologue (BASIC compiler, 6502 target)
                        00029 	;
                        00030 	; by Oscar Toledo G.
                        00031 	; https://nanochess.org/
                        00032 	;
                        00033 	; Creation date: Aug/05/2024.
                        00034 	; Revision date: Aug/06/2024. Ported music player from Z80 CVBasic.
                        00035 	; Revision date: Aug/07/2024. Ported Pletter decompressor from Z80 CVBasic.
                        00036 	;                             Added VDP delays.
                        00037 	; Revision date: Aug/16/2024. Corrected bug in define_char_unpack.
                        00038 	;
                        00039 
                        00040 	CPU 6502
                        00041 
                        00042 BIOS_NMI_RESET_ADDR:	EQU $F808
                        00043 BIOS_READ_CONTROLLERS:	EQU $FA00
                        00044 BIOS_WRITE_PSG:		EQU $FE77
                        00045 
                        00046 	;
                        00047 	; Platforms supported:
                        00048 	; o Vtech Creativision.
                        00049 	; o Dick Smith's Wizzard.
                        00050 	;
                        00051 
                        00052 	;
                        00053 	; CVBasic variables in zero page.
                        00054 	;
                        00055 
                        00056 	; This is a block of 8 bytes that should stay together.
                        00057 TEMP:		EQU $02
                        00058 TEMP2:		EQU $04
                        00059 RESULT:		EQU $06
                        00060 POINTER:	EQU $08
                        00061 
                        00062 READ_POINTER:	EQU $0A
                        00063 CURSOR:		EQU $0C
                        00064 PLETTER_OFF:	EQU $0E	; Used by Pletter
                        00065 
                        00066 	; Zero page $00-$01 and $10-$1f are used by
                        00067 	; the Creativision BIOS to read the controllers.
                        00068 JOY1_DIR:	EQU $11
                        00069 JOY2_DIR:	EQU $13
                        00070 JOY1_BUTTONS:	EQU $16
                        00071 JOY2_BUTTONS:	EQU $17
                        00072 
                        00073 JOY1_DATA:	EQU $20
                        00074 JOY2_DATA:	EQU $21
                        00075 KEY1_DATA:	EQU $22
                        00076 KEY2_DATA:	EQU $23
                        00077 FRAME:		EQU $24
                        00078 LFSR:		EQU $26
                        00079 MODE:           EQU $28
                        00080 FLICKER:	EQU $29
                        00081 SPRITE_DATA:	EQU $2A
                        00082 NTSC:		EQU $2E
                        00083 PLETTER_BIT:	EQU $2F
                        00084 
                        00085 	IF CVBASIC_MUSIC_PLAYER
                        00086 MUSIC_PLAYING:		EQU $30
                        00087 MUSIC_TIMING:		EQU $31
                        00088 MUSIC_START:		EQU $32
                        00089 MUSIC_POINTER:		EQU $34
                        00090 MUSIC_NOTE_COUNTER:	EQU $36
                        00091 MUSIC_INSTRUMENT_1:	EQU $37
                        00092 MUSIC_NOTE_1:		EQU $38
                        00093 MUSIC_COUNTER_1:	EQU $39
                        00094 MUSIC_INSTRUMENT_2:	EQU $3A
                        00095 MUSIC_NOTE_2:		EQU $3B
                        00096 MUSIC_COUNTER_2:	EQU $3C
                        00097 MUSIC_INSTRUMENT_3:	EQU $3D
                        00098 MUSIC_NOTE_3:		EQU $3E
                        00099 MUSIC_COUNTER_3:	EQU $3F
                        00100 MUSIC_DRUM:		EQU $40
                        00101 MUSIC_COUNTER_4:	EQU $41
                        00102 AUDIO_FREQ1:		EQU $42
                        00103 AUDIO_FREQ2:		EQU $44
                        00104 AUDIO_FREQ3:		EQU $46
                        00105 AUDIO_VOL1:		EQU $48
                        00106 AUDIO_VOL2:		EQU $49
                        00107 AUDIO_VOL3:		EQU $4A
                        00108 AUDIO_VOL4HW:		EQU $4B
                        00109 AUDIO_NOISE:		EQU $4C
                        00110 AUDIO_CONTROL:		EQU $4D
                        00111 MUSIC_MODE:		EQU $4E
                        00112 	ENDIF
                        00113 
                        00114 SPRITES:	EQU $0180
                        00115 
4000                    00116 	ORG $4000
4000                    00117 	
4000                    00118 WRTVDP:
4000  8D0130            00119 	STA $3001
4003  8A                00120 	TXA
4004  0980              00121 	ORA #$80
4006  8D0130            00122 	STA $3001
4009  60                00123 	RTS
400A                    00124 
400A                    00125 SETWRT:
400A  8D0130            00126 	STA $3001	; 4
400D  98                00127 	TYA		; 2
400E  0940              00128 	ORA #$40	; 2
4010  8D0130            00129 	STA $3001	; 4
4013  60                00130 	RTS		; 6
4014                    00131 
4014                    00132 SETRD:
4014  8D0130            00133 	STA $3001	; 4
4017  98                00134 	TYA		; 2
4018  293F              00135 	AND #$3F	; 2
401A  8D0130            00136 	STA $3001	; 4
401D  60                00137 	RTS		; 6
401E                    00138 
401E                    00139 	; VDP delays calculated for 6502 running at 2 mhz.
401E                    00140 WRTVRM:
401E  200A40            00141 	JSR SETWRT	; 6
4021  8A                00142 	TXA		; 2
4022  EA                00143 	NOP		; 2
4023  EA                00144 	NOP		; 2
4024  EA                00145 	NOP		; 2 = RTS + 14 = Minimum cycles
4025  EA                00146 	NOP		; 2
4026  8D0030            00147 	STA $3000	; 4
4029  60                00148 	RTS		; 6
402A                    00149 
402A                    00150 RDVRM:
402A  201440            00151 	JSR SETRD	; 6
402D  EA                00152 	NOP		; 2
402E  EA                00153 	NOP		; 2
402F  EA                00154 	NOP		; 2
4030  EA                00155 	NOP		; 2
4031  EA                00156 	NOP		; 2
4032  EA                00157 	NOP		; 2
4033  EA                00158 	NOP		; 2
4034  EA                00159 	NOP		; 2
4035  EA                00160 	NOP		; 2
4036  EA                00161 	NOP		; 2
4037  EA                00162 	NOP		; 2
4038  AD0020            00163 	LDA $2000	; 4
403B  60                00164 	RTS		; 6
403C                    00165 
403C                    00166 FILVRM:
403C  A508              00167 	LDA POINTER
403E  A409              00168 	LDY POINTER+1
4040  200A40            00169 	JSR SETWRT
4043  A504              00170 	LDA TEMP2
4045  F002              00171 	BEQ .1
4047  E605              00172 	INC TEMP2+1
4049                    00173 .1:
4049  A502              00174 	LDA TEMP	; 3
404B  8D0030            00175 	STA $3000	; 4
404E  EA                00176 	NOP		; 2
404F  EA                00177 	NOP		; 2
4050  C604              00178 	DEC TEMP2	; 5
4052  D0F5              00179 	BNE .1		; 2/3/4
4054  C605              00180 	DEC TEMP2+1	; 5
4056  D0F1              00181 	BNE .1		; 2/3/4
4058  60                00182 	RTS	
4059                    00183 
4059                    00184 LDIRVM:
4059  A508              00185 	LDA POINTER
405B  A409              00186 	LDY POINTER+1
405D  200A40            00187 	JSR SETWRT
4060  A504              00188 	LDA TEMP2
4062  F002              00189 	BEQ .1
4064  E605              00190 	INC TEMP2+1
4066                    00191 .1:
4066  A000              00192 	LDY #0
4068                    00193 .2:
4068  B102              00194 	LDA (TEMP),Y	; 5/6
406A  8D0030            00195 	STA $3000	; 4
406D  E602              00196 	INC TEMP	; 5
406F  D002              00197 	BNE .3		; 2/3/4
4071  E603              00198 	INC TEMP+1	; 5
4073                    00199 .3:
4073  C604              00200 	DEC TEMP2	; 5
4075  D0F1              00201 	BNE .2		; 2/3/4
4077  C605              00202 	DEC TEMP2+1	; 5
4079  D0ED              00203 	BNE .2		; 2/3/4
407B  60                00204 	RTS
407C                    00205 
407C                    00206 LDIRVM3:
407C  208240            00207 	JSR .1
407F  208240            00208 	JSR .1
4082  A502              00209 .1:	LDA TEMP
4084  48                00210 	PHA
4085  A503              00211 	LDA TEMP+1
4087  48                00212 	PHA
4088  A504              00213 	LDA TEMP2
408A  48                00214 	PHA
408B  A505              00215 	LDA TEMP2+1
408D  48                00216 	PHA
408E  205940            00217 	JSR LDIRVM
4091  A509              00218 	LDA POINTER+1
4093  18                00219 	CLC
4094  6908              00220 	ADC #8
4096  8509              00221 	STA POINTER+1
4098  68                00222 	PLA
4099  8505              00223 	STA TEMP2+1
409B  68                00224 	PLA
409C  8504              00225 	STA TEMP2
409E  68                00226 	PLA
409F  8503              00227 	STA TEMP+1
40A1  68                00228 	PLA
40A2  8502              00229 	STA TEMP
40A4  60                00230 	RTS
40A5                    00231 
40A5                    00232 DISSCR:
40A5  78                00233 	SEI
40A6  A9A2              00234 	LDA #$A2
40A8  A201              00235 	LDX #$01
40AA  200040            00236 	JSR WRTVDP
40AD  58                00237 	CLI
40AE  60                00238 	RTS
40AF                    00239 
40AF                    00240 ENASCR:
40AF  78                00241 	SEI
40B0  A9E2              00242 	LDA #$E2
40B2  A201              00243 	LDX #$01
40B4  200040            00244 	JSR WRTVDP
40B7  58                00245 	CLI
40B8  60                00246 	RTS
40B9                    00247 
40B9                    00248 CPYBLK:
40B9  78                00249 	SEI
40BA                    00250 .1:	
40BA  A504              00251 	LDA TEMP2
40BC  48                00252 	PHA
40BD  A505              00253 	LDA TEMP2+1
40BF  48                00254 	PHA
40C0  8A                00255 	TXA
40C1  48                00256 	PHA
40C2  98                00257 	TYA
40C3  48                00258 	PHA
40C4  A502              00259 	LDA TEMP
40C6  48                00260 	PHA
40C7  A503              00261 	LDA TEMP+1
40C9  48                00262 	PHA
40CA  A900              00263 	LDA #0
40CC  8505              00264 	STA TEMP2+1
40CE  205940            00265 	JSR LDIRVM
40D1  68                00266 	PLA
40D2  8503              00267 	STA TEMP+1
40D4  68                00268 	PLA
40D5  8502              00269 	STA TEMP
40D7  68                00270 	PLA
40D8  8505              00271 	STA TEMP2+1
40DA  68                00272 	PLA
40DB  8504              00273 	STA TEMP2
40DD  A502              00274 	LDA TEMP
40DF  18                00275 	CLC
40E0  6504              00276 	ADC TEMP2
40E2  8502              00277 	STA TEMP
40E4  A503              00278 	LDA TEMP+1
40E6  6505              00279 	ADC TEMP2+1
40E8  8503              00280 	STA TEMP+1
40EA  A604              00281 	LDX TEMP2
40EC  A405              00282 	LDY TEMP2+1
40EE  68                00283 	PLA
40EF  8505              00284 	STA TEMP2+1
40F1  68                00285 	PLA
40F2  8504              00286 	STA TEMP2
40F4  A508              00287 	LDA POINTER
40F6  18                00288 	CLC
40F7  6920              00289 	ADC #$20
40F9  8508              00290 	STA POINTER
40FB  A509              00291 	LDA POINTER+1
40FD  6900              00292 	ADC #$00
40FF  8509              00293 	STA POINTER+1
4101  C605              00294 	DEC TEMP2+1
4103  D0B5              00295 	BNE .1
4105  58                00296 	CLI
4106  60                00297 	RTS
4107                    00298 
4107                    00299 CLS:
4107  A900              00300 	LDA #$00
4109  A018              00301 	LDY #$18
410B  850C              00302 	STA CURSOR
410D  840D              00303 	STY CURSOR+1
410F  8508              00304 	STA POINTER
4111  8409              00305 	STY POINTER+1
4113  A900              00306 	LDA #$00
4115  A003              00307 	LDY #$03
4117  8504              00308 	STA TEMP2
4119  8405              00309 	STY TEMP2+1
411B  A920              00310 	LDA #$20
411D  8502              00311 	STA TEMP
411F  78                00312 	SEI
4120  203C40            00313 	JSR FILVRM
4123  58                00314 	CLI
4124  60                00315 	RTS
4125                    00316 
4125                    00317 PRINT_STRING:
4125  8502              00318 	STA TEMP
4127  8403              00319 	STY TEMP+1
4129  8604              00320 	STX TEMP2
412B  8A                00321 	TXA
412C  48                00322 	PHA
412D  A900              00323 	LDA #0
412F  8505              00324 	STA TEMP2+1
4131  A50C              00325 	LDA CURSOR
4133  8508              00326 	STA POINTER
4135  A50D              00327 	LDA CURSOR+1
4137  2907              00328 	AND #$07
4139  0918              00329 	ORA #$18
413B  8509              00330 	STA POINTER+1
413D  78                00331 	SEI
413E  205940            00332 	JSR LDIRVM
4141  58                00333 	CLI
4142  68                00334 	PLA
4143  18                00335 	CLC
4144  650C              00336 	ADC CURSOR
4146  850C              00337 	STA CURSOR
4148  9002              00338 	BCC .1
414A  E60D              00339 	INC CURSOR+1
414C                    00340 .1:
414C  60                00341 	RTS
414D                    00342 
414D                    00343 PRINT_NUMBER:
414D  A200              00344 	LDX #0
414F  8602              00345 	STX TEMP
4151  78                00346 	SEI
4152                    00347 PRINT_NUMBER5:
4152  A210              00348 	LDX #10000
4154  8604              00349 	STX TEMP2
4156  A227              00350 	LDX #10000/256
4158  8605              00351 	STX TEMP2+1
415A  208D41            00352 	JSR PRINT_DIGIT
415D                    00353 PRINT_NUMBER4:
415D  A2E8              00354 	LDX #1000
415F  8604              00355 	STX TEMP2
4161  A203              00356 	LDX #1000/256
4163  8605              00357 	STX TEMP2+1
4165  208D41            00358 	JSR PRINT_DIGIT
4168                    00359 PRINT_NUMBER3:
4168  A264              00360 	LDX #100
416A  8604              00361 	STX TEMP2
416C  A200              00362 	LDX #0
416E  8605              00363 	STX TEMP2+1
4170  208D41            00364 	JSR PRINT_DIGIT
4173                    00365 PRINT_NUMBER2:
4173  A20A              00366 	LDX #10
4175  8604              00367 	STX TEMP2
4177  A200              00368 	LDX #0
4179  8605              00369 	STX TEMP2+1
417B  208D41            00370 	JSR PRINT_DIGIT
417E                    00371 PRINT_NUMBER1:
417E  A201              00372 	LDX #1
4180  8604              00373 	STX TEMP2
4182  8602              00374 	STX TEMP
4184  A200              00375 	LDX #0
4186  8605              00376 	STX TEMP2+1
4188  208D41            00377 	JSR PRINT_DIGIT
418B  58                00378 	CLI
418C  60                00379 	RTS
418D                    00380 
418D                    00381 PRINT_DIGIT:
418D  A22F              00382 	LDX #$2F
418F                    00383 .2:
418F  E8                00384 	INX
4190  38                00385 	SEC
4191  E504              00386 	SBC TEMP2
4193  48                00387 	PHA
4194  98                00388 	TYA
4195  E505              00389 	SBC TEMP2+1
4197  A8                00390 	TAY
4198  68                00391 	PLA
4199  B0F4              00392 	BCS .2
419B  18                00393 	CLC
419C  6504              00394 	ADC TEMP2
419E  48                00395 	PHA
419F  98                00396 	TYA
41A0  6505              00397 	ADC TEMP2+1
41A2  A8                00398 	TAY
41A3  68                00399 	PLA
41A4  E030              00400 	CPX #$30
41A6  D00E              00401 	BNE .3
41A8  A602              00402 	LDX TEMP
41AA  D001              00403 	BNE .4
41AC  60                00404 	RTS
41AD                    00405 
41AD  CA                00406 .4:	DEX
41AE  F004              00407 	BEQ .6
41B0  A603              00408 	LDX TEMP+1
41B2  D008              00409 	BNE .5
41B4                    00410 .6:
41B4  A230              00411 	LDX #$30
41B6  48                00412 .3:	PHA
41B7  A901              00413 	LDA #1
41B9  8502              00414 	STA TEMP
41BB  68                00415 	PLA
41BC  48                00416 .5:	PHA
41BD  98                00417 	TYA
41BE  48                00418 	PHA
41BF  A50D              00419 	LDA CURSOR+1
41C1  2907              00420 	AND #$07
41C3  0918              00421 	ORA #$18
41C5  A8                00422 	TAY
41C6  A50C              00423 	LDA CURSOR
41C8  201E40            00424 	JSR WRTVRM
41CB  E60C              00425 	INC CURSOR
41CD  D002              00426 	BNE .1
41CF  E60D              00427 	INC CURSOR+1
41D1                    00428 .1:
41D1  68                00429 	PLA
41D2  A8                00430 	TAY
41D3  68                00431 	PLA
41D4  60                00432 	RTS
41D5                    00433 
41D5                    00434 DEFINE_SPRITE:
41D5  8504              00435 	STA TEMP2
41D7  A900              00436 	LDA #0
41D9  8505              00437 	STA TEMP2+1
41DB  A907              00438 	LDA #7
41DD  8509              00439 	STA POINTER+1
41DF  A508              00440 	LDA POINTER
41E1  0A                00441 	ASL A
41E2  0A                00442 	ASL A
41E3  0A                00443 	ASL A
41E4  2609              00444 	ROL POINTER+1
41E6  0A                00445 	ASL A
41E7  2609              00446 	ROL POINTER+1
41E9  0A                00447 	ASL A
41EA  2609              00448 	ROL POINTER+1
41EC  8508              00449 	STA POINTER
41EE  A504              00450 	LDA TEMP2
41F0  0A                00451 	ASL A
41F1  2605              00452 	ROL TEMP2+1
41F3  0A                00453 	ASL A
41F4  2605              00454 	ROL TEMP2+1
41F6  0A                00455 	ASL A
41F7  2605              00456 	ROL TEMP2+1
41F9  0A                00457 	ASL A
41FA  2605              00458 	ROL TEMP2+1
41FC  0A                00459 	ASL A
41FD  2605              00460 	ROL TEMP2+1
41FF  8504              00461 	STA TEMP2
4201  78                00462 	SEI
4202  205940            00463 	JSR LDIRVM
4205  58                00464 	CLI
4206  60                00465 	RTS
4207                    00466 
4207                    00467 DEFINE_CHAR:
4207  8504              00468 	STA TEMP2
4209  A900              00469 	LDA #0
420B  8509              00470 	STA POINTER+1
420D  8505              00471 	STA TEMP2+1
420F  A508              00472 	LDA POINTER
4211  0A                00473 	ASL A
4212  2609              00474 	ROL POINTER+1
4214  0A                00475 	ASL A
4215  2609              00476 	ROL POINTER+1
4217  0A                00477 	ASL A
4218  2609              00478 	ROL POINTER+1
421A  8508              00479 	STA POINTER
421C  A504              00480 	LDA TEMP2
421E  0A                00481 	ASL A
421F  2605              00482 	ROL TEMP2+1
4221  0A                00483 	ASL A
4222  2605              00484 	ROL TEMP2+1
4224  0A                00485 	ASL A
4225  2605              00486 	ROL TEMP2+1
4227  8504              00487 	STA TEMP2
4229  78                00488 	SEI
422A  A528              00489 	LDA MODE
422C  2904              00490 	AND #$04
422E  D005              00491 	BNE .1
4230  207C40            00492 	JSR LDIRVM3
4233  58                00493 	CLI
4234  60                00494 	RTS
4235                    00495 
4235  205940            00496 .1:	JSR LDIRVM
4238  58                00497 	CLI
4239  60                00498 	RTS
423A                    00499 
423A                    00500 DEFINE_COLOR:
423A  8504              00501 	STA TEMP2
423C  A900              00502 	LDA #0
423E  8505              00503 	STA TEMP2+1
4240  A904              00504 	LDA #$04
4242  8509              00505 	STA POINTER+1
4244  A508              00506 	LDA POINTER
4246  0A                00507 	ASL A
4247  2609              00508 	ROL POINTER+1
4249  0A                00509 	ASL A
424A  2609              00510 	ROL POINTER+1
424C  0A                00511 	ASL A
424D  2609              00512 	ROL POINTER+1
424F  8508              00513 	STA POINTER
4251  A504              00514 	LDA TEMP2
4253  0A                00515 	ASL A
4254  2605              00516 	ROL TEMP2+1
4256  0A                00517 	ASL A
4257  2605              00518 	ROL TEMP2+1
4259  0A                00519 	ASL A
425A  2605              00520 	ROL TEMP2+1
425C  8504              00521 	STA TEMP2
425E  78                00522 	SEI
425F  207C40            00523 	JSR LDIRVM3
4262  58                00524 	CLI
4263  60                00525 	RTS
4264                    00526 
4264                    00527 UPDATE_SPRITE:
4264  0A                00528 	ASL A
4265  0A                00529 	ASL A
4266  0980              00530 	ORA #$80
4268  8508              00531 	STA POINTER
426A  A901              00532 	LDA #$01
426C  8509              00533 	STA POINTER+1
426E  A000              00534 	LDY #0
4270  A52A              00535 	LDA SPRITE_DATA+0
4272  9108              00536 	STA (POINTER),Y
4274  C8                00537 	INY
4275  A52B              00538 	LDA SPRITE_DATA+1
4277  9108              00539 	STA (POINTER),Y
4279  C8                00540 	INY
427A  A52C              00541 	LDA SPRITE_DATA+2
427C  9108              00542 	STA (POINTER),Y
427E  C8                00543 	INY
427F  A52D              00544 	LDA SPRITE_DATA+3
4281  9108              00545 	STA (POINTER),Y
4283  60                00546 	RTS
4284                    00547 
4284                    00548 _ABS16:
4284  48                00549 	PHA
4285  98                00550 	TYA
4286  100D              00551 	BPL _NEG16.1
4288  68                00552 	PLA
4289                    00553 _NEG16:
4289  49FF              00554 	EOR #$FF
428B  18                00555 	CLC
428C  6901              00556 	ADC #1
428E  48                00557 	PHA
428F  98                00558 	TYA
4290  49FF              00559 	EOR #$FF
4292  6900              00560 	ADC #0
4294  A8                00561 	TAY
4295                    00562 .1:
4295  68                00563 	PLA
4296  60                00564 	RTS
4297                    00565 
4297                    00566 _SGN16:
4297  8402              00567 	STY TEMP
4299  0502              00568 	ORA TEMP
429B  F00B              00569 	BEQ .1
429D  98                00570 	TYA
429E  3006              00571 	BMI .2
42A0  A900              00572 	LDA #0
42A2  A8                00573 	TAY
42A3  A901              00574 	LDA #1
42A5  60                00575 	RTS
42A6                    00576 
42A6  A9FF              00577 .2:	LDA #$FF
42A8  A8                00578 .1:	TAY
42A9  60                00579 	RTS
42AA                    00580 
42AA                    00581 _READ16:
42AA  20B442            00582 	JSR _READ8
42AD  48                00583 	PHA
42AE  20B442            00584 	JSR _READ8
42B1  A8                00585 	TAY
42B2  68                00586 	PLA
42B3  60                00587 	RTS
42B4                    00588 
42B4                    00589 _READ8:
42B4  A000              00590 	LDY #0
42B6  B10A              00591 	LDA (READ_POINTER),Y
42B8  E60A              00592 	INC READ_POINTER
42BA  D002              00593 	BNE .1
42BC  E60B              00594 	INC READ_POINTER+1
42BE                    00595 .1:
42BE  60                00596 	RTS
42BF                    00597 
42BF                    00598 _PEEK8:
42BF  8508              00599 	STA POINTER
42C1  8409              00600 	STY POINTER+1
42C3  A000              00601 	LDY #0
42C5  B108              00602 	LDA (POINTER),Y
42C7  60                00603 	RTS
42C8                    00604 
42C8                    00605 _PEEK16:
42C8  8508              00606 	STA POINTER
42CA  8409              00607 	STY POINTER+1
42CC  A000              00608 	LDY #0
42CE  B108              00609 	LDA (POINTER),Y
42D0  48                00610 	PHA
42D1  C8                00611 	INY
42D2  B108              00612 	LDA (POINTER),Y
42D4  A8                00613 	TAY
42D5  68                00614 	PLA
42D6  60                00615 	RTS
42D7                    00616 
42D7                    00617 	; temp2 constains left side (dividend)
42D7                    00618 	; temp contains right side (divisor)
42D7                    00619 
42D7                    00620 	; 16-bit multiplication.
42D7                    00621 _MUL16:
42D7  68                00622 	PLA
42D8  8506              00623 	STA RESULT
42DA  68                00624 	PLA
42DB  8507              00625 	STA RESULT+1
42DD  68                00626 	PLA
42DE  8505              00627 	STA TEMP2+1
42E0  68                00628 	PLA
42E1  8504              00629 	STA TEMP2
42E3  A507              00630 	LDA RESULT+1
42E5  48                00631 	PHA
42E6  A506              00632 	LDA RESULT
42E8  48                00633 	PHA
42E9  A900              00634 	LDA #0
42EB  8506              00635 	STA RESULT
42ED  8507              00636 	STA RESULT+1
42EF  A20F              00637 	LDX #15
42F1                    00638 .1:
42F1  4605              00639 	LSR TEMP2+1
42F3  6604              00640 	ROR TEMP2
42F5  900D              00641 	BCC .2
42F7  A506              00642 	LDA RESULT
42F9  18                00643 	CLC
42FA  6502              00644 	ADC TEMP
42FC  8506              00645 	STA RESULT
42FE  A507              00646 	LDA RESULT+1
4300  6503              00647 	ADC TEMP+1
4302  8507              00648 	STA RESULT+1
4304  0602              00649 .2:	ASL TEMP
4306  2603              00650 	ROL TEMP+1
4308  CA                00651 	DEX
4309  10E6              00652 	BPL .1
430B  A506              00653 	LDA RESULT
430D  A407              00654 	LDY RESULT+1
430F  60                00655 	RTS
4310                    00656 
4310                    00657 	; 16-bit signed modulo.
4310                    00658 _MOD16S:
4310  68                00659 	PLA
4311  8506              00660 	STA RESULT
4313  68                00661 	PLA
4314  8507              00662 	STA RESULT+1
4316  68                00663 	PLA
4317  8505              00664 	STA TEMP2+1
4319  68                00665 	PLA
431A  8504              00666 	STA TEMP2
431C  A507              00667 	LDA RESULT+1
431E  48                00668 	PHA
431F  A506              00669 	LDA RESULT
4321  48                00670 	PHA
4322  A405              00671 	LDY TEMP2+1
4324  08                00672 	PHP
4325  1009              00673 	BPL .1
4327  A504              00674 	LDA TEMP2
4329  208942            00675 	JSR _NEG16
432C  8504              00676 	STA TEMP2
432E  8405              00677 	STY TEMP2+1
4330                    00678 .1:
4330  A403              00679 	LDY TEMP+1
4332  1009              00680 	BPL .2
4334  A502              00681 	LDA TEMP
4336  208942            00682 	JSR _NEG16
4339  8502              00683 	STA TEMP
433B  8403              00684 	STY TEMP+1
433D                    00685 .2:
433D  20DE43            00686 	JSR _MOD16.1
4340  28                00687 	PLP
4341  1003              00688 	BPL .3
4343  208942            00689 	JSR _NEG16
4346                    00690 .3:
4346  60                00691 	RTS
4347                    00692 
4347                    00693 	; 16-bit signed division.
4347                    00694 _DIV16S:
4347  68                00695 	PLA
4348  8506              00696 	STA RESULT
434A  68                00697 	PLA
434B  8507              00698 	STA RESULT+1
434D  68                00699 	PLA
434E  8505              00700 	STA TEMP2+1
4350  68                00701 	PLA
4351  8504              00702 	STA TEMP2
4353  A507              00703 	LDA RESULT+1
4355  48                00704 	PHA
4356  A506              00705 	LDA RESULT
4358  48                00706 	PHA
4359  A503              00707 	LDA TEMP+1
435B  4505              00708 	EOR TEMP2+1
435D  08                00709 	PHP
435E  A405              00710 	LDY TEMP2+1
4360  1009              00711 	BPL .1
4362  A504              00712 	LDA TEMP2
4364  208942            00713 	JSR _NEG16
4367  8504              00714 	STA TEMP2
4369  8405              00715 	STY TEMP2+1
436B                    00716 .1:
436B  A403              00717 	LDY TEMP+1
436D  1009              00718 	BPL .2
436F  A502              00719 	LDA TEMP
4371  208942            00720 	JSR _NEG16
4374  8502              00721 	STA TEMP
4376  8403              00722 	STY TEMP+1
4378                    00723 .2:
4378  209443            00724 	JSR _DIV16.1
437B  28                00725 	PLP
437C  1003              00726 	BPL .3
437E  208942            00727 	JSR _NEG16
4381                    00728 .3:
4381  60                00729 	RTS
4382                    00730 
4382                    00731 _DIV16:
4382  68                00732 	PLA
4383  8506              00733 	STA RESULT
4385  68                00734 	PLA
4386  8507              00735 	STA RESULT+1
4388  68                00736 	PLA
4389  8505              00737 	STA TEMP2+1
438B  68                00738 	PLA
438C  8504              00739 	STA TEMP2
438E  A507              00740 	LDA RESULT+1
4390  48                00741 	PHA
4391  A506              00742 	LDA RESULT
4393  48                00743 	PHA
4394                    00744 .1:
4394  A900              00745 	LDA #0
4396  8506              00746 	STA RESULT
4398  8507              00747 	STA RESULT+1
439A  A20F              00748 	LDX #15
439C                    00749 .2:
439C  2604              00750 	ROL TEMP2
439E  2605              00751 	ROL TEMP2+1
43A0  2606              00752 	ROL RESULT
43A2  2607              00753 	ROL RESULT+1
43A4  A506              00754 	LDA RESULT
43A6  38                00755 	SEC
43A7  E502              00756 	SBC TEMP
43A9  8506              00757 	STA RESULT
43AB  A507              00758 	LDA RESULT+1
43AD  E503              00759 	SBC TEMP+1
43AF  8507              00760 	STA RESULT+1
43B1  B00D              00761 	BCS .3
43B3  A506              00762 	LDA RESULT
43B5  6502              00763 	ADC TEMP
43B7  8506              00764 	STA RESULT
43B9  A507              00765 	LDA RESULT+1
43BB  6503              00766 	ADC TEMP+1
43BD  8507              00767 	STA RESULT+1
43BF  18                00768 	CLC
43C0                    00769 .3:
43C0  CA                00770 	DEX
43C1  10D9              00771 	BPL .2
43C3  2604              00772 	ROL TEMP2
43C5  2605              00773 	ROL TEMP2+1
43C7  A504              00774 	LDA TEMP2
43C9  A405              00775 	LDY TEMP2+1
43CB  60                00776 	RTS
43CC                    00777 
43CC                    00778 _MOD16:
43CC  68                00779 	PLA
43CD  8506              00780 	STA RESULT
43CF  68                00781 	PLA
43D0  8507              00782 	STA RESULT+1
43D2  68                00783 	PLA
43D3  8505              00784 	STA TEMP2+1
43D5  68                00785 	PLA
43D6  8504              00786 	STA TEMP2
43D8  A507              00787 	LDA RESULT+1
43DA  48                00788 	PHA
43DB  A506              00789 	LDA RESULT
43DD  48                00790 	PHA
43DE                    00791 .1:
43DE  A900              00792 	LDA #0
43E0  8506              00793 	STA RESULT
43E2  8507              00794 	STA RESULT+1
43E4  A20F              00795 	LDX #15
43E6                    00796 .2:
43E6  2604              00797 	ROL TEMP2
43E8  2605              00798 	ROL TEMP2+1
43EA  2606              00799 	ROL RESULT
43EC  2607              00800 	ROL RESULT+1
43EE  A506              00801 	LDA RESULT
43F0  38                00802 	SEC
43F1  E502              00803 	SBC TEMP
43F3  8506              00804 	STA RESULT
43F5  A507              00805 	LDA RESULT+1
43F7  E503              00806 	SBC TEMP+1
43F9  8507              00807 	STA RESULT+1
43FB  B00D              00808 	BCS .3
43FD  A506              00809 	LDA RESULT
43FF  6502              00810 	ADC TEMP
4401  8506              00811 	STA RESULT
4403  A507              00812 	LDA RESULT+1
4405  6503              00813 	ADC TEMP+1
4407  8507              00814 	STA RESULT+1
4409  18                00815 	CLC
440A                    00816 .3:
440A  CA                00817 	DEX
440B  10D9              00818 	BPL .2
440D  A506              00819 	LDA RESULT
440F  A407              00820 	LDY RESULT+1
4411  60                00821 	RTS
4412                    00822 
4412                    00823 	; Random number generator.
4412                    00824 	; From my game Mecha Eight.
4412                    00825 RANDOM:
4412  A526              00826 	LDA LFSR
4414  0527              00827 	ORA LFSR+1
4416  D008              00828 	BNE .0
4418  A911              00829 	LDA #$11
441A  8526              00830 	STA LFSR
441C  A978              00831 	LDA #$78
441E  8527              00832 	STA LFSR+1
4420  A527              00833 .0:	LDA LFSR+1
4422  6A                00834 	ROR A	
4423  6A                00835 	ROR A		
4424  6A                00836 	ROR A		
4425  4527              00837 	EOR LFSR+1	
4427  8502              00838 	STA TEMP
4429  A527              00839 	LDA LFSR+1
442B  6A                00840 	ROR A
442C  6A                00841 	ROR A
442D  4502              00842 	EOR TEMP
442F  8502              00843 	STA TEMP
4431  A526              00844 	LDA LFSR
4433  0A                00845 	ASL A
4434  0A                00846 	ASL A
4435  4502              00847 	EOR TEMP
4437  2A                00848 	ROL A
4438  6627              00849 	ROR LFSR+1
443A  6626              00850 	ROR LFSR
443C  A526              00851 	LDA LFSR
443E  A427              00852 	LDY LFSR+1
4440  60                00853 	RTS
4441                    00854 
4441                    00855 SN76489_FREQ:
4441  8502              00856 	STA TEMP
4443  8403              00857 	STY TEMP+1
4445  8604              00858 	STX TEMP2
4447  290F              00859 	AND #$0F
4449  0504              00860 	ORA TEMP2
444B  2077FE            00861 	JSR BIOS_WRITE_PSG
444E  A503              00862 	LDA TEMP+1
4450  0602              00863 	ASL TEMP
4452  2A                00864 	ROL A
4453  0602              00865 	ASL TEMP
4455  2A                00866 	ROL A
4456  0602              00867 	ASL TEMP
4458  2A                00868 	ROL A
4459  0602              00869 	ASL TEMP
445B  2A                00870 	ROL A
445C  293F              00871 	AND #$3F	
445E  4C77FE            00872 	JMP BIOS_WRITE_PSG
4461                    00873 	
4461                    00874 SN76489_VOL:
4461  8604              00875 	STX TEMP2
4463  49FF              00876 	EOR #$FF
4465  290F              00877 	AND #$0F
4467  0504              00878 	ORA TEMP2
4469  4C77FE            00879 	JMP BIOS_WRITE_PSG
446C                    00880 
446C                    00881 SN76489_CONTROL:
446C  290F              00882 	AND #$0F
446E  09E0              00883 	ORA #$E0
4470  4C77FE            00884 	JMP BIOS_WRITE_PSG
4473                    00885 
4473                    00886 VDP_GENERIC_MODE:
4473  78                00887 	SEI
4474  200040            00888 	JSR WRTVDP
4477  A9A2              00889 	LDA #$A2
4479  A201              00890 	LDX #$01
447B  200040            00891 	JSR WRTVDP
447E  A906              00892 	LDA #$06	; $1800 for pattern table.
4480  A202              00893 	LDX #$02
4482  200040            00894 	JSR WRTVDP
4485  A502              00895 	LDA TEMP
4487  A203              00896 	LDX #$03	; for color table.
4489  200040            00897 	JSR WRTVDP
448C  A503              00898 	LDA TEMP+1
448E  A204              00899 	LDX #$04	; for bitmap table.
4490  200040            00900 	JSR WRTVDP
4493  A936              00901 	LDA #$36	; $1b00 for sprite attribute table.
4495  A205              00902 	LDX #$05
4497  200040            00903 	JSR WRTVDP
449A  A907              00904 	LDA #$07	; $3800 for sprites bitmaps.
449C  A206              00905 	LDX #$06
449E  200040            00906 	JSR WRTVDP
44A1  A901              00907 	LDA #$01
44A3  A207              00908 	LDX #$07
44A5  4C0040            00909 	JMP WRTVDP
44A8                    00910 
44A8                    00911 MODE_0:
44A8  A528              00912 	LDA MODE
44AA  29FB              00913 	AND #$FB
44AC  8528              00914 	STA MODE
44AE  A9FF              00915 	LDA #$FF	; $2000 for color table.
44B0  8502              00916 	STA TEMP
44B2  A903              00917 	LDA #$03	; $0000 for bitmaps
44B4  8503              00918 	STA TEMP+1
44B6  A902              00919 	LDA #$02
44B8  A200              00920 	LDX #$00
44BA  207344            00921 	JSR VDP_GENERIC_MODE
44BD  A9F2              00922 	LDA #FONT_BITMAPS
44BF  A046              00923 	LDY #FONT_BITMAPS>>8
44C1  8502              00924 	STA TEMP
44C3  8403              00925 	STY TEMP+1
44C5  A900              00926 	LDA #$00
44C7  8508              00927 	STA POINTER
44C9  8504              00928 	STA TEMP2
44CB  A901              00929 	LDA #$01
44CD  8509              00930 	STA POINTER+1
44CF  A903              00931 	LDA #$03
44D1  8505              00932 	STA TEMP2+1
44D3  207C40            00933 	JSR LDIRVM3
44D6  58                00934 	CLI
44D7  78                00935 	SEI
44D8  A9F0              00936 	LDA #$F0
44DA  8502              00937 	STA TEMP
44DC  A900              00938 	LDA #$00
44DE  8508              00939 	STA POINTER
44E0  8504              00940 	STA TEMP2
44E2  A020              00941 	LDY #$2000>>8
44E4  8409              00942 	STY POINTER+1
44E6  A018              00943 	LDY #$1800>>8
44E8  8405              00944 	STY TEMP2+1
44EA  203C40            00945 	JSR FILVRM
44ED  58                00946 	CLI
44EE  200741            00947 	JSR CLS
44F1                    00948 VDP_GENERIC_SPRITES:
44F1  A9D1              00949 	LDA #$D1
44F3  8502              00950 	STA TEMP
44F5  A900              00951 	LDA #$00
44F7  8508              00952 	STA POINTER
44F9  8505              00953 	STA TEMP2+1
44FB  A01B              00954 	LDY #$1B00>>8
44FD  8409              00955 	STY POINTER+1
44FF  A980              00956 	LDA #$80
4501  8504              00957 	STA TEMP2
4503  78                00958 	SEI
4504  203C40            00959 	JSR FILVRM
4507  A27F              00960 	LDX #$7F
4509  A9D1              00961 	LDA #$D1
450B                    00962 .1:
450B  9D8001            00963 	STA SPRITES,X
450E  CA                00964 	DEX
450F  10FA              00965 	BPL .1
4511  A9E2              00966 	LDA #$E2
4513  A201              00967 	LDX #$01
4515  200040            00968 	JSR WRTVDP
4518  58                00969 	CLI
4519  60                00970 	RTS
451A                    00971 
451A                    00972 MODE_1:
451A  A528              00973 	LDA MODE
451C  29FB              00974 	AND #$FB
451E  8528              00975 	STA MODE
4520  A9FF              00976 	LDA #$FF	; $2000 for color table.
4522  8502              00977 	STA TEMP
4524  A903              00978 	LDA #$03	; $0000 for bitmaps
4526  8503              00979 	STA TEMP+1
4528  A902              00980 	LDA #$02
452A  A200              00981 	LDX #$00
452C  207344            00982 	JSR VDP_GENERIC_MODE
452F  A900              00983 	LDA #$00
4531  8502              00984 	STA TEMP
4533  8508              00985 	STA POINTER
4535  8509              00986 	STA POINTER+1
4537  8504              00987 	STA TEMP2
4539  A918              00988 	LDA #$18
453B  8505              00989 	STA TEMP2+1
453D  203C40            00990 	JSR FILVRM
4540  58                00991 	CLI
4541  A9F0              00992 	LDA #$F0
4543  8502              00993 	STA TEMP
4545  A900              00994 	LDA #$00
4547  8508              00995 	STA POINTER
4549  8504              00996 	STA TEMP2
454B  A020              00997 	LDY #$2000>>8
454D  8409              00998 	STY POINTER+1
454F  A018              00999 	LDY #$1800>>8
4551  8405              01000 	STY TEMP2+1
4553  78                01001 	SEI
4554  203C40            01002 	JSR FILVRM
4557  58                01003 	CLI
4558  A900              01004 	LDA #$1800
455A  A018              01005 	LDY #$1800>>8
455C  8508              01006 	STA POINTER
455E  8409              01007 	STY POINTER+1
4560  78                01008 .1:	SEI
4561  A508              01009 	LDA POINTER
4563  A409              01010 	LDY POINTER+1
4565  200A40            01011 	JSR SETWRT
4568  A220              01012 	LDX #32
456A  A408              01013 	LDY POINTER
456C                    01014 .2:
456C  98                01015 	TYA		; 2
456D  8D0030            01016 	STA $3000	; 4
4570  EA                01017 	NOP		; 2
4571  EA                01018 	NOP		; 2
4572  EA                01019 	NOP		; 2
4573  C8                01020 	INY		; 2
4574  CA                01021 	DEX		; 2
4575  D0F5              01022 	BNE .2		; 2/3/4
4577  58                01023 	CLI
4578  A508              01024 	LDA POINTER
457A  18                01025 	CLC
457B  6920              01026 	ADC #32
457D  8508              01027 	STA POINTER
457F  90DF              01028 	BCC .1
4581  E609              01029 	INC POINTER+1
4583  A509              01030 	LDA POINTER+1
4585  C91B              01031 	CMP #$1B
4587  D0D7              01032 	BNE .1
4589  4CF144            01033 	JMP VDP_GENERIC_SPRITES
458C                    01034 
458C                    01035 MODE_2:
458C  A528              01036 	LDA MODE
458E  0904              01037 	ORA #$04
4590  8528              01038 	STA MODE
4592  A980              01039 	LDA #$80	; $2000 for color table.
4594  8502              01040 	STA TEMP
4596  A900              01041 	LDA #$00	; $0000 for bitmaps
4598  8503              01042 	STA TEMP+1
459A  A900              01043 	LDA #$00
459C  A200              01044 	LDX #$00
459E  207344            01045 	JSR VDP_GENERIC_MODE
45A1  A9F2              01046 	LDA #FONT_BITMAPS
45A3  A046              01047 	LDY #FONT_BITMAPS>>8
45A5  8502              01048 	STA TEMP
45A7  8403              01049 	STY TEMP+1
45A9  A900              01050 	LDA #$00
45AB  8508              01051 	STA POINTER
45AD  8504              01052 	STA TEMP2
45AF  A001              01053 	LDY #$0100>>8
45B1  8409              01054 	STY POINTER+1
45B3  A003              01055 	LDY #$0300>>8
45B5  8405              01056 	STY TEMP2+1
45B7  205940            01057 	JSR LDIRVM
45BA  58                01058 	CLI
45BB  78                01059 	SEI
45BC  A9F0              01060 	LDA #$F0
45BE  8502              01061 	STA TEMP
45C0  A900              01062 	LDA #$00
45C2  8508              01063 	STA POINTER
45C4  8505              01064 	STA TEMP2+1
45C6  A020              01065 	LDY #$2000>>8
45C8  8409              01066 	STY POINTER+1
45CA  A920              01067 	LDA #$20
45CC  8504              01068 	STA TEMP2
45CE  203C40            01069 	JSR FILVRM
45D1  58                01070 	CLI
45D2  200741            01071 	JSR CLS
45D5  4CF144            01072 	JMP VDP_GENERIC_SPRITES
45D8                    01073 
45D8                    01074 INT_HANDLER:
45D8  48                01075 	PHA
45D9  8A                01076 	TXA
45DA  48                01077 	PHA
45DB  98                01078 	TYA
45DC  48                01079 	PHA
45DD  AD0120            01080 	LDA $2001	; VDP interruption clear.
45E0  A900              01081 	LDA #$1B00
45E2  A01B              01082 	LDY #$1B00>>8
45E4  200A40            01083 	JSR SETWRT
45E7  A528              01084 	LDA MODE
45E9  2904              01085 	AND #$04
45EB  F012              01086 	BEQ .4
45ED  A200              01087 	LDX #0
45EF  BD8001            01088 .7:	LDA SPRITES,X	; 4
45F2  8D0030            01089 	STA $3000	; 4
45F5  EA                01090 	NOP		; 2
45F6  EA                01091 	NOP		; 2
45F7  E8                01092 	INX		; 2
45F8  E080              01093 	CPX #$80	; 2
45FA  D0F3              01094 	BNE .7		; 2/3/4
45FC  4C3F46            01095 	JMP .5
45FF                    01096 
45FF  A529              01097 .4:	LDA FLICKER
4601  18                01098 	CLC
4602  6904              01099 	ADC #4
4604  297F              01100 	AND #$7F
4606  8529              01101 	STA FLICKER
4608  AA                01102 	TAX
4609  A01F              01103 	LDY #31
460B                    01104 .6:
460B  BD8001            01105 	LDA SPRITES,X
460E  8D0030            01106 	STA $3000	
4611  EA                01107 	NOP
4612  EA                01108 	NOP
4613  EA                01109 	NOP
4614  EA                01110 	NOP
4615  EA                01111 	NOP
4616  E8                01112 	INX
4617  BD8001            01113 	LDA SPRITES,X
461A  8D0030            01114 	STA $3000
461D  EA                01115 	NOP
461E  EA                01116 	NOP
461F  EA                01117 	NOP
4620  EA                01118 	NOP
4621  EA                01119 	NOP
4622  E8                01120 	INX
4623  BD8001            01121 	LDA SPRITES,X
4626  8D0030            01122 	STA $3000
4629  EA                01123 	NOP
462A  EA                01124 	NOP
462B  EA                01125 	NOP
462C  EA                01126 	NOP
462D  EA                01127 	NOP
462E  E8                01128 	INX
462F  BD8001            01129 	LDA SPRITES,X
4632  8D0030            01130 	STA $3000
4635  8A                01131 	TXA
4636  18                01132 	CLC
4637  6919              01133 	ADC #25
4639  297F              01134 	AND #$7F
463B  AA                01135 	TAX
463C  88                01136 	DEY
463D  10CC              01137 	BPL .6
463F                    01138 .5:
463F  2000FA            01139 	JSR BIOS_READ_CONTROLLERS
4642                    01140 
4642  A611              01141 	LDX JOY1_DIR
4644  A516              01142 	LDA JOY1_BUTTONS
4646  209846            01143 	JSR CONVERT_JOYSTICK
4649  8520              01144 	STA JOY1_DATA
464B                    01145 
464B  A613              01146 	LDX JOY2_DIR
464D  A517              01147 	LDA JOY2_BUTTONS
464F  4A                01148 	LSR A
4650  4A                01149 	LSR A
4651  209846            01150 	JSR CONVERT_JOYSTICK
4654  8521              01151 	STA JOY2_DATA
4656                    01152 
4656                    01153     IF CVBASIC_MUSIC_PLAYER
4656                    01154 	LDA MUSIC_MODE
4656                    01155 	BEQ .10
4656                    01156 	JSR MUSIC_HARDWARE
4656                    01157 .10:
4656                    01158     ENDIF
4656  E624              01159 	INC FRAME
4658  D002              01160 	BNE .8
465A  E625              01161 	INC FRAME+1
465C                    01162 .8:
465C  E626              01163 	INC LFSR	; Make LFSR more random
465E  E626              01164 	INC LFSR
4660  E626              01165 	INC LFSR
4662                    01166     IF CVBASIC_MUSIC_PLAYER
4662                    01167 	LDA MUSIC_MODE
4662                    01168 	BEQ .9
4662                    01169 	JSR MUSIC_GENERATE
4662                    01170 .9:
4662                    01171     ENDIF
4662                    01172 	; This is like saving extra registers, because these
4662                    01173 	; are used by the compiled code, and we don't want
4662                    01174 	; any reentrancy.
4662  A502              01175 	LDA TEMP+0
4664  48                01176 	PHA
4665  A503              01177 	LDA TEMP+1
4667  48                01178 	PHA
4668  A504              01179 	LDA TEMP+2
466A  48                01180 	PHA
466B  A505              01181 	LDA TEMP+3
466D  48                01182 	PHA
466E  A506              01183 	LDA TEMP+4
4670  48                01184 	PHA
4671  A507              01185 	LDA TEMP+5
4673  48                01186 	PHA
4674  A508              01187 	LDA TEMP+6
4676  48                01188 	PHA
4677  A509              01189 	LDA TEMP+7
4679  48                01190 	PHA
467A  68                01191 	PLA
467B  8509              01192 	STA TEMP+7
467D  68                01193 	PLA
467E  8508              01194 	STA TEMP+6
4680  68                01195 	PLA
4681  8507              01196 	STA TEMP+5
4683  68                01197 	PLA
4684  8506              01198 	STA TEMP+4
4686  68                01199 	PLA
4687  8505              01200 	STA TEMP+3
4689  68                01201 	PLA
468A  8504              01202 	STA TEMP+2
468C  68                01203 	PLA
468D  8503              01204 	STA TEMP+1
468F  68                01205 	PLA
4690  8502              01206 	STA TEMP+0
4692                    01207 
4692  68                01208 	PLA
4693  A8                01209 	TAY
4694  68                01210 	PLA
4695  AA                01211 	TAX
4696  68                01212 	PLA
4697  40                01213 	RTI
4698                    01214 
4698                    01215 CONVERT_JOYSTICK:
4698  6A                01216 	ROR A
4699  6A                01217 	ROR A
469A  6A                01218 	ROR A
469B  29C0              01219 	AND #$C0
469D  A8                01220 	TAY
469E  8A                01221 	TXA
469F  F013              01222 	BEQ .1
46A1  290F              01223 	AND #$0F
46A3  AA                01224 	TAX
46A4  A524              01225 	LDA FRAME
46A6  2901              01226 	AND #1
46A8  F005              01227 	BEQ .2
46AA  98                01228 	TYA
46AB  1DB646            01229 	ORA JOYSTICK_TABLE,X
46AE  60                01230 	RTS
46AF                    01231 .2:
46AF  98                01232 	TYA
46B0  1DC646            01233 	ORA JOYSTICK_TABLE+16,X
46B3  60                01234 	RTS
46B4                    01235 
46B4  98                01236 .1:	TYA
46B5  60                01237 	RTS
46B6                    01238 
46B6                    01239 JOYSTICK_TABLE:
46B6  0404060602020303  01240 	DB $04,$04,$06,$06,$02,$02,$03,$03
46BE  0101090908080C0C  01241 	DB $01,$01,$09,$09,$08,$08,$0C,$0C
46C6                    01242 
46C6  0C04040606020203  01243 	DB $0C,$04,$04,$06,$06,$02,$02,$03
46CE  030101090908080C  01244 	DB $03,$01,$01,$09,$09,$08,$08,$0C
46D6                    01245 
46D6                    01246 WAIT:
46D6  A524              01247 	LDA FRAME
46D8  C524              01248 .1:	CMP FRAME
46DA  F0FC              01249 	BEQ .1
46DC  60                01250 	RTS
46DD                    01251 
46DD                    01252 MUSIC_INIT:
46DD  A99F              01253 	LDA #$9F
46DF  2077FE            01254 	JSR BIOS_WRITE_PSG	
46E2  A9BF              01255 	LDA #$BF
46E4  2077FE            01256 	JSR BIOS_WRITE_PSG	
46E7  A9DF              01257 	LDA #$DF
46E9  2077FE            01258 	JSR BIOS_WRITE_PSG	
46EC  A9FF              01259 	LDA #$FF
46EE  2077FE            01260 	JSR BIOS_WRITE_PSG
46F1                    01261     IF CVBASIC_MUSIC_PLAYER
46F1                    01262     ELSE	
46F1  60                01263 	RTS
46F2                    01264     ENDIF
46F2                    01265 
46F2                    01266     IF CVBASIC_MUSIC_PLAYER
46F2                    01267 	LDA #$FF
46F2                    01268 	STA AUDIO_VOL4HW
46F2                    01269 	LDA #$00
46F2                    01270 	STA AUDIO_CONTROL
46F2                    01271 	LDA #MUSIC_SILENCE
46F2                    01272 	LDY #MUSIC_SILENCE>>8
46F2                    01273 	;
46F2                    01274 	; Play music.
46F2                    01275 	; YA = Pointer to music.
46F2                    01276 	;
46F2                    01277 MUSIC_PLAY:
46F2                    01278 	SEI
46F2                    01279 	STA MUSIC_POINTER
46F2                    01280 	STY MUSIC_POINTER+1
46F2                    01281 	LDY #0
46F2                    01282 	STY MUSIC_NOTE_COUNTER
46F2                    01283 	LDA (MUSIC_POINTER),Y
46F2                    01284 	STA MUSIC_TIMING
46F2                    01285 	INY
46F2                    01286 	STY MUSIC_PLAYING
46F2                    01287 	INC MUSIC_POINTER
46F2                    01288 	BNE $+4
46F2                    01289 	INC MUSIC_POINTER+1
46F2                    01290 	LDA MUSIC_POINTER
46F2                    01291 	LDY MUSIC_POINTER+1
46F2                    01292 	STA MUSIC_START
46F2                    01293 	STY MUSIC_START+1
46F2                    01294 	CLI
46F2                    01295 	RTS
46F2                    01296 
46F2                    01297 	;
46F2                    01298 	; Generates music
46F2                    01299 	;
46F2                    01300 MUSIC_GENERATE:
46F2                    01301 	LDA #0
46F2                    01302 	STA AUDIO_VOL1
46F2                    01303 	STA AUDIO_VOL2
46F2                    01304 	STA AUDIO_VOL3
46F2                    01305 	LDA #$FF
46F2                    01306 	STA AUDIO_VOL4HW
46F2                    01307 	LDA MUSIC_NOTE_COUNTER
46F2                    01308 	BEQ .1
46F2                    01309 	JMP .2
46F2                    01310 .1:
46F2                    01311 	LDY #0
46F2                    01312 	LDA (MUSIC_POINTER),Y
46F2                    01313 	CMP #$FE	; End of music?
46F2                    01314 	BNE .3		; No, jump.
46F2                    01315 	LDA #0		; Keep at same place.
46F2                    01316 	STA MUSIC_PLAYING
46F2                    01317 	RTS
46F2                    01318 
46F2                    01319 .3:	CMP #$FD	; Repeat music?
46F2                    01320 	BNE .4
46F2                    01321 	LDA MUSIC_START
46F2                    01322 	LDY MUSIC_START+1
46F2                    01323 	STA MUSIC_POINTER
46F2                    01324 	STY MUSIC_POINTER+1
46F2                    01325 	JMP .1
46F2                    01326 
46F2                    01327 .4:	LDA MUSIC_TIMING
46F2                    01328 	AND #$3F	; Restart note time.
46F2                    01329 	STA MUSIC_NOTE_COUNTER
46F2                    01330 
46F2                    01331 	LDA (MUSIC_POINTER),Y
46F2                    01332 	CMP #$3F	; Sustain?
46F2                    01333 	BEQ .5
46F2                    01334 	AND #$C0
46F2                    01335 	STA MUSIC_INSTRUMENT_1
46F2                    01336 	LDA (MUSIC_POINTER),Y
46F2                    01337 	AND #$3F
46F2                    01338 	ASL A
46F2                    01339 	STA MUSIC_NOTE_1
46F2                    01340 	LDA #0
46F2                    01341 	STA MUSIC_COUNTER_1
46F2                    01342 .5:
46F2                    01343 	INY
46F2                    01344 	LDA (MUSIC_POINTER),Y
46F2                    01345 	CMP #$3F	; Sustain?
46F2                    01346 	BEQ .6
46F2                    01347 	AND #$C0
46F2                    01348 	STA MUSIC_INSTRUMENT_2
46F2                    01349 	LDA (MUSIC_POINTER),Y
46F2                    01350 	AND #$3F
46F2                    01351 	ASL A
46F2                    01352 	STA MUSIC_NOTE_2
46F2                    01353 	LDA #0
46F2                    01354 	STA MUSIC_COUNTER_2
46F2                    01355 .6:
46F2                    01356 	INY
46F2                    01357 	LDA (MUSIC_POINTER),Y
46F2                    01358 	CMP #$3F	; Sustain?
46F2                    01359 	BEQ .7
46F2                    01360 	AND #$C0
46F2                    01361 	STA MUSIC_INSTRUMENT_3
46F2                    01362 	LDA (MUSIC_POINTER),Y
46F2                    01363 	AND #$3F
46F2                    01364 	ASL A
46F2                    01365 	STA MUSIC_NOTE_3
46F2                    01366 	LDA #0
46F2                    01367 	STA MUSIC_COUNTER_3
46F2                    01368 .7:
46F2                    01369 	INY
46F2                    01370 	LDA (MUSIC_POINTER),Y
46F2                    01371 	STA MUSIC_DRUM
46F2                    01372 	LDA #0	
46F2                    01373 	STA MUSIC_COUNTER_4
46F2                    01374 	LDA MUSIC_POINTER
46F2                    01375 	CLC
46F2                    01376 	ADC #4
46F2                    01377 	STA MUSIC_POINTER
46F2                    01378 	LDA MUSIC_POINTER+1
46F2                    01379 	ADC #0
46F2                    01380 	STA MUSIC_POINTER+1
46F2                    01381 .2:
46F2                    01382 	LDY MUSIC_NOTE_1
46F2                    01383 	BEQ .8
46F2                    01384 	LDA MUSIC_INSTRUMENT_1
46F2                    01385 	LDX MUSIC_COUNTER_1
46F2                    01386 	JSR MUSIC_NOTE2FREQ
46F2                    01387 	STA AUDIO_FREQ1
46F2                    01388 	STY AUDIO_FREQ1+1
46F2                    01389 	STX AUDIO_VOL1
46F2                    01390 .8:
46F2                    01391 	LDY MUSIC_NOTE_2
46F2                    01392 	BEQ .9
46F2                    01393 	LDA MUSIC_INSTRUMENT_2
46F2                    01394 	LDX MUSIC_COUNTER_2
46F2                    01395 	JSR MUSIC_NOTE2FREQ
46F2                    01396 	STA AUDIO_FREQ2
46F2                    01397 	STY AUDIO_FREQ2+1
46F2                    01398 	STX AUDIO_VOL2
46F2                    01399 .9:
46F2                    01400 	LDY MUSIC_NOTE_3
46F2                    01401 	BEQ .10
46F2                    01402 	LDA MUSIC_INSTRUMENT_3
46F2                    01403 	LDX MUSIC_COUNTER_3
46F2                    01404 	JSR MUSIC_NOTE2FREQ
46F2                    01405 	STA AUDIO_FREQ3
46F2                    01406 	STY AUDIO_FREQ3+1
46F2                    01407 	STX AUDIO_VOL3
46F2                    01408 .10:
46F2                    01409 	LDA MUSIC_DRUM
46F2                    01410 	BEQ .11
46F2                    01411 	CMP #1		; 1 - Long drum.
46F2                    01412 	BNE .12
46F2                    01413 	LDA MUSIC_COUNTER_4
46F2                    01414 	CMP #3
46F2                    01415 	BCS .11
46F2                    01416 .15:
46F2                    01417 	LDA #$EC
46F2                    01418 	STA AUDIO_NOISE
46F2                    01419 	LDA #$F5
46F2                    01420 	STA AUDIO_VOL4HW
46F2                    01421 	JMP .11
46F2                    01422 
46F2                    01423 .12:	CMP #2		; 2 - Short drum.
46F2                    01424 	BNE .14
46F2                    01425 	LDA MUSIC_COUNTER_4
46F2                    01426 	CMP #0
46F2                    01427 	BNE .11
46F2                    01428 	LDA #$ED
46F2                    01429 	STA AUDIO_NOISE
46F2                    01430 	LDA #$F5
46F2                    01431 	STA AUDIO_VOL4HW
46F2                    01432 	JMP .11
46F2                    01433 
46F2                    01434 .14:	;CMP #3		; 3 - Roll.
46F2                    01435 	;BNE
46F2                    01436 	LDA MUSIC_COUNTER_4
46F2                    01437 	CMP #2
46F2                    01438 	BCC .15
46F2                    01439 	ASL A
46F2                    01440 	SEC
46F2                    01441 	SBC MUSIC_TIMING
46F2                    01442 	BCC .11
46F2                    01443 	CMP #4
46F2                    01444 	BCC .15
46F2                    01445 .11:
46F2                    01446 	LDX MUSIC_COUNTER_1
46F2                    01447 	INX
46F2                    01448 	CPX #$18
46F2                    01449 	BNE $+4
46F2                    01450 	LDX #$10
46F2                    01451 	STX MUSIC_COUNTER_1
46F2                    01452 
46F2                    01453 	LDX MUSIC_COUNTER_2
46F2                    01454 	INX
46F2                    01455 	CPX #$18
46F2                    01456 	BNE $+4
46F2                    01457 	LDX #$10
46F2                    01458 	STX MUSIC_COUNTER_2
46F2                    01459 
46F2                    01460 	LDX MUSIC_COUNTER_3
46F2                    01461 	INX
46F2                    01462 	CPX #$18
46F2                    01463 	BNE $+4
46F2                    01464 	LDX #$10
46F2                    01465 	STX MUSIC_COUNTER_3
46F2                    01466 
46F2                    01467 	INC MUSIC_COUNTER_4
46F2                    01468 	DEC MUSIC_NOTE_COUNTER
46F2                    01469 	RTS
46F2                    01470 
46F2                    01471 MUSIC_FLUTE:
46F2                    01472 	LDA MUSIC_NOTES_TABLE,Y
46F2                    01473 	CLC
46F2                    01474 	ADC .2,X
46F2                    01475 	PHA
46F2                    01476 	LDA MUSIC_NOTES_TABLE+1,Y
46F2                    01477 	ADC #0
46F2                    01478 	TAY
46F2                    01479 	LDA .1,X
46F2                    01480 	TAX
46F2                    01481 	PLA
46F2                    01482 	RTS
46F2                    01483 
46F2                    01484 .1:
46F2                    01485         DB 10,12,13,13,12,12,12,12
46F2                    01486         DB 11,11,11,11,10,10,10,10
46F2                    01487         DB 11,11,11,11,10,10,10,10
46F2                    01488 
46F2                    01489 .2:
46F2                    01490 	DB 0,0,0,0,0,1,1,1
46F2                    01491 	DB 0,1,1,1,0,1,1,1
46F2                    01492 	DB 0,1,1,1,0,1,1,1
46F2                    01493 
46F2                    01494 	;
46F2                    01495 	; Converts note to frequency.
46F2                    01496 	; Input:
46F2                    01497 	;   A = Instrument.
46F2                    01498 	;   Y = Note (1-62)
46F2                    01499 	;   X = Instrument counter.
46F2                    01500 	; Output:
46F2                    01501 	;   YA = Frequency.
46F2                    01502 	;   X = Volume.
46F2                    01503 	;
46F2                    01504 MUSIC_NOTE2FREQ:
46F2                    01505 	CMP #$40
46F2                    01506 	BCC MUSIC_PIANO
46F2                    01507 	BEQ MUSIC_CLARINET
46F2                    01508 	CMP #$80
46F2                    01509 	BEQ MUSIC_FLUTE
46F2                    01510 	;
46F2                    01511 	; Bass instrument
46F2                    01512 	; 
46F2                    01513 MUSIC_BASS:
46F2                    01514 	LDA MUSIC_NOTES_TABLE,Y
46F2                    01515 	ASL A
46F2                    01516 	PHA
46F2                    01517 	LDA MUSIC_NOTES_TABLE+1,Y
46F2                    01518 	ROL A
46F2                    01519 	TAY
46F2                    01520 	LDA .1,X
46F2                    01521 	TAX
46F2                    01522 	PLA
46F2                    01523 	RTS
46F2                    01524 
46F2                    01525 .1:
46F2                    01526 	DB 13,13,12,12,11,11,10,10
46F2                    01527 	DB 9,9,8,8,7,7,6,6
46F2                    01528 	DB 5,5,4,4,3,3,2,2
46F2                    01529 
46F2                    01530 MUSIC_PIANO:
46F2                    01531 	LDA MUSIC_NOTES_TABLE,Y
46F2                    01532 	PHA
46F2                    01533 	LDA MUSIC_NOTES_TABLE+1,Y
46F2                    01534 	TAY
46F2                    01535 	LDA .1,X
46F2                    01536 	TAX
46F2                    01537 	PLA
46F2                    01538 	RTS
46F2                    01539 
46F2                    01540 .1:	DB 12,11,11,10,10,9,9,8
46F2                    01541 	DB 8,7,7,6,6,5,5,4
46F2                    01542 	DB 4,4,5,5,4,4,3,3
46F2                    01543 
46F2                    01544 MUSIC_CLARINET:
46F2                    01545 	LDA MUSIC_NOTES_TABLE,Y
46F2                    01546 	CLC
46F2                    01547 	ADC .2,X
46F2                    01548 	PHA
46F2                    01549 	LDA .2,X
46F2                    01550 	BMI .3
46F2                    01551 	LDA #$00
46F2                    01552 	DB $2C
46F2                    01553 .3:	LDA #$FF
46F2                    01554 	ADC MUSIC_NOTES_TABLE+1,Y
46F2                    01555 	LSR A
46F2                    01556 	TAY
46F2                    01557 	LDA .1,X
46F2                    01558 	TAX
46F2                    01559 	PLA
46F2                    01560 	ROR A
46F2                    01561 	RTS
46F2                    01562 
46F2                    01563 .1:
46F2                    01564         DB 13,14,14,13,13,12,12,12
46F2                    01565         DB 11,11,11,11,12,12,12,12
46F2                    01566         DB 11,11,11,11,12,12,12,12
46F2                    01567 
46F2                    01568 .2:
46F2                    01569 	DB 0,0,0,0,-1,-2,-1,0
46F2                    01570 	DB 1,2,1,0,-1,-2,-1,0
46F2                    01571 	DB 1,2,1,0,-1,-2,-1,0
46F2                    01572 
46F2                    01573 	;
46F2                    01574 	; Musical notes table.
46F2                    01575 	;
46F2                    01576 MUSIC_NOTES_TABLE:
46F2                    01577 	; Silence - 0
46F2                    01578 	DW 0
46F2                    01579 	; Values for 2.00 mhz.
46F2                    01580 	; 2nd octave - Index 1
46F2                    01581 	DW 956,902,851,804,758,716,676,638,602,568,536,506
46F2                    01582 	; 3rd octave - Index 13
46F2                    01583 	DW 478,451,426,402,379,358,338,319,301,284,268,253
46F2                    01584 	; 4th octave - Index 25
46F2                    01585 	DW 239,225,213,201,190,179,169,159,150,142,134,127
46F2                    01586 	; 5th octave - Index 37
46F2                    01587 	DW 119,113,106,100,95,89,84,80,75,71,67,63
46F2                    01588 	; 6th octave - Index 49
46F2                    01589 	DW 60,56,53,50,47,45,42,40,38,36,34,32
46F2                    01590 	; 7th octave - Index 61
46F2                    01591 	DW 30,28,27
46F2                    01592 
46F2                    01593 MUSIC_HARDWARE:
46F2                    01594 	LDA MUSIC_MODE
46F2                    01595 	CMP #4		; PLAY SIMPLE?
46F2                    01596 	BCC .7		; Yes, jump.
46F2                    01597 	LDA AUDIO_VOL2
46F2                    01598 	BNE .7
46F2                    01599 	LDA AUDIO_VOL3
46F2                    01600 	BEQ .7
46F2                    01601 	STA AUDIO_VOL2
46F2                    01602 	LDA #0
46F2                    01603 	STA AUDIO_VOL3
46F2                    01604 	LDA AUDIO_FREQ3
46F2                    01605 	LDY AUDIO_FREQ3+1
46F2                    01606 	STA AUDIO_FREQ2
46F2                    01607 	STY AUDIO_FREQ2+1
46F2                    01608 .7:
46F2                    01609 	LDA AUDIO_FREQ1+1
46F2                    01610 	CMP #$04
46F2                    01611 	LDA #$9F
46F2                    01612 	BCS .1
46F2                    01613 	LDA AUDIO_FREQ1
46F2                    01614 	AND #$0F
46F2                    01615 	ORA #$80
46F2                    01616 	JSR BIOS_WRITE_PSG
46F2                    01617 	LDA AUDIO_FREQ1+1
46F2                    01618 	ASL AUDIO_FREQ1
46F2                    01619 	ROL A
46F2                    01620 	ASL AUDIO_FREQ1
46F2                    01621 	ROL A
46F2                    01622 	ASL AUDIO_FREQ1
46F2                    01623 	ROL A
46F2                    01624 	ASL AUDIO_FREQ1
46F2                    01625 	ROL A
46F2                    01626 	JSR BIOS_WRITE_PSG
46F2                    01627 	LDX AUDIO_VOL1
46F2                    01628 	LDA AY2SN,X
46F2                    01629 	ORA #$90
46F2                    01630 .1:	JSR BIOS_WRITE_PSG
46F2                    01631 
46F2                    01632 	LDA AUDIO_FREQ2+1
46F2                    01633 	CMP #$04
46F2                    01634 	LDA #$BF
46F2                    01635 	BCS .2
46F2                    01636 	LDA AUDIO_FREQ2
46F2                    01637 	AND #$0F
46F2                    01638 	ORA #$A0
46F2                    01639 	JSR BIOS_WRITE_PSG
46F2                    01640 	LDA AUDIO_FREQ2+1
46F2                    01641 	ASL AUDIO_FREQ2
46F2                    01642 	ROL A
46F2                    01643 	ASL AUDIO_FREQ2
46F2                    01644 	ROL A
46F2                    01645 	ASL AUDIO_FREQ2
46F2                    01646 	ROL A
46F2                    01647 	ASL AUDIO_FREQ2
46F2                    01648 	ROL A
46F2                    01649 	JSR BIOS_WRITE_PSG
46F2                    01650 	LDX AUDIO_VOL2
46F2                    01651 	LDA AY2SN,X
46F2                    01652 	ORA #$B0
46F2                    01653 .2:	JSR BIOS_WRITE_PSG
46F2                    01654 
46F2                    01655 	LDA MUSIC_MODE
46F2                    01656 	CMP #4		; PLAY SIMPLE?
46F2                    01657 	BCC .6		; Yes, jump.
46F2                    01658 
46F2                    01659 	LDA AUDIO_FREQ3+1
46F2                    01660 	CMP #$04
46F2                    01661 	LDA #$DF
46F2                    01662 	BCS .3
46F2                    01663 	LDA AUDIO_FREQ3
46F2                    01664 	AND #$0F
46F2                    01665 	ORA #$C0
46F2                    01666 	JSR BIOS_WRITE_PSG
46F2                    01667 	LDA AUDIO_FREQ3+1
46F2                    01668 	ASL AUDIO_FREQ3
46F2                    01669 	ROL A
46F2                    01670 	ASL AUDIO_FREQ3
46F2                    01671 	ROL A
46F2                    01672 	ASL AUDIO_FREQ3
46F2                    01673 	ROL A
46F2                    01674 	ASL AUDIO_FREQ3
46F2                    01675 	ROL A
46F2                    01676 	JSR BIOS_WRITE_PSG
46F2                    01677 	LDX AUDIO_VOL3
46F2                    01678 	LDA AY2SN,X
46F2                    01679 	ORA #$D0
46F2                    01680 .3:	JSR BIOS_WRITE_PSG
46F2                    01681 
46F2                    01682 .6:	LDA MUSIC_MODE
46F2                    01683 	LSR A		; NO DRUMS?
46F2                    01684 	BCC .8
46F2                    01685 	LDA AUDIO_VOL4HW
46F2                    01686 	CMP #$FF
46F2                    01687 	BEQ .4
46F2                    01688 	LDA AUDIO_NOISE
46F2                    01689 	CMP AUDIO_CONTROL
46F2                    01690 	BEQ .4
46F2                    01691 	STA AUDIO_CONTROL
46F2                    01692 	JSR BIOS_WRITE_PSG
46F2                    01693 .4:	LDA AUDIO_VOL4HW
46F2                    01694 	JSR BIOS_WRITE_PSG
46F2                    01695 .8:
46F2                    01696 	RTS
46F2                    01697 
46F2                    01698         ;
46F2                    01699         ; Converts AY-3-8910 volume to SN76489
46F2                    01700         ;
46F2                    01701 AY2SN:
46F2                    01702         DB $0F,$0F,$0F,$0E,$0E,$0E,$0D,$0B,$0A,$08,$07,$05,$04,$03,$01,$00
46F2                    01703 
46F2                    01704 MUSIC_SILENCE:
46F2                    01705 	DB 8
46F2                    01706 	DB 0,0,0,0
46F2                    01707 	DB -2
46F2                    01708     ENDIF
46F2                    01709 
46F2                    01710     IF CVBASIC_COMPRESSION
46F2                    01711 DEFINE_CHAR_UNPACK:
46F2                    01712 	LDA #0
46F2                    01713 	STA POINTER+1
46F2                    01714 	LDA POINTER
46F2                    01715 	ASL A
46F2                    01716 	ROL POINTER+1
46F2                    01717 	ASL A
46F2                    01718 	ROL POINTER+1
46F2                    01719 	ASL A
46F2                    01720 	ROL POINTER+1
46F2                    01721 	STA POINTER
46F2                    01722 	LDA MODE
46F2                    01723 	AND #$04
46F2                    01724 	BEQ UNPACK3
46F2                    01725 	BNE UNPACK
46F2                    01726 
46F2                    01727 DEFINE_COLOR_UNPACK:
46F2                    01728 	LDA #4
46F2                    01729 	STA POINTER+1
46F2                    01730 	LDA POINTER
46F2                    01731 	ASL A
46F2                    01732 	ROL POINTER+1
46F2                    01733 	ASL A
46F2                    01734 	ROL POINTER+1
46F2                    01735 	ASL A
46F2                    01736 	ROL POINTER+1
46F2                    01737 	STA POINTER
46F2                    01738 UNPACK3:
46F2                    01739 	JSR .1
46F2                    01740 	JSR .1
46F2                    01741 .1:	LDA POINTER
46F2                    01742 	PHA
46F2                    01743 	LDA POINTER+1
46F2                    01744 	PHA
46F2                    01745 	LDA TEMP
46F2                    01746 	PHA
46F2                    01747 	LDA TEMP+1
46F2                    01748 	PHA
46F2                    01749 	JSR UNPACK
46F2                    01750 	PLA
46F2                    01751 	STA TEMP+1
46F2                    01752 	PLA
46F2                    01753 	STA TEMP
46F2                    01754 	PLA
46F2                    01755 	CLC
46F2                    01756 	ADC #8
46F2                    01757 	STA POINTER+1
46F2                    01758 	PLA
46F2                    01759 	STA POINTER
46F2                    01760 	RTS
46F2                    01761 
46F2                    01762         ;
46F2                    01763         ; Pletter-0.5c decompressor (XL2S Entertainment & Team Bomba)
46F2                    01764         ; Ported from Z80 original
46F2                    01765 	; temp = Pointer to source data
46F2                    01766 	; pointer = Pointer to target VRAM
46F2                    01767 	; temp2
46F2                    01768 	; temp2+1
46F2                    01769 	; result
46F2                    01770 	; result+1
46F2                    01771 	; pletter_off
46F2                    01772 	; pletter_off+1
46F2                    01773 	;
46F2                    01774 UNPACK:
46F2                    01775 	; Initialization
46F2                    01776 	LDY #0
46F2                    01777 	STY TEMP2
46F2                    01778 	LDA (TEMP),Y
46F2                    01779 	INC TEMP
46F2                    01780 	BNE $+4
46F2                    01781 	INC TEMP+1
46F2                    01782 	ASL A
46F2                    01783 	ROL TEMP2
46F2                    01784 	ADC #1
46F2                    01785 	ASL A
46F2                    01786 	ROL TEMP2
46F2                    01787 	ASL A
46F2                    01788 	STA PLETTER_BIT
46F2                    01789 	ROL TEMP2
46F2                    01790 	ROL TEMP2
46F2                    01791 	LDA #.MODES
46F2                    01792 	ADC TEMP2
46F2                    01793 	STA TEMP2
46F2                    01794 	LDA #.MODES>>8
46F2                    01795 	ADC #0
46F2                    01796 	STA TEMP2+1
46F2                    01797 	LDA (TEMP2),Y
46F2                    01798 	TAX
46F2                    01799 	INY
46F2                    01800 	LDA (TEMP2),Y
46F2                    01801 	STX TEMP2	; IX (temp2)
46F2                    01802 	STA TEMP2+1
46F2                    01803 	LDA PLETTER_BIT
46F2                    01804 .LITERAL:
46F2                    01805 	STA PLETTER_BIT
46F2                    01806 	LDY #0
46F2                    01807 	LDA (TEMP),Y
46F2                    01808 	INC TEMP
46F2                    01809 	BNE $+4
46F2                    01810 	INC TEMP+1
46F2                    01811 	TAX
46F2                    01812 	LDA POINTER
46F2                    01813 	LDY POINTER+1
46F2                    01814 	SEI
46F2                    01815 	JSR WRTVRM
46F2                    01816 	CLI
46F2                    01817 	INC POINTER
46F2                    01818 	BNE $+4
46F2                    01819 	INC POINTER+1
46F2                    01820 	LDA PLETTER_BIT
46F2                    01821 .LOOP:
46F2                    01822 	ASL A
46F2                    01823 	BNE $+5
46F2                    01824 	JSR .GETBIT
46F2                    01825 	BCC .LITERAL
46F2                    01826 
46F2                    01827 	; Compressed data
46F2                    01828 	LDX #1
46F2                    01829 	STX RESULT
46F2                    01830 	DEX
46F2                    01831 	STX RESULT+1
46F2                    01832 .GETLEN:
46F2                    01833 	ASL A
46F2                    01834 	BNE $+5
46F2                    01835 	JSR .GETBIT
46F2                    01836 	BCC .LENOK
46F2                    01837 .LUS:	ASL A
46F2                    01838 	BNE $+5
46F2                    01839 	JSR .GETBIT
46F2                    01840 	ROL RESULT
46F2                    01841 	ROL RESULT+1
46F2                    01842 	BCC $+3
46F2                    01843 	RTS
46F2                    01844 	ASL A
46F2                    01845 	BNE $+5
46F2                    01846 	JSR .GETBIT
46F2                    01847 	BCC .LENOK
46F2                    01848 	ASL A
46F2                    01849 	BNE $+5
46F2                    01850 	JSR .GETBIT
46F2                    01851 	ROL RESULT
46F2                    01852 	ROL RESULT+1
46F2                    01853 	BCC $+3
46F2                    01854 	RTS
46F2                    01855 	ASL A
46F2                    01856 	BNE $+5
46F2                    01857 	JSR .GETBIT
46F2                    01858 	BCS .LUS
46F2                    01859 .LENOK:
46F2                    01860 	INC RESULT
46F2                    01861 	BNE $+4
46F2                    01862 	INC RESULT+1
46F2                    01863 	STA PLETTER_BIT
46F2                    01864 	LDY #0
46F2                    01865 	STY PLETTER_OFF+1
46F2                    01866 	LDA (TEMP),Y
46F2                    01867 	INC TEMP
46F2                    01868 	BNE $+4
46F2                    01869 	INC TEMP+1
46F2                    01870 	STA PLETTER_OFF
46F2                    01871 	LDA PLETTER_OFF
46F2                    01872 	BPL .OFFSOK
46F2                    01873 	LDA PLETTER_BIT
46F2                    01874 	JMP (TEMP2)
46F2                    01875 	
46F2                    01876 .MODE6:
46F2                    01877 	ASL A
46F2                    01878 	BNE $+5
46F2                    01879 	JSR .GETBIT
46F2                    01880 	ROL PLETTER_OFF+1
46F2                    01881 .MODE5:
46F2                    01882 	ASL A
46F2                    01883 	BNE $+5
46F2                    01884 	JSR .GETBIT
46F2                    01885 	ROL PLETTER_OFF+1
46F2                    01886 .MODE4:
46F2                    01887 	ASL A
46F2                    01888 	BNE $+5
46F2                    01889 	JSR .GETBIT
46F2                    01890 	ROL PLETTER_OFF+1
46F2                    01891 .MODE3:
46F2                    01892 	ASL A
46F2                    01893 	BNE $+5
46F2                    01894 	JSR .GETBIT
46F2                    01895 	ROL PLETTER_OFF+1
46F2                    01896 .MODE2:
46F2                    01897 	ASL A
46F2                    01898 	BNE $+5
46F2                    01899 	JSR .GETBIT
46F2                    01900 	ROL PLETTER_OFF+1
46F2                    01901 	ASL A
46F2                    01902 	BNE $+5
46F2                    01903 	JSR .GETBIT
46F2                    01904 	STA PLETTER_BIT
46F2                    01905 	BCC .OFFSOK
46F2                    01906 	INC PLETTER_OFF+1
46F2                    01907 	LDA PLETTER_OFF
46F2                    01908 	AND #$7F
46F2                    01909 	STA PLETTER_OFF
46F2                    01910 .OFFSOK:
46F2                    01911 	INC PLETTER_OFF
46F2                    01912 	BNE $+4
46F2                    01913 	INC PLETTER_OFF+1
46F2                    01914 
46F2                    01915 	LDA RESULT
46F2                    01916 	BEQ $+4
46F2                    01917 	INC RESULT+1
46F2                    01918 
46F2                    01919 	LDA POINTER
46F2                    01920 	SEC
46F2                    01921 	SBC PLETTER_OFF
46F2                    01922 	STA PLETTER_OFF
46F2                    01923 	LDA POINTER+1
46F2                    01924 	SBC PLETTER_OFF+1
46F2                    01925 	STA PLETTER_OFF+1
46F2                    01926 .LOOP2:
46F2                    01927 	SEI
46F2                    01928 	LDA PLETTER_OFF
46F2                    01929 	LDY PLETTER_OFF+1
46F2                    01930 	JSR RDVRM
46F2                    01931 	TAX
46F2                    01932 	LDA POINTER
46F2                    01933 	LDY POINTER+1
46F2                    01934 	JSR WRTVRM
46F2                    01935 	CLI
46F2                    01936 	INC PLETTER_OFF
46F2                    01937 	BNE $+4
46F2                    01938 	INC PLETTER_OFF+1
46F2                    01939 	INC POINTER
46F2                    01940 	BNE $+4
46F2                    01941 	INC POINTER+1
46F2                    01942 	DEC RESULT
46F2                    01943 	BNE .LOOP2
46F2                    01944 	DEC RESULT+1
46F2                    01945 	BNE .LOOP2
46F2                    01946 
46F2                    01947 	LDA PLETTER_BIT
46F2                    01948 	JMP .LOOP
46F2                    01949 
46F2                    01950 .GETBIT:
46F2                    01951 	LDY #0
46F2                    01952 	LDA (TEMP),Y
46F2                    01953 	INC TEMP
46F2                    01954 	BNE $+4
46F2                    01955 	INC TEMP+1
46F2                    01956 	ROL A
46F2                    01957 	RTS
46F2                    01958 
46F2                    01959 .MODES:
46F2                    01960 	DW .OFFSOK
46F2                    01961 	DW .MODE2
46F2                    01962 	DW .MODE3
46F2                    01963 	DW .MODE4
46F2                    01964 	DW .MODE5
46F2                    01965 	DW .MODE6
46F2                    01966     ENDIF
46F2                    01967 
46F2                    01968 	; Required for Creativision because it doesn't provide an ASCII charset.
46F2                    01969 	;
46F2                    01970         ; My personal font for TMS9928.
46F2                    01971         ;
46F2                    01972         ; Patterned after the TMS9928 programming manual 6x8 letters
46F2                    01973         ; with better lowercase letters, also I made a proper
46F2                    01974         ; AT sign.
46F2                    01975         ;
46F2                    01976 FONT_BITMAPS:
46F2  0000000000000000  01977         DB $00,$00,$00,$00,$00,$00,$00,$00      ; $20 space
46FA  2020202020002000  01978         DB $20,$20,$20,$20,$20,$00,$20,$00      ; $21 !
4702  5050500000000000  01979         DB $50,$50,$50,$00,$00,$00,$00,$00      ; $22 "
470A  5050F850F8505000  01980         DB $50,$50,$F8,$50,$F8,$50,$50,$00      ; $23 #
4712  2078A07028F02000  01981         DB $20,$78,$A0,$70,$28,$F0,$20,$00      ; $24 $
471A  C0C8102040981800  01982         DB $C0,$C8,$10,$20,$40,$98,$18,$00      ; $25 %
4722  40A040A0A8906800  01983         DB $40,$A0,$40,$A0,$A8,$90,$68,$00      ; $26 &
472A  6020400000000000  01984         DB $60,$20,$40,$00,$00,$00,$00,$00      ; $27 '
4732  1020404040201000  01985         DB $10,$20,$40,$40,$40,$20,$10,$00      ; $28 (
473A  4020101010204000  01986         DB $40,$20,$10,$10,$10,$20,$40,$00      ; $29 )
4742  00A8702070A80000  01987         DB $00,$A8,$70,$20,$70,$A8,$00,$00      ; $2a *
474A  002020F820200000  01988         DB $00,$20,$20,$F8,$20,$20,$00,$00      ; $2b +
4752  0000000000602040  01989         DB $00,$00,$00,$00,$00,$60,$20,$40      ; $2c ,
475A  000000FC00000000  01990         DB $00,$00,$00,$FC,$00,$00,$00,$00      ; $2d -
4762  0000000000006000  01991         DB $00,$00,$00,$00,$00,$00,$60,$00      ; $2e .
476A  0008102040800000  01992         DB $00,$08,$10,$20,$40,$80,$00,$00      ; $2f /
4772  708898A8C8887000  01993         DB $70,$88,$98,$A8,$C8,$88,$70,$00      ; $30 0
477A  206020202020F800  01994         DB $20,$60,$20,$20,$20,$20,$F8,$00      ; $31 1
4782  708808106080F800  01995         DB $70,$88,$08,$10,$60,$80,$F8,$00      ; $32 2
478A  7088083008887000  01996         DB $70,$88,$08,$30,$08,$88,$70,$00      ; $33 3
4792  30509090F8101000  01997         DB $30,$50,$90,$90,$F8,$10,$10,$00      ; $34 4
479A  F880F0080808F000  01998         DB $F8,$80,$F0,$08,$08,$08,$F0,$00      ; $35 5
47A2  304080F088887000  01999         DB $30,$40,$80,$F0,$88,$88,$70,$00      ; $36 6
47AA  F808102020202000  02000         DB $F8,$08,$10,$20,$20,$20,$20,$00      ; $37 7
47B2  7088887088887000  02001         DB $70,$88,$88,$70,$88,$88,$70,$00      ; $38 8
47BA  7088887808106000  02002         DB $70,$88,$88,$78,$08,$10,$60,$00      ; $39 9
47C2  0000006000600000  02003         DB $00,$00,$00,$60,$00,$60,$00,$00      ; $3a :
47CA  0000006000602040  02004         DB $00,$00,$00,$60,$00,$60,$20,$40      ; $3b ;
47D2  1020408040201000  02005         DB $10,$20,$40,$80,$40,$20,$10,$00      ; $3c <
47DA  0000F800F8000000  02006         DB $00,$00,$F8,$00,$F8,$00,$00,$00      ; $3d =
47E2  0804020102040800  02007         DB $08,$04,$02,$01,$02,$04,$08,$00      ; $3e >
47EA  7088081020002000  02008         DB $70,$88,$08,$10,$20,$00,$20,$00      ; $3f ?
47F2  708898A898807000  02009         DB $70,$88,$98,$A8,$98,$80,$70,$00      ; $40 @
47FA  20508888F8888800  02010         DB $20,$50,$88,$88,$F8,$88,$88,$00      ; $41 A
4802  F08888F08888F000  02011         DB $F0,$88,$88,$F0,$88,$88,$F0,$00      ; $42 B
480A  7088808080887000  02012         DB $70,$88,$80,$80,$80,$88,$70,$00      ; $43 C
4812  F08888888888F000  02013         DB $F0,$88,$88,$88,$88,$88,$F0,$00      ; $44 D
481A  F88080F08080F800  02014         DB $F8,$80,$80,$F0,$80,$80,$F8,$00      ; $45 E
4822  F88080F080808000  02015         DB $F8,$80,$80,$F0,$80,$80,$80,$00      ; $46 F
482A  708880B888887000  02016         DB $70,$88,$80,$B8,$88,$88,$70,$00      ; $47 G
4832  888888F888888800  02017         DB $88,$88,$88,$F8,$88,$88,$88,$00      ; $48 H
483A  7020202020207000  02018         DB $70,$20,$20,$20,$20,$20,$70,$00      ; $49 I
4842  0808080888887000  02019         DB $08,$08,$08,$08,$88,$88,$70,$00      ; $4A J
484A  8890A0C0A0908800  02020         DB $88,$90,$A0,$C0,$A0,$90,$88,$00      ; $4B K
4852  808080808080F800  02021         DB $80,$80,$80,$80,$80,$80,$F8,$00      ; $4C L
485A  88D8A8A888888800  02022         DB $88,$D8,$A8,$A8,$88,$88,$88,$00      ; $4D M
4862  88C8C8A898988800  02023         DB $88,$C8,$C8,$A8,$98,$98,$88,$00      ; $4E N
486A  7088888888887000  02024         DB $70,$88,$88,$88,$88,$88,$70,$00      ; $4F O
4872  F08888F080808000  02025         DB $F0,$88,$88,$F0,$80,$80,$80,$00      ; $50 P
487A  7088888888A89068  02026         DB $70,$88,$88,$88,$88,$A8,$90,$68      ; $51 Q
4882  F08888F0A0908800  02027         DB $F0,$88,$88,$F0,$A0,$90,$88,$00      ; $52 R
488A  7088807008887000  02028         DB $70,$88,$80,$70,$08,$88,$70,$00      ; $53 S
4892  F820202020202000  02029         DB $F8,$20,$20,$20,$20,$20,$20,$00      ; $54 T
489A  8888888888887000  02030         DB $88,$88,$88,$88,$88,$88,$70,$00      ; $55 U
48A2  8888888850502000  02031         DB $88,$88,$88,$88,$50,$50,$20,$00      ; $56 V
48AA  888888A8A8D88800  02032         DB $88,$88,$88,$A8,$A8,$D8,$88,$00      ; $57 W
48B2  8888502050888800  02033         DB $88,$88,$50,$20,$50,$88,$88,$00      ; $58 X
48BA  8888887020202000  02034         DB $88,$88,$88,$70,$20,$20,$20,$00      ; $59 Y
48C2  F80810204080F800  02035         DB $F8,$08,$10,$20,$40,$80,$F8,$00      ; $5A Z
48CA  7860606060607800  02036         DB $78,$60,$60,$60,$60,$60,$78,$00      ; $5B [
48D2  0080402010080000  02037         DB $00,$80,$40,$20,$10,$08,$00,$00      ; $5C \
48DA  F03030303030F000  02038         DB $F0,$30,$30,$30,$30,$30,$F0,$00      ; $5D ]
48E2  2050880000000000  02039         DB $20,$50,$88,$00,$00,$00,$00,$00      ; $5E 
48EA  000000000000F800  02040         DB $00,$00,$00,$00,$00,$00,$F8,$00      ; $5F _
48F2  4020100000000000  02041         DB $40,$20,$10,$00,$00,$00,$00,$00      ; $60 
48FA  0000689888986800  02042         DB $00,$00,$68,$98,$88,$98,$68,$00      ; $61 a
4902  8080F0888888F000  02043         DB $80,$80,$F0,$88,$88,$88,$F0,$00      ; $62 b
490A  0000788080807800  02044         DB $00,$00,$78,$80,$80,$80,$78,$00      ; $63 c
4912  0808689888986800  02045         DB $08,$08,$68,$98,$88,$98,$68,$00      ; $64 d
491A  00007088F8807000  02046         DB $00,$00,$70,$88,$F8,$80,$70,$00      ; $65 e
4922  304840E040404000  02047         DB $30,$48,$40,$E0,$40,$40,$40,$00      ; $66 f
492A  0000788888780870  02048         DB $00,$00,$78,$88,$88,$78,$08,$70      ; $67 g
4932  8080F08888888800  02049         DB $80,$80,$F0,$88,$88,$88,$88,$00      ; $68 h
493A  2000602020207000  02050         DB $20,$00,$60,$20,$20,$20,$70,$00      ; $69 i
4942  0800180888887000  02051         DB $08,$00,$18,$08,$88,$88,$70,$00      ; $6a j
494A  80808890E0908800  02052         DB $80,$80,$88,$90,$E0,$90,$88,$00      ; $6b k
4952  6020202020207000  02053         DB $60,$20,$20,$20,$20,$20,$70,$00      ; $6c l
495A  0000D0A8A8A8A800  02054         DB $00,$00,$D0,$A8,$A8,$A8,$A8,$00      ; $6d m
4962  0000B0C888888800  02055         DB $00,$00,$B0,$C8,$88,$88,$88,$00      ; $6e n
496A  0000708888887000  02056         DB $00,$00,$70,$88,$88,$88,$70,$00      ; $6f o
4972  0000F0888888F080  02057         DB $00,$00,$F0,$88,$88,$88,$F0,$80      ; $70 p
497A  0000788888887808  02058         DB $00,$00,$78,$88,$88,$88,$78,$08      ; $71 q
4982  0000B8C080808000  02059         DB $00,$00,$B8,$C0,$80,$80,$80,$00      ; $72 r
498A  000078807008F000  02060         DB $00,$00,$78,$80,$70,$08,$F0,$00      ; $73 s
4992  2020F82020202000  02061         DB $20,$20,$F8,$20,$20,$20,$20,$00      ; $74 t
499A  0000888888986800  02062         DB $00,$00,$88,$88,$88,$98,$68,$00      ; $75 u
49A2  0000888888502000  02063         DB $00,$00,$88,$88,$88,$50,$20,$00      ; $76 v
49AA  000088A8A8A85000  02064         DB $00,$00,$88,$A8,$A8,$A8,$50,$00      ; $77 w
49B2  0000885020508800  02065         DB $00,$00,$88,$50,$20,$50,$88,$00      ; $78 x
49BA  0000888898680870  02066         DB $00,$00,$88,$88,$98,$68,$08,$70      ; $79 y
49C2  0000F8102040F800  02067         DB $00,$00,$F8,$10,$20,$40,$F8,$00      ; $7a z
49CA  1820204020201800  02068         DB $18,$20,$20,$40,$20,$20,$18,$00      ; $7b {
49D2  2020202020202000  02069         DB $20,$20,$20,$20,$20,$20,$20,$00      ; $7c |
49DA  C02020102020C000  02070         DB $C0,$20,$20,$10,$20,$20,$C0,$00      ; $7d } 
49E2  000040A810000000  02071         DB $00,$00,$40,$A8,$10,$00,$00,$00      ; $7e
49EA  707020F820705000  02072         DB $70,$70,$20,$F8,$20,$70,$50,$00      ; $7f
49F2                    02073 
49F2                    02074 START:
49F2  78                02075 	SEI
49F3  D8                02076 	CLD
49F4  A27F              02077 	LDX #STACK
49F6  9A                02078 	TXS
49F7  AD0120            02079 	LDA $2001
49FA  A982              02080 	LDA #$82
49FC  A201              02081 	LDX #$01
49FE  200040            02082 	JSR WRTVDP
4A01  AD0120            02083 	LDA $2001
4A04  A982              02084 	LDA #$82
4A06  A201              02085 	LDX #$01
4A08  200040            02086 	JSR WRTVDP
4A0B                    02087 
4A0B  20DD46            02088 	JSR MUSIC_INIT
4A0E                    02089 
4A0E  20A844            02090 	JSR MODE_0
4A11                    02091 
4A11  A900              02092 	LDA #$00
4A13  8520              02093 	STA JOY1_DATA
4A15  8521              02094 	STA JOY2_DATA
4A17  A90F              02095 	LDA #$0F
4A19  8522              02096 	STA KEY1_DATA
4A1B  8523              02097 	STA KEY2_DATA
4A1D                    02098 
4A1D                    02099 CVB_Y_ENEMY1:	EQU $0050
4A1D                    02100 CVB_Y_ENEMY2:	EQU $0051
4A1D                    02101 CVB_Y_ENEMY3:	EQU $0052
4A1D                    02102 CVB_C:	EQU $0053
4A1D                    02103 CVB_D:	EQU $0054
4A1D                    02104 CVB_E:	EQU $0055
4A1D                    02105 CVB_PLAYER_FRAME:	EQU $0056
4A1D                    02106 CVB_TICK_NOTE:	EQU $0057
4A1D                    02107 CVB_LIVES:	EQU $0058
4A1D                    02108 CVB_LEVEL:	EQU $0059
4A1D                    02109 CVB_ENEMY1_FRAME:	EQU $005A
4A1D                    02110 CVB_COLUMN:	EQU $005B
4A1D                    02111 CVB_ENEMY_SPEED:	EQU $005C
4A1D                    02112 CVB_SONG_NOTE:	EQU $005D
4A1D                    02113 CVB_ENEMY2_FRAME:	EQU $005E
4A1D                    02114 CVB_#C:	EQU $005F
4A1D                    02115 CVB_#D:	EQU $0061
4A1D                    02116 CVB_BASE_CHARACTER:	EQU $0063
4A1D                    02117 CVB_X_PLAYER:	EQU $0064
4A1D                    02118 CVB_ENEMY3_FRAME:	EQU $0065
4A1D                    02119 CVB_X_ENEMY1:	EQU $0066
4A1D                    02120 CVB_X_ENEMY2:	EQU $0067
4A1D                    02121 CVB_X_ENEMY3:	EQU $0068
4A1D                    02122 CVB_NOTE:	EQU $0069
4A1D                    02123 CVB_LADDERS:	EQU $006A
4A1D                    02124 CVB_ROW:	EQU $006B
4A1D                    02125 CVB_Y_PLAYER:	EQU $006C
4A1D                    02126 RAM_END:
4A1D                    02127 	; 	'
4A1D                    02128 	; 	' Viboritas (demo for CVBasic)
4A1D                    02129 	; 	'
4A1D                    02130 	; 	' by Oscar Toledo G.
4A1D                    02131 	; 	' https://nanochess.org/
4A1D                    02132 	; 	'
4A1D                    02133 	; 	' Creation date: Oct/1990.
4A1D                    02134 	; 	' Revision date: Feb/29/2024. Ported to CVBasic.
4A1D                    02135 	; 	'
4A1D                    02136 	; 
4A1D                    02137 	; 	' The original game was made in Z80 assembler,
4A1D                    02138 	; 	' you can see it here: https://nanochess.org/viboritas.html
4A1D                    02139 	; 
4A1D                    02140 	; 	' It is easier to understand in CVBasic ;)
4A1D                    02141 	; 
4A1D                    02142 	; 	DEFINE CHAR 128,21,game_bitmaps
4A1D  A980              02143 	LDA #128
4A1F  A000              02144 	LDY #0
4A21  8508              02145 	STA POINTER
4A23  A915              02146 	LDA #21
4A25  48                02147 	PHA
4A26  A954              02148 	LDA #CVB_GAME_BITMAPS
4A28  8502              02149 	STA TEMP
4A2A  A954              02150 	LDA #CVB_GAME_BITMAPS>>8
4A2C  8503              02151 	STA TEMP+1
4A2E  68                02152 	PLA
4A2F  200742            02153 	JSR DEFINE_CHAR
4A32                    02154 	; 	DEFINE COLOR 128,21,game_colors
4A32  A980              02155 	LDA #128
4A34  A000              02156 	LDY #0
4A36  8508              02157 	STA POINTER
4A38  A915              02158 	LDA #21
4A3A  48                02159 	PHA
4A3B  A9FC              02160 	LDA #CVB_GAME_COLORS
4A3D  8502              02161 	STA TEMP
4A3F  A954              02162 	LDA #CVB_GAME_COLORS>>8
4A41  8503              02163 	STA TEMP+1
4A43  68                02164 	PLA
4A44  203A42            02165 	JSR DEFINE_COLOR
4A47                    02166 	; 	DEFINE SPRITE 0,10,game_sprites
4A47  A900              02167 	LDA #0
4A49  A000              02168 	LDY #0
4A4B  8508              02169 	STA POINTER
4A4D  A90A              02170 	LDA #10
4A4F  48                02171 	PHA
4A50  A9A4              02172 	LDA #CVB_GAME_SPRITES
4A52  8502              02173 	STA TEMP
4A54  A955              02174 	LDA #CVB_GAME_SPRITES>>8
4A56  8503              02175 	STA TEMP+1
4A58  68                02176 	PLA
4A59  20D541            02177 	JSR DEFINE_SPRITE
4A5C                    02178 	; 
4A5C                    02179 	; restart_game:
4A5C                    02180 CVB_RESTART_GAME:
4A5C                    02181 	; 	lives = 2
4A5C  A902              02182 	LDA #2
4A5E  8558              02183 	STA CVB_LIVES
4A60                    02184 	; 	level = 1
4A60  A901              02185 	LDA #1
4A62  8559              02186 	STA CVB_LEVEL
4A64                    02187 	; restart_level:
4A64                    02188 CVB_RESTART_LEVEL:
4A64                    02189 	; 	
4A64                    02190 	; 	PRINT AT 684,"Lives: ",lives
4A64  A9AC              02191 	LDA #172
4A66  A002              02192 	LDY #2
4A68  850C              02193 	STA CURSOR
4A6A  840D              02194 	STY CURSOR+1
4A6C  A978              02195 	LDA #CV1
4A6E  A04A              02196 	LDY #CV1>>8
4A70  A207              02197 	LDX #7
4A72  202541            02198 	JSR PRINT_STRING
4A75  4C7F4A            02199 	JMP CV2
4A78                    02200 CV1:
4A78  4C697665733A20    02201 	DB $4C,$69,$76,$65,$73,$3A,$20
4A7F                    02202 CV2:
4A7F  A558              02203 	LDA CVB_LIVES
4A81  A000              02204 	LDY #0
4A83  204D41            02205 	JSR PRINT_NUMBER
4A86                    02206 	; 	PRINT AT 745,"nanochess 1990"
4A86  A9E9              02207 	LDA #233
4A88  A002              02208 	LDY #2
4A8A  850C              02209 	STA CURSOR
4A8C  840D              02210 	STY CURSOR+1
4A8E  A99A              02211 	LDA #CV3
4A90  A04A              02212 	LDY #CV3>>8
4A92  A20E              02213 	LDX #14
4A94  202541            02214 	JSR PRINT_STRING
4A97  4CA84A            02215 	JMP CV4
4A9A                    02216 CV3:
4A9A  6E616E6F63686573  02217 	DB $6E,$61,$6E,$6F,$63,$68,$65,$73
4AA2  732031393930      02218 	DB $73,$20,$31,$39,$39,$30
4AA8                    02219 CV4:
4AA8                    02220 	; 	
4AA8                    02221 	; next_level:
4AA8                    02222 CVB_NEXT_LEVEL:
4AA8                    02223 	; 	GOSUB draw_level
4AA8  207B4E            02224 	JSR CVB_DRAW_LEVEL
4AAB                    02225 	; 
4AAB                    02226 	; 	x_player = 8
4AAB  A908              02227 	LDA #8
4AAD  8564              02228 	STA CVB_X_PLAYER
4AAF                    02229 	; 	y_player = 16
4AAF  A910              02230 	LDA #16
4AB1  856C              02231 	STA CVB_Y_PLAYER
4AB3                    02232 	; 	player_frame = 0
4AB3  A900              02233 	LDA #0
4AB5  8556              02234 	STA CVB_PLAYER_FRAME
4AB7                    02235 	; 
4AB7                    02236 	; 	x_enemy1 = random(128) + 64
4AB7  201244            02237 	JSR RANDOM
4ABA  297F              02238 	AND #127
4ABC  18                02239 	CLC
4ABD  6940              02240 	ADC #64
4ABF  8566              02241 	STA CVB_X_ENEMY1
4AC1                    02242 	; 	y_enemy1 = 56
4AC1  A938              02243 	LDA #56
4AC3  8550              02244 	STA CVB_Y_ENEMY1
4AC5                    02245 	; 	enemy1_frame = 24
4AC5  A918              02246 	LDA #24
4AC7  855A              02247 	STA CVB_ENEMY1_FRAME
4AC9                    02248 	; 	x_enemy2 = random(128) + 80
4AC9  201244            02249 	JSR RANDOM
4ACC  297F              02250 	AND #127
4ACE  18                02251 	CLC
4ACF  6950              02252 	ADC #80
4AD1  8567              02253 	STA CVB_X_ENEMY2
4AD3                    02254 	; 	y_enemy2 = 96
4AD3  A960              02255 	LDA #96
4AD5  8551              02256 	STA CVB_Y_ENEMY2
4AD7                    02257 	; 	enemy2_frame = 32
4AD7  A920              02258 	LDA #32
4AD9  855E              02259 	STA CVB_ENEMY2_FRAME
4ADB                    02260 	; 	x_enemy3 = random(128) + 48
4ADB  201244            02261 	JSR RANDOM
4ADE  297F              02262 	AND #127
4AE0  18                02263 	CLC
4AE1  6930              02264 	ADC #48
4AE3  8568              02265 	STA CVB_X_ENEMY3
4AE5                    02266 	; 	y_enemy3 = 136
4AE5  A988              02267 	LDA #136
4AE7  8552              02268 	STA CVB_Y_ENEMY3
4AE9                    02269 	; 	enemy3_frame = 24
4AE9  A918              02270 	LDA #24
4AEB  8565              02271 	STA CVB_ENEMY3_FRAME
4AED                    02272 	; 
4AED                    02273 	; 	enemy_speed = 0
4AED  A900              02274 	LDA #0
4AEF  855C              02275 	STA CVB_ENEMY_SPEED
4AF1                    02276 	; 
4AF1                    02277 	; 	GOSUB start_song
4AF1  20E456            02278 	JSR CVB_START_SONG
4AF4                    02279 	; 
4AF4                    02280 	; game_loop:
4AF4                    02281 CVB_GAME_LOOP:
4AF4                    02282 	; 	WHILE 1
4AF4                    02283 CV5:
4AF4                    02284 	; 		WAIT
4AF4  20D646            02285 	JSR WAIT
4AF7                    02286 	; 		GOSUB play_song
4AF7  20ED56            02287 	JSR CVB_PLAY_SONG
4AFA                    02288 	; 
4AFA                    02289 	; 		SPRITE 0, y_player - 1, x_player, player_frame, 15
4AFA  A900              02290 	LDA #0
4AFC  48                02291 	PHA
4AFD  A56C              02292 	LDA CVB_Y_PLAYER
4AFF  38                02293 	SEC
4B00  E901              02294 	SBC #1
4B02  852A              02295 	STA SPRITE_DATA
4B04  A564              02296 	LDA CVB_X_PLAYER
4B06  852B              02297 	STA SPRITE_DATA+1
4B08  A556              02298 	LDA CVB_PLAYER_FRAME
4B0A  852C              02299 	STA SPRITE_DATA+2
4B0C  A90F              02300 	LDA #15
4B0E  852D              02301 	STA SPRITE_DATA+3
4B10  68                02302 	PLA
4B11  206442            02303 	JSR UPDATE_SPRITE
4B14                    02304 	; 		SPRITE 1, y_enemy1 - 1, x_enemy1, enemy1_frame, 14
4B14  A901              02305 	LDA #1
4B16  48                02306 	PHA
4B17  A550              02307 	LDA CVB_Y_ENEMY1
4B19  38                02308 	SEC
4B1A  E901              02309 	SBC #1
4B1C  852A              02310 	STA SPRITE_DATA
4B1E  A566              02311 	LDA CVB_X_ENEMY1
4B20  852B              02312 	STA SPRITE_DATA+1
4B22  A55A              02313 	LDA CVB_ENEMY1_FRAME
4B24  852C              02314 	STA SPRITE_DATA+2
4B26  A90E              02315 	LDA #14
4B28  852D              02316 	STA SPRITE_DATA+3
4B2A  68                02317 	PLA
4B2B  206442            02318 	JSR UPDATE_SPRITE
4B2E                    02319 	; 		SPRITE 2, y_enemy2 - 1, x_enemy2, enemy2_frame, 14
4B2E  A902              02320 	LDA #2
4B30  48                02321 	PHA
4B31  A551              02322 	LDA CVB_Y_ENEMY2
4B33  38                02323 	SEC
4B34  E901              02324 	SBC #1
4B36  852A              02325 	STA SPRITE_DATA
4B38  A567              02326 	LDA CVB_X_ENEMY2
4B3A  852B              02327 	STA SPRITE_DATA+1
4B3C  A55E              02328 	LDA CVB_ENEMY2_FRAME
4B3E  852C              02329 	STA SPRITE_DATA+2
4B40  A90E              02330 	LDA #14
4B42  852D              02331 	STA SPRITE_DATA+3
4B44  68                02332 	PLA
4B45  206442            02333 	JSR UPDATE_SPRITE
4B48                    02334 	; 		SPRITE 3, y_enemy3 - 1, x_enemy3, enemy3_frame, 14
4B48  A903              02335 	LDA #3
4B4A  48                02336 	PHA
4B4B  A552              02337 	LDA CVB_Y_ENEMY3
4B4D  38                02338 	SEC
4B4E  E901              02339 	SBC #1
4B50  852A              02340 	STA SPRITE_DATA
4B52  A568              02341 	LDA CVB_X_ENEMY3
4B54  852B              02342 	STA SPRITE_DATA+1
4B56  A565              02343 	LDA CVB_ENEMY3_FRAME
4B58  852C              02344 	STA SPRITE_DATA+2
4B5A  A90E              02345 	LDA #14
4B5C  852D              02346 	STA SPRITE_DATA+3
4B5E  68                02347 	PLA
4B5F  206442            02348 	JSR UPDATE_SPRITE
4B62                    02349 	; 
4B62                    02350 	; 		GOSUB move_player
4B62  20C750            02351 	JSR CVB_MOVE_PLAYER
4B65                    02352 	; 
4B65                    02353 	; 		c = $50 + level * 4
4B65  A559              02354 	LDA CVB_LEVEL
4B67  0A                02355 	ASL A
4B68  0A                02356 	ASL A
4B69  18                02357 	CLC
4B6A  6950              02358 	ADC #80
4B6C  8553              02359 	STA CVB_C
4B6E                    02360 	; 		enemy_speed = enemy_speed + c
4B6E  A55C              02361 	LDA CVB_ENEMY_SPEED
4B70  18                02362 	CLC
4B71  6553              02363 	ADC CVB_C
4B73  855C              02364 	STA CVB_ENEMY_SPEED
4B75                    02365 	; 		WHILE enemy_speed >= $40
4B75                    02366 CV7:
4B75  A55C              02367 	LDA CVB_ENEMY_SPEED
4B77  C940              02368 	CMP #64
4B79  B003              02369 	BCS CV9
4B7B  4C8B4B            02370 	JMP CV8
4B7E                    02371 CV9:
4B7E                    02372 	; 			enemy_speed = enemy_speed - $40
4B7E  A55C              02373 	LDA CVB_ENEMY_SPEED
4B80  38                02374 	SEC
4B81  E940              02375 	SBC #64
4B83  855C              02376 	STA CVB_ENEMY_SPEED
4B85                    02377 	; 			GOSUB move_enemies
4B85  204E53            02378 	JSR CVB_MOVE_ENEMIES
4B88                    02379 	; 		WEND
4B88  4C754B            02380 	JMP CV7
4B8B                    02381 CV8:
4B8B                    02382 	; 		IF cont1.button THEN
4B8B  A520              02383 	LDA JOY1_DATA
4B8D  2940              02384 	AND #64
4B8F  D003              02385 	BNE CV11
4B91  4C764C            02386 	JMP CV10
4B94                    02387 CV11:
4B94                    02388 	; 			IF x_player > 232 AND x_player < 248 AND y_player = 136 THEN
4B94  A564              02389 	LDA CVB_X_PLAYER
4B96  C9E9              02390 	CMP #233
4B98  B003              02391 	BCS CV13
4B9A  A900              02392 	LDA #0
4B9C  2C                02393 	DB $2C
4B9D                    02394 CV13:
4B9D  A9FF              02395 	LDA #255
4B9F  48                02396 	PHA
4BA0  A564              02397 	LDA CVB_X_PLAYER
4BA2  C9F8              02398 	CMP #248
4BA4  9003              02399 	BCC CV14
4BA6  A900              02400 	LDA #0
4BA8  2C                02401 	DB $2C
4BA9                    02402 CV14:
4BA9  A9FF              02403 	LDA #255
4BAB  8502              02404 	STA TEMP
4BAD  68                02405 	PLA
4BAE  2502              02406 	AND TEMP
4BB0  48                02407 	PHA
4BB1  A56C              02408 	LDA CVB_Y_PLAYER
4BB3  C988              02409 	CMP #136
4BB5  F003              02410 	BEQ CV15
4BB7  A900              02411 	LDA #0
4BB9  2C                02412 	DB $2C
4BBA                    02413 CV15:
4BBA  A9FF              02414 	LDA #255
4BBC  8502              02415 	STA TEMP
4BBE  68                02416 	PLA
4BBF  2502              02417 	AND TEMP
4BC1  D003              02418 	BNE CV16
4BC3  4C764C            02419 	JMP CV12
4BC6                    02420 CV16:
4BC6                    02421 	; 				GOSUB sound_off
4BC6  206257            02422 	JSR CVB_SOUND_OFF
4BC9                    02423 	; 
4BC9                    02424 	; 				FOR c = 1 to 10
4BC9  A901              02425 	LDA #1
4BCB  8553              02426 	STA CVB_C
4BCD                    02427 CV17:
4BCD                    02428 	; 					WAIT
4BCD  20D646            02429 	JSR WAIT
4BD0                    02430 	; 					SOUND 0, 200 - c * 10, 13
4BD0  A9C8              02431 	LDA #200
4BD2  A000              02432 	LDY #0
4BD4  48                02433 	PHA
4BD5  98                02434 	TYA
4BD6  48                02435 	PHA
4BD7  A553              02436 	LDA CVB_C
4BD9  A000              02437 	LDY #0
4BDB  48                02438 	PHA
4BDC  98                02439 	TYA
4BDD  48                02440 	PHA
4BDE  A90A              02441 	LDA #10
4BE0  A000              02442 	LDY #0
4BE2  8502              02443 	STA TEMP
4BE4  8403              02444 	STY TEMP+1
4BE6  20D742            02445 	JSR _MUL16
4BE9  8502              02446 	STA TEMP
4BEB  8403              02447 	STY TEMP+1
4BED  68                02448 	PLA
4BEE  A8                02449 	TAY
4BEF  68                02450 	PLA
4BF0  38                02451 	SEC
4BF1  E502              02452 	SBC TEMP
4BF3  AA                02453 	TAX
4BF4  98                02454 	TYA
4BF5  E503              02455 	SBC TEMP+1
4BF7  A8                02456 	TAY
4BF8  8A                02457 	TXA
4BF9  A280              02458 	LDX #$80
4BFB  204144            02459 	JSR SN76489_FREQ
4BFE  A90D              02460 	LDA #13
4C00  A290              02461 	LDX #$90
4C02  206144            02462 	JSR SN76489_VOL
4C05                    02463 	; 				NEXT c
4C05  A553              02464 	LDA CVB_C
4C07  18                02465 	CLC
4C08  6901              02466 	ADC #1
4C0A  8553              02467 	STA CVB_C
4C0C  A553              02468 	LDA CVB_C
4C0E  C90B              02469 	CMP #11
4C10  B003              02470 	BCS CV18
4C12  4CCD4B            02471 	JMP CV17
4C15                    02472 CV18:
4C15                    02473 	; 
4C15                    02474 	; 				level = level + 1
4C15  A559              02475 	LDA CVB_LEVEL
4C17  18                02476 	CLC
4C18  6901              02477 	ADC #1
4C1A  8559              02478 	STA CVB_LEVEL
4C1C                    02479 	; 				IF level = 6 THEN
4C1C  A559              02480 	LDA CVB_LEVEL
4C1E  C906              02481 	CMP #6
4C20  F003              02482 	BEQ CV20
4C22  4C734C            02483 	JMP CV19
4C25                    02484 CV20:
4C25                    02485 	; 					GOSUB sound_off
4C25  206257            02486 	JSR CVB_SOUND_OFF
4C28                    02487 	; 					PRINT AT 267," YOU WIN! "
4C28  A90B              02488 	LDA #11
4C2A  A001              02489 	LDY #1
4C2C  850C              02490 	STA CURSOR
4C2E  840D              02491 	STY CURSOR+1
4C30  A93C              02492 	LDA #CV21
4C32  A04C              02493 	LDY #CV21>>8
4C34  A20A              02494 	LDX #10
4C36  202541            02495 	JSR PRINT_STRING
4C39  4C464C            02496 	JMP CV22
4C3C                    02497 CV21:
4C3C  20594F552057494E  02498 	DB $20,$59,$4F,$55,$20,$57,$49,$4E
4C44  2120              02499 	DB $21,$20
4C46                    02500 CV22:
4C46                    02501 	; 					#c = FRAME
4C46  A524              02502 	LDA FRAME
4C48  A425              02503 	LDY FRAME+1
4C4A  855F              02504 	STA CVB_#C
4C4C  8460              02505 	STY CVB_#C+1
4C4E                    02506 	; 					DO
4C4E                    02507 CV23:
4C4E                    02508 	; 						WAIT
4C4E  20D646            02509 	JSR WAIT
4C51                    02510 	; 					LOOP WHILE FRAME - #c < 300
4C51  A524              02511 	LDA FRAME
4C53  A425              02512 	LDY FRAME+1
4C55  38                02513 	SEC
4C56  E55F              02514 	SBC CVB_#C
4C58  AA                02515 	TAX
4C59  98                02516 	TYA
4C5A  E560              02517 	SBC CVB_#C+1
4C5C  A8                02518 	TAY
4C5D  8A                02519 	TXA
4C5E  38                02520 	SEC
4C5F  E92C              02521 	SBC #44
4C61  98                02522 	TYA
4C62  E901              02523 	SBC #1
4C64  9003              02524 	BCC CV26
4C66  4C6C4C            02525 	JMP CV25
4C69                    02526 CV26:
4C69  4C4E4C            02527 	JMP CV23
4C6C                    02528 CV25:
4C6C                    02529 	; 					level = 1
4C6C  A901              02530 	LDA #1
4C6E  8559              02531 	STA CVB_LEVEL
4C70                    02532 	; 					GOTO restart_level
4C70  4C644A            02533 	JMP CVB_RESTART_LEVEL
4C73                    02534 	; 				END IF
4C73                    02535 CV19:
4C73                    02536 	; 				GOTO next_level	
4C73  4CA84A            02537 	JMP CVB_NEXT_LEVEL
4C76                    02538 	; 			END IF
4C76                    02539 CV12:
4C76                    02540 	; 		END IF
4C76                    02541 CV10:
4C76                    02542 	; 		IF ABS(y_player + 1 - y_enemy1) < 8 THEN
4C76  A56C              02543 	LDA CVB_Y_PLAYER
4C78  A000              02544 	LDY #0
4C7A  18                02545 	CLC
4C7B  6901              02546 	ADC #1
4C7D  AA                02547 	TAX
4C7E  98                02548 	TYA
4C7F  6900              02549 	ADC #0
4C81  A8                02550 	TAY
4C82  8A                02551 	TXA
4C83  38                02552 	SEC
4C84  E550              02553 	SBC CVB_Y_ENEMY1
4C86  AA                02554 	TAX
4C87  98                02555 	TYA
4C88  E900              02556 	SBC #0
4C8A  A8                02557 	TAY
4C8B  8A                02558 	TXA
4C8C  208442            02559 	JSR _ABS16
4C8F  38                02560 	SEC
4C90  E908              02561 	SBC #8
4C92  98                02562 	TYA
4C93  E900              02563 	SBC #0
4C95  9003              02564 	BCC CV28
4C97  4CC14C            02565 	JMP CV27
4C9A                    02566 CV28:
4C9A                    02567 	; 			IF ABS(x_player + 1 - x_enemy1) < 8 THEN GOTO player_dies
4C9A  A564              02568 	LDA CVB_X_PLAYER
4C9C  A000              02569 	LDY #0
4C9E  18                02570 	CLC
4C9F  6901              02571 	ADC #1
4CA1  AA                02572 	TAX
4CA2  98                02573 	TYA
4CA3  6900              02574 	ADC #0
4CA5  A8                02575 	TAY
4CA6  8A                02576 	TXA
4CA7  38                02577 	SEC
4CA8  E566              02578 	SBC CVB_X_ENEMY1
4CAA  AA                02579 	TAX
4CAB  98                02580 	TYA
4CAC  E900              02581 	SBC #0
4CAE  A8                02582 	TAY
4CAF  8A                02583 	TXA
4CB0  208442            02584 	JSR _ABS16
4CB3  38                02585 	SEC
4CB4  E908              02586 	SBC #8
4CB6  98                02587 	TYA
4CB7  E900              02588 	SBC #0
4CB9  9003              02589 	BCC CV30
4CBB  4CC14C            02590 	JMP CV29
4CBE                    02591 CV30:
4CBE  4C5A4D            02592 	JMP CVB_PLAYER_DIES
4CC1                    02593 CV29:
4CC1                    02594 	; 		END IF
4CC1                    02595 CV27:
4CC1                    02596 	; 		IF ABS(y_player + 1 - y_enemy2) < 8 THEN
4CC1  A56C              02597 	LDA CVB_Y_PLAYER
4CC3  A000              02598 	LDY #0
4CC5  18                02599 	CLC
4CC6  6901              02600 	ADC #1
4CC8  AA                02601 	TAX
4CC9  98                02602 	TYA
4CCA  6900              02603 	ADC #0
4CCC  A8                02604 	TAY
4CCD  8A                02605 	TXA
4CCE  38                02606 	SEC
4CCF  E551              02607 	SBC CVB_Y_ENEMY2
4CD1  AA                02608 	TAX
4CD2  98                02609 	TYA
4CD3  E900              02610 	SBC #0
4CD5  A8                02611 	TAY
4CD6  8A                02612 	TXA
4CD7  208442            02613 	JSR _ABS16
4CDA  38                02614 	SEC
4CDB  E908              02615 	SBC #8
4CDD  98                02616 	TYA
4CDE  E900              02617 	SBC #0
4CE0  9003              02618 	BCC CV32
4CE2  4C0C4D            02619 	JMP CV31
4CE5                    02620 CV32:
4CE5                    02621 	; 			IF ABS(x_player + 1 - x_enemy2) < 8 THEN GOTO player_dies
4CE5  A564              02622 	LDA CVB_X_PLAYER
4CE7  A000              02623 	LDY #0
4CE9  18                02624 	CLC
4CEA  6901              02625 	ADC #1
4CEC  AA                02626 	TAX
4CED  98                02627 	TYA
4CEE  6900              02628 	ADC #0
4CF0  A8                02629 	TAY
4CF1  8A                02630 	TXA
4CF2  38                02631 	SEC
4CF3  E567              02632 	SBC CVB_X_ENEMY2
4CF5  AA                02633 	TAX
4CF6  98                02634 	TYA
4CF7  E900              02635 	SBC #0
4CF9  A8                02636 	TAY
4CFA  8A                02637 	TXA
4CFB  208442            02638 	JSR _ABS16
4CFE  38                02639 	SEC
4CFF  E908              02640 	SBC #8
4D01  98                02641 	TYA
4D02  E900              02642 	SBC #0
4D04  9003              02643 	BCC CV34
4D06  4C0C4D            02644 	JMP CV33
4D09                    02645 CV34:
4D09  4C5A4D            02646 	JMP CVB_PLAYER_DIES
4D0C                    02647 CV33:
4D0C                    02648 	; 		END IF
4D0C                    02649 CV31:
4D0C                    02650 	; 		IF ABS(y_player + 1 - y_enemy3) < 8 THEN
4D0C  A56C              02651 	LDA CVB_Y_PLAYER
4D0E  A000              02652 	LDY #0
4D10  18                02653 	CLC
4D11  6901              02654 	ADC #1
4D13  AA                02655 	TAX
4D14  98                02656 	TYA
4D15  6900              02657 	ADC #0
4D17  A8                02658 	TAY
4D18  8A                02659 	TXA
4D19  38                02660 	SEC
4D1A  E552              02661 	SBC CVB_Y_ENEMY3
4D1C  AA                02662 	TAX
4D1D  98                02663 	TYA
4D1E  E900              02664 	SBC #0
4D20  A8                02665 	TAY
4D21  8A                02666 	TXA
4D22  208442            02667 	JSR _ABS16
4D25  38                02668 	SEC
4D26  E908              02669 	SBC #8
4D28  98                02670 	TYA
4D29  E900              02671 	SBC #0
4D2B  9003              02672 	BCC CV36
4D2D  4C574D            02673 	JMP CV35
4D30                    02674 CV36:
4D30                    02675 	; 			IF ABS(x_player + 1 - x_enemy3) < 8 THEN GOTO player_dies
4D30  A564              02676 	LDA CVB_X_PLAYER
4D32  A000              02677 	LDY #0
4D34  18                02678 	CLC
4D35  6901              02679 	ADC #1
4D37  AA                02680 	TAX
4D38  98                02681 	TYA
4D39  6900              02682 	ADC #0
4D3B  A8                02683 	TAY
4D3C  8A                02684 	TXA
4D3D  38                02685 	SEC
4D3E  E568              02686 	SBC CVB_X_ENEMY3
4D40  AA                02687 	TAX
4D41  98                02688 	TYA
4D42  E900              02689 	SBC #0
4D44  A8                02690 	TAY
4D45  8A                02691 	TXA
4D46  208442            02692 	JSR _ABS16
4D49  38                02693 	SEC
4D4A  E908              02694 	SBC #8
4D4C  98                02695 	TYA
4D4D  E900              02696 	SBC #0
4D4F  9003              02697 	BCC CV38
4D51  4C574D            02698 	JMP CV37
4D54                    02699 CV38:
4D54  4C5A4D            02700 	JMP CVB_PLAYER_DIES
4D57                    02701 CV37:
4D57                    02702 	; 		END IF
4D57                    02703 CV35:
4D57                    02704 	; 	WEND
4D57  4CF44A            02705 	JMP CV5
4D5A                    02706 CV6:
4D5A                    02707 	; 
4D5A                    02708 	; player_dies:
4D5A                    02709 CVB_PLAYER_DIES:
4D5A                    02710 	; 	GOSUB sound_off
4D5A  206257            02711 	JSR CVB_SOUND_OFF
4D5D                    02712 	; 
4D5D                    02713 	; 	SOUND 0,640,13
4D5D  A980              02714 	LDA #128
4D5F  A002              02715 	LDY #2
4D61  A280              02716 	LDX #$80
4D63  204144            02717 	JSR SN76489_FREQ
4D66  A90D              02718 	LDA #13
4D68  A290              02719 	LDX #$90
4D6A  206144            02720 	JSR SN76489_VOL
4D6D                    02721 	; 	SOUND 1,320,13
4D6D  A940              02722 	LDA #64
4D6F  A001              02723 	LDY #1
4D71  A2A0              02724 	LDX #$A0
4D73  204144            02725 	JSR SN76489_FREQ
4D76  A90D              02726 	LDA #13
4D78  A2B0              02727 	LDX #$B0
4D7A  206144            02728 	JSR SN76489_VOL
4D7D                    02729 	; 	SOUND 2,160,13
4D7D  A9A0              02730 	LDA #160
4D7F  A000              02731 	LDY #0
4D81  A2C0              02732 	LDX #$C0
4D83  204144            02733 	JSR SN76489_FREQ
4D86  A90D              02734 	LDA #13
4D88  A2D0              02735 	LDX #$D0
4D8A  206144            02736 	JSR SN76489_VOL
4D8D                    02737 	; 
4D8D                    02738 	; 	player_frame = 0
4D8D  A900              02739 	LDA #0
4D8F  8556              02740 	STA CVB_PLAYER_FRAME
4D91                    02741 	; 	FOR c = 0 TO 30
4D91  A900              02742 	LDA #0
4D93  8553              02743 	STA CVB_C
4D95                    02744 CV39:
4D95                    02745 	; 		WAIT
4D95  20D646            02746 	JSR WAIT
4D98                    02747 	; 		WAIT
4D98  20D646            02748 	JSR WAIT
4D9B                    02749 	; 		player_frame = player_frame XOR 8
4D9B  A556              02750 	LDA CVB_PLAYER_FRAME
4D9D  4908              02751 	EOR #8
4D9F  8556              02752 	STA CVB_PLAYER_FRAME
4DA1                    02753 	; 		SPRITE 0, y_player - 1, x_player, player_frame, 15
4DA1  A900              02754 	LDA #0
4DA3  48                02755 	PHA
4DA4  A56C              02756 	LDA CVB_Y_PLAYER
4DA6  38                02757 	SEC
4DA7  E901              02758 	SBC #1
4DA9  852A              02759 	STA SPRITE_DATA
4DAB  A564              02760 	LDA CVB_X_PLAYER
4DAD  852B              02761 	STA SPRITE_DATA+1
4DAF  A556              02762 	LDA CVB_PLAYER_FRAME
4DB1  852C              02763 	STA SPRITE_DATA+2
4DB3  A90F              02764 	LDA #15
4DB5  852D              02765 	STA SPRITE_DATA+3
4DB7  68                02766 	PLA
4DB8  206442            02767 	JSR UPDATE_SPRITE
4DBB                    02768 	; 	NEXT c
4DBB  A553              02769 	LDA CVB_C
4DBD  18                02770 	CLC
4DBE  6901              02771 	ADC #1
4DC0  8553              02772 	STA CVB_C
4DC2  A553              02773 	LDA CVB_C
4DC4  C91F              02774 	CMP #31
4DC6  B003              02775 	BCS CV40
4DC8  4C954D            02776 	JMP CV39
4DCB                    02777 CV40:
4DCB                    02778 	; 
4DCB                    02779 	; 	GOSUB sound_off
4DCB  206257            02780 	JSR CVB_SOUND_OFF
4DCE                    02781 	; 
4DCE                    02782 	; 	DO
4DCE                    02783 CV41:
4DCE                    02784 	; 		WAIT
4DCE  20D646            02785 	JSR WAIT
4DD1                    02786 	; 		SOUND 0,200 - y_player,13
4DD1  A9C8              02787 	LDA #200
4DD3  A000              02788 	LDY #0
4DD5  38                02789 	SEC
4DD6  E56C              02790 	SBC CVB_Y_PLAYER
4DD8  AA                02791 	TAX
4DD9  98                02792 	TYA
4DDA  E900              02793 	SBC #0
4DDC  A8                02794 	TAY
4DDD  8A                02795 	TXA
4DDE  A280              02796 	LDX #$80
4DE0  204144            02797 	JSR SN76489_FREQ
4DE3  A90D              02798 	LDA #13
4DE5  A290              02799 	LDX #$90
4DE7  206144            02800 	JSR SN76489_VOL
4DEA                    02801 	; 		player_frame = player_frame XOR 8
4DEA  A556              02802 	LDA CVB_PLAYER_FRAME
4DEC  4908              02803 	EOR #8
4DEE  8556              02804 	STA CVB_PLAYER_FRAME
4DF0                    02805 	; 		SPRITE 0, y_player - 1, x_player, player_frame, 15
4DF0  A900              02806 	LDA #0
4DF2  48                02807 	PHA
4DF3  A56C              02808 	LDA CVB_Y_PLAYER
4DF5  38                02809 	SEC
4DF6  E901              02810 	SBC #1
4DF8  852A              02811 	STA SPRITE_DATA
4DFA  A564              02812 	LDA CVB_X_PLAYER
4DFC  852B              02813 	STA SPRITE_DATA+1
4DFE  A556              02814 	LDA CVB_PLAYER_FRAME
4E00  852C              02815 	STA SPRITE_DATA+2
4E02  A90F              02816 	LDA #15
4E04  852D              02817 	STA SPRITE_DATA+3
4E06  68                02818 	PLA
4E07  206442            02819 	JSR UPDATE_SPRITE
4E0A                    02820 	; 		y_player = y_player + 2
4E0A  A56C              02821 	LDA CVB_Y_PLAYER
4E0C  18                02822 	CLC
4E0D  6902              02823 	ADC #2
4E0F  856C              02824 	STA CVB_Y_PLAYER
4E11                    02825 	; 	LOOP WHILE y_player < 160
4E11  A56C              02826 	LDA CVB_Y_PLAYER
4E13  C9A0              02827 	CMP #160
4E15  9003              02828 	BCC CV44
4E17  4C1D4E            02829 	JMP CV43
4E1A                    02830 CV44:
4E1A  4CCE4D            02831 	JMP CV41
4E1D                    02832 CV43:
4E1D                    02833 	; 
4E1D                    02834 	; 	GOSUB sound_off
4E1D  206257            02835 	JSR CVB_SOUND_OFF
4E20                    02836 	; 
4E20                    02837 	; 	IF lives = 0 THEN
4E20  A558              02838 	LDA CVB_LIVES
4E22  C900              02839 	CMP #0
4E24  F003              02840 	BEQ CV46
4E26  4C714E            02841 	JMP CV45
4E29                    02842 CV46:
4E29                    02843 	; 		PRINT AT 267," GAME OVER "
4E29  A90B              02844 	LDA #11
4E2B  A001              02845 	LDY #1
4E2D  850C              02846 	STA CURSOR
4E2F  840D              02847 	STY CURSOR+1
4E31  A93D              02848 	LDA #CV47
4E33  A04E              02849 	LDY #CV47>>8
4E35  A20B              02850 	LDX #11
4E37  202541            02851 	JSR PRINT_STRING
4E3A  4C484E            02852 	JMP CV48
4E3D                    02853 CV47:
4E3D  2047414D45204F56  02854 	DB $20,$47,$41,$4D,$45,$20,$4F,$56
4E45  455220            02855 	DB $45,$52,$20
4E48                    02856 CV48:
4E48                    02857 	; 		#c = FRAME
4E48  A524              02858 	LDA FRAME
4E4A  A425              02859 	LDY FRAME+1
4E4C  855F              02860 	STA CVB_#C
4E4E  8460              02861 	STY CVB_#C+1
4E50                    02862 	; 		DO
4E50                    02863 CV49:
4E50                    02864 	; 			WAIT
4E50  20D646            02865 	JSR WAIT
4E53                    02866 	; 		LOOP WHILE FRAME - #c < 300
4E53  A524              02867 	LDA FRAME
4E55  A425              02868 	LDY FRAME+1
4E57  38                02869 	SEC
4E58  E55F              02870 	SBC CVB_#C
4E5A  AA                02871 	TAX
4E5B  98                02872 	TYA
4E5C  E560              02873 	SBC CVB_#C+1
4E5E  A8                02874 	TAY
4E5F  8A                02875 	TXA
4E60  38                02876 	SEC
4E61  E92C              02877 	SBC #44
4E63  98                02878 	TYA
4E64  E901              02879 	SBC #1
4E66  9003              02880 	BCC CV52
4E68  4C6E4E            02881 	JMP CV51
4E6B                    02882 CV52:
4E6B  4C504E            02883 	JMP CV49
4E6E                    02884 CV51:
4E6E                    02885 	; 		GOTO restart_game
4E6E  4C5C4A            02886 	JMP CVB_RESTART_GAME
4E71                    02887 	; 	END IF
4E71                    02888 CV45:
4E71                    02889 	; 	lives = lives - 1
4E71  A558              02890 	LDA CVB_LIVES
4E73  38                02891 	SEC
4E74  E901              02892 	SBC #1
4E76  8558              02893 	STA CVB_LIVES
4E78                    02894 	; 	GOTO restart_level
4E78  4C644A            02895 	JMP CVB_RESTART_LEVEL
4E7B                    02896 	; 
4E7B                    02897 	; 	'
4E7B                    02898 	; 	' Draw the current level.
4E7B                    02899 	; 	'
4E7B                    02900 	; draw_level:	PROCEDURE
4E7B                    02901 CVB_DRAW_LEVEL:
4E7B                    02902 	; 
4E7B                    02903 	; 	' Get the base character to draw the level.
4E7B                    02904 	; 	base_character = 128 + (level - 1) * 4
4E7B  A559              02905 	LDA CVB_LEVEL
4E7D  38                02906 	SEC
4E7E  E901              02907 	SBC #1
4E80  0A                02908 	ASL A
4E81  0A                02909 	ASL A
4E82  18                02910 	CLC
4E83  6980              02911 	ADC #128
4E85  8563              02912 	STA CVB_BASE_CHARACTER
4E87                    02913 	; 
4E87                    02914 	; 	' Draw the background.
4E87                    02915 	; 	FOR #c = $1800 TO $1a7c STEP 4
4E87  A900              02916 	LDA #0
4E89  A018              02917 	LDY #24
4E8B  855F              02918 	STA CVB_#C
4E8D  8460              02919 	STY CVB_#C+1
4E8F                    02920 CV53:
4E8F                    02921 	; 		VPOKE #c, base_character
4E8F  A563              02922 	LDA CVB_BASE_CHARACTER
4E91  48                02923 	PHA
4E92  A55F              02924 	LDA CVB_#C
4E94  A460              02925 	LDY CVB_#C+1
4E96  8502              02926 	STA TEMP
4E98  8403              02927 	STY TEMP+1
4E9A  68                02928 	PLA
4E9B  AA                02929 	TAX
4E9C  A502              02930 	LDA TEMP
4E9E  78                02931 	SEI
4E9F  201E40            02932 	JSR WRTVRM
4EA2  58                02933 	CLI
4EA3                    02934 	; 		VPOKE #c + 1, base_character
4EA3  A563              02935 	LDA CVB_BASE_CHARACTER
4EA5  48                02936 	PHA
4EA6  A55F              02937 	LDA CVB_#C
4EA8  A460              02938 	LDY CVB_#C+1
4EAA  18                02939 	CLC
4EAB  6901              02940 	ADC #1
4EAD  AA                02941 	TAX
4EAE  98                02942 	TYA
4EAF  6900              02943 	ADC #0
4EB1  A8                02944 	TAY
4EB2  8A                02945 	TXA
4EB3  8502              02946 	STA TEMP
4EB5  8403              02947 	STY TEMP+1
4EB7  68                02948 	PLA
4EB8  AA                02949 	TAX
4EB9  A502              02950 	LDA TEMP
4EBB  78                02951 	SEI
4EBC  201E40            02952 	JSR WRTVRM
4EBF  58                02953 	CLI
4EC0                    02954 	; 		VPOKE #c + 2, base_character
4EC0  A563              02955 	LDA CVB_BASE_CHARACTER
4EC2  48                02956 	PHA
4EC3  A55F              02957 	LDA CVB_#C
4EC5  A460              02958 	LDY CVB_#C+1
4EC7  18                02959 	CLC
4EC8  6902              02960 	ADC #2
4ECA  AA                02961 	TAX
4ECB  98                02962 	TYA
4ECC  6900              02963 	ADC #0
4ECE  A8                02964 	TAY
4ECF  8A                02965 	TXA
4ED0  8502              02966 	STA TEMP
4ED2  8403              02967 	STY TEMP+1
4ED4  68                02968 	PLA
4ED5  AA                02969 	TAX
4ED6  A502              02970 	LDA TEMP
4ED8  78                02971 	SEI
4ED9  201E40            02972 	JSR WRTVRM
4EDC  58                02973 	CLI
4EDD                    02974 	; 		VPOKE #c + 3, base_character + 1.
4EDD  A563              02975 	LDA CVB_BASE_CHARACTER
4EDF  18                02976 	CLC
4EE0  6901              02977 	ADC #1
4EE2  48                02978 	PHA
4EE3  A55F              02979 	LDA CVB_#C
4EE5  A460              02980 	LDY CVB_#C+1
4EE7  18                02981 	CLC
4EE8  6903              02982 	ADC #3
4EEA  AA                02983 	TAX
4EEB  98                02984 	TYA
4EEC  6900              02985 	ADC #0
4EEE  A8                02986 	TAY
4EEF  8A                02987 	TXA
4EF0  8502              02988 	STA TEMP
4EF2  8403              02989 	STY TEMP+1
4EF4  68                02990 	PLA
4EF5  AA                02991 	TAX
4EF6  A502              02992 	LDA TEMP
4EF8  78                02993 	SEI
4EF9  201E40            02994 	JSR WRTVRM
4EFC  58                02995 	CLI
4EFD                    02996 	; 	NEXT #c
4EFD  A55F              02997 	LDA CVB_#C
4EFF  A460              02998 	LDY CVB_#C+1
4F01  18                02999 	CLC
4F02  6904              03000 	ADC #4
4F04  AA                03001 	TAX
4F05  98                03002 	TYA
4F06  6900              03003 	ADC #0
4F08  A8                03004 	TAY
4F09  8A                03005 	TXA
4F0A  855F              03006 	STA CVB_#C
4F0C  8460              03007 	STY CVB_#C+1
4F0E  A55F              03008 	LDA CVB_#C
4F10  A460              03009 	LDY CVB_#C+1
4F12  38                03010 	SEC
4F13  E97D              03011 	SBC #125
4F15  98                03012 	TYA
4F16  E91A              03013 	SBC #26
4F18  B003              03014 	BCS CV54
4F1A  4C8F4E            03015 	JMP CV53
4F1D                    03016 CV54:
4F1D                    03017 	; 
4F1D                    03018 	; 	' Draw over the floors.
4F1D                    03019 	; 	FOR #c = $1880 TO $1A60 STEP 160
4F1D  A980              03020 	LDA #128
4F1F  A018              03021 	LDY #24
4F21  855F              03022 	STA CVB_#C
4F23  8460              03023 	STY CVB_#C+1
4F25                    03024 CV55:
4F25                    03025 	; 		FOR #d = #c TO #c + 31
4F25  A55F              03026 	LDA CVB_#C
4F27  A460              03027 	LDY CVB_#C+1
4F29  8561              03028 	STA CVB_#D
4F2B  8462              03029 	STY CVB_#D+1
4F2D                    03030 CV56:
4F2D                    03031 	; 			VPOKE #d, base_character + 2.
4F2D  A563              03032 	LDA CVB_BASE_CHARACTER
4F2F  18                03033 	CLC
4F30  6902              03034 	ADC #2
4F32  48                03035 	PHA
4F33  A561              03036 	LDA CVB_#D
4F35  A462              03037 	LDY CVB_#D+1
4F37  8502              03038 	STA TEMP
4F39  8403              03039 	STY TEMP+1
4F3B  68                03040 	PLA
4F3C  AA                03041 	TAX
4F3D  A502              03042 	LDA TEMP
4F3F  78                03043 	SEI
4F40  201E40            03044 	JSR WRTVRM
4F43  58                03045 	CLI
4F44                    03046 	; 		NEXT #d
4F44  A561              03047 	LDA CVB_#D
4F46  A462              03048 	LDY CVB_#D+1
4F48  18                03049 	CLC
4F49  6901              03050 	ADC #1
4F4B  AA                03051 	TAX
4F4C  98                03052 	TYA
4F4D  6900              03053 	ADC #0
4F4F  A8                03054 	TAY
4F50  8A                03055 	TXA
4F51  8561              03056 	STA CVB_#D
4F53  8462              03057 	STY CVB_#D+1
4F55  A55F              03058 	LDA CVB_#C
4F57  A460              03059 	LDY CVB_#C+1
4F59  18                03060 	CLC
4F5A  691F              03061 	ADC #31
4F5C  AA                03062 	TAX
4F5D  98                03063 	TYA
4F5E  6900              03064 	ADC #0
4F60  A8                03065 	TAY
4F61  8A                03066 	TXA
4F62  38                03067 	SEC
4F63  E561              03068 	SBC CVB_#D
4F65  98                03069 	TYA
4F66  E562              03070 	SBC CVB_#D+1
4F68  9003              03071 	BCC CV57
4F6A  4C2D4F            03072 	JMP CV56
4F6D                    03073 CV57:
4F6D                    03074 	; 	NEXT #c
4F6D  A55F              03075 	LDA CVB_#C
4F6F  A460              03076 	LDY CVB_#C+1
4F71  18                03077 	CLC
4F72  69A0              03078 	ADC #160
4F74  AA                03079 	TAX
4F75  98                03080 	TYA
4F76  6900              03081 	ADC #0
4F78  A8                03082 	TAY
4F79  8A                03083 	TXA
4F7A  855F              03084 	STA CVB_#C
4F7C  8460              03085 	STY CVB_#C+1
4F7E  A55F              03086 	LDA CVB_#C
4F80  A460              03087 	LDY CVB_#C+1
4F82  38                03088 	SEC
4F83  E961              03089 	SBC #97
4F85  98                03090 	TYA
4F86  E91A              03091 	SBC #26
4F88  B003              03092 	BCS CV58
4F8A  4C254F            03093 	JMP CV55
4F8D                    03094 CV58:
4F8D                    03095 	; 
4F8D                    03096 	; 	' Draw the ladders.
4F8D                    03097 	; 	ladders = 6 - level
4F8D  A906              03098 	LDA #6
4F8F  A000              03099 	LDY #0
4F91  38                03100 	SEC
4F92  E559              03101 	SBC CVB_LEVEL
4F94  AA                03102 	TAX
4F95  98                03103 	TYA
4F96  E900              03104 	SBC #0
4F98  A8                03105 	TAY
4F99  8A                03106 	TXA
4F9A  856A              03107 	STA CVB_LADDERS
4F9C                    03108 	; 
4F9C                    03109 	; 	FOR #c = $1880 TO $19C0 STEP 160
4F9C  A980              03110 	LDA #128
4F9E  A018              03111 	LDY #24
4FA0  855F              03112 	STA CVB_#C
4FA2  8460              03113 	STY CVB_#C+1
4FA4                    03114 CV59:
4FA4                    03115 	; 		FOR d = 1 TO ladders
4FA4  A901              03116 	LDA #1
4FA6  8554              03117 	STA CVB_D
4FA8                    03118 CV60:
4FA8                    03119 	; 			e = RANDOM(28) + 2
4FA8  201244            03120 	JSR RANDOM
4FAB  48                03121 	PHA
4FAC  98                03122 	TYA
4FAD  48                03123 	PHA
4FAE  A91C              03124 	LDA #28
4FB0  A000              03125 	LDY #0
4FB2  8502              03126 	STA TEMP
4FB4  8403              03127 	STY TEMP+1
4FB6  20CC43            03128 	JSR _MOD16
4FB9  18                03129 	CLC
4FBA  6902              03130 	ADC #2
4FBC  8555              03131 	STA CVB_E
4FBE                    03132 	; 			VPOKE #c + e, base_character + 3.
4FBE  A563              03133 	LDA CVB_BASE_CHARACTER
4FC0  18                03134 	CLC
4FC1  6903              03135 	ADC #3
4FC3  48                03136 	PHA
4FC4  A55F              03137 	LDA CVB_#C
4FC6  A460              03138 	LDY CVB_#C+1
4FC8  18                03139 	CLC
4FC9  6555              03140 	ADC CVB_E
4FCB  AA                03141 	TAX
4FCC  98                03142 	TYA
4FCD  6900              03143 	ADC #0
4FCF  A8                03144 	TAY
4FD0  8A                03145 	TXA
4FD1  8502              03146 	STA TEMP
4FD3  8403              03147 	STY TEMP+1
4FD5  68                03148 	PLA
4FD6  AA                03149 	TAX
4FD7  A502              03150 	LDA TEMP
4FD9  78                03151 	SEI
4FDA  201E40            03152 	JSR WRTVRM
4FDD  58                03153 	CLI
4FDE                    03154 	; 			VPOKE #c + e + 32, base_character + 3.
4FDE  A563              03155 	LDA CVB_BASE_CHARACTER
4FE0  18                03156 	CLC
4FE1  6903              03157 	ADC #3
4FE3  48                03158 	PHA
4FE4  A55F              03159 	LDA CVB_#C
4FE6  A460              03160 	LDY CVB_#C+1
4FE8  18                03161 	CLC
4FE9  6555              03162 	ADC CVB_E
4FEB  AA                03163 	TAX
4FEC  98                03164 	TYA
4FED  6900              03165 	ADC #0
4FEF  A8                03166 	TAY
4FF0  8A                03167 	TXA
4FF1  18                03168 	CLC
4FF2  6920              03169 	ADC #32
4FF4  AA                03170 	TAX
4FF5  98                03171 	TYA
4FF6  6900              03172 	ADC #0
4FF8  A8                03173 	TAY
4FF9  8A                03174 	TXA
4FFA  8502              03175 	STA TEMP
4FFC  8403              03176 	STY TEMP+1
4FFE  68                03177 	PLA
4FFF  AA                03178 	TAX
5000  A502              03179 	LDA TEMP
5002  78                03180 	SEI
5003  201E40            03181 	JSR WRTVRM
5006  58                03182 	CLI
5007                    03183 	; 			VPOKE #c + e + 64, base_character + 3.
5007  A563              03184 	LDA CVB_BASE_CHARACTER
5009  18                03185 	CLC
500A  6903              03186 	ADC #3
500C  48                03187 	PHA
500D  A55F              03188 	LDA CVB_#C
500F  A460              03189 	LDY CVB_#C+1
5011  18                03190 	CLC
5012  6555              03191 	ADC CVB_E
5014  AA                03192 	TAX
5015  98                03193 	TYA
5016  6900              03194 	ADC #0
5018  A8                03195 	TAY
5019  8A                03196 	TXA
501A  18                03197 	CLC
501B  6940              03198 	ADC #64
501D  AA                03199 	TAX
501E  98                03200 	TYA
501F  6900              03201 	ADC #0
5021  A8                03202 	TAY
5022  8A                03203 	TXA
5023  8502              03204 	STA TEMP
5025  8403              03205 	STY TEMP+1
5027  68                03206 	PLA
5028  AA                03207 	TAX
5029  A502              03208 	LDA TEMP
502B  78                03209 	SEI
502C  201E40            03210 	JSR WRTVRM
502F  58                03211 	CLI
5030                    03212 	; 			VPOKE #c + e + 96, base_character + 3.
5030  A563              03213 	LDA CVB_BASE_CHARACTER
5032  18                03214 	CLC
5033  6903              03215 	ADC #3
5035  48                03216 	PHA
5036  A55F              03217 	LDA CVB_#C
5038  A460              03218 	LDY CVB_#C+1
503A  18                03219 	CLC
503B  6555              03220 	ADC CVB_E
503D  AA                03221 	TAX
503E  98                03222 	TYA
503F  6900              03223 	ADC #0
5041  A8                03224 	TAY
5042  8A                03225 	TXA
5043  18                03226 	CLC
5044  6960              03227 	ADC #96
5046  AA                03228 	TAX
5047  98                03229 	TYA
5048  6900              03230 	ADC #0
504A  A8                03231 	TAY
504B  8A                03232 	TXA
504C  8502              03233 	STA TEMP
504E  8403              03234 	STY TEMP+1
5050  68                03235 	PLA
5051  AA                03236 	TAX
5052  A502              03237 	LDA TEMP
5054  78                03238 	SEI
5055  201E40            03239 	JSR WRTVRM
5058  58                03240 	CLI
5059                    03241 	; 			VPOKE #c + e + 128, base_character + 3.
5059  A563              03242 	LDA CVB_BASE_CHARACTER
505B  18                03243 	CLC
505C  6903              03244 	ADC #3
505E  48                03245 	PHA
505F  A55F              03246 	LDA CVB_#C
5061  A460              03247 	LDY CVB_#C+1
5063  18                03248 	CLC
5064  6555              03249 	ADC CVB_E
5066  AA                03250 	TAX
5067  98                03251 	TYA
5068  6900              03252 	ADC #0
506A  A8                03253 	TAY
506B  8A                03254 	TXA
506C  18                03255 	CLC
506D  6980              03256 	ADC #128
506F  AA                03257 	TAX
5070  98                03258 	TYA
5071  6900              03259 	ADC #0
5073  A8                03260 	TAY
5074  8A                03261 	TXA
5075  8502              03262 	STA TEMP
5077  8403              03263 	STY TEMP+1
5079  68                03264 	PLA
507A  AA                03265 	TAX
507B  A502              03266 	LDA TEMP
507D  78                03267 	SEI
507E  201E40            03268 	JSR WRTVRM
5081  58                03269 	CLI
5082                    03270 	; 		NEXT d
5082  A554              03271 	LDA CVB_D
5084  18                03272 	CLC
5085  6901              03273 	ADC #1
5087  8554              03274 	STA CVB_D
5089  A56A              03275 	LDA CVB_LADDERS
508B  C554              03276 	CMP CVB_D
508D  9003              03277 	BCC CV61
508F  4CA84F            03278 	JMP CV60
5092                    03279 CV61:
5092                    03280 	; 	NEXT #c
5092  A55F              03281 	LDA CVB_#C
5094  A460              03282 	LDY CVB_#C+1
5096  18                03283 	CLC
5097  69A0              03284 	ADC #160
5099  AA                03285 	TAX
509A  98                03286 	TYA
509B  6900              03287 	ADC #0
509D  A8                03288 	TAY
509E  8A                03289 	TXA
509F  855F              03290 	STA CVB_#C
50A1  8460              03291 	STY CVB_#C+1
50A3  A55F              03292 	LDA CVB_#C
50A5  A460              03293 	LDY CVB_#C+1
50A7  38                03294 	SEC
50A8  E9C1              03295 	SBC #193
50AA  98                03296 	TYA
50AB  E919              03297 	SBC #25
50AD  B003              03298 	BCS CV62
50AF  4CA44F            03299 	JMP CV59
50B2                    03300 CV62:
50B2                    03301 	; 
50B2                    03302 	; 	' Draw the "exit".
50B2                    03303 	; 	VPOKE $1A5E, 148
50B2  A994              03304 	LDA #148
50B4  48                03305 	PHA
50B5  A95E              03306 	LDA #94
50B7  A01A              03307 	LDY #26
50B9  8502              03308 	STA TEMP
50BB  8403              03309 	STY TEMP+1
50BD  68                03310 	PLA
50BE  AA                03311 	TAX
50BF  A502              03312 	LDA TEMP
50C1  78                03313 	SEI
50C2  201E40            03314 	JSR WRTVRM
50C5  58                03315 	CLI
50C6                    03316 	; 
50C6                    03317 	; 	END
50C6  60                03318 	RTS
50C7                    03319 	; 
50C7                    03320 	; 	'
50C7                    03321 	; 	' Move the player
50C7                    03322 	; 	'
50C7                    03323 	; move_player:	PROCEDURE
50C7                    03324 CVB_MOVE_PLAYER:
50C7                    03325 	; 	IF cont1.left THEN
50C7  A520              03326 	LDA JOY1_DATA
50C9  2908              03327 	AND #8
50CB  D003              03328 	BNE CV64
50CD  4C1D51            03329 	JMP CV63
50D0                    03330 CV64:
50D0                    03331 	; 		IF y_player % 40 = 16 THEN	' Player aligned on floor
50D0  A56C              03332 	LDA CVB_Y_PLAYER
50D2  A000              03333 	LDY #0
50D4  48                03334 	PHA
50D5  98                03335 	TYA
50D6  48                03336 	PHA
50D7  A928              03337 	LDA #40
50D9  A000              03338 	LDY #0
50DB  8502              03339 	STA TEMP
50DD  8403              03340 	STY TEMP+1
50DF  20CC43            03341 	JSR _MOD16
50E2  38                03342 	SEC
50E3  E910              03343 	SBC #16
50E5  8502              03344 	STA TEMP
50E7  98                03345 	TYA
50E8  E900              03346 	SBC #0
50EA  0502              03347 	ORA TEMP
50EC  F003              03348 	BEQ CV66
50EE  4C1D51            03349 	JMP CV65
50F1                    03350 CV66:
50F1                    03351 	; 			IF x_player > 0 THEN x_player = x_player - 1
50F1  A564              03352 	LDA CVB_X_PLAYER
50F3  C901              03353 	CMP #1
50F5  B003              03354 	BCS CV68
50F7  4C0151            03355 	JMP CV67
50FA                    03356 CV68:
50FA  A564              03357 	LDA CVB_X_PLAYER
50FC  38                03358 	SEC
50FD  E901              03359 	SBC #1
50FF  8564              03360 	STA CVB_X_PLAYER
5101                    03361 CV67:
5101                    03362 	; 			IF FRAME AND 4 THEN player_frame = 8 ELSE player_frame = 12
5101  A524              03363 	LDA FRAME
5103  A425              03364 	LDY FRAME+1
5105  2904              03365 	AND #4
5107  A000              03366 	LDY #0
5109  8402              03367 	STY TEMP
510B  0502              03368 	ORA TEMP
510D  D003              03369 	BNE CV70
510F  4C1951            03370 	JMP CV69
5112                    03371 CV70:
5112  A908              03372 	LDA #8
5114  8556              03373 	STA CVB_PLAYER_FRAME
5116  4C1D51            03374 	JMP CV71
5119                    03375 CV69:
5119  A90C              03376 	LDA #12
511B  8556              03377 	STA CVB_PLAYER_FRAME
511D                    03378 CV71:
511D                    03379 	; 		END IF
511D                    03380 CV65:
511D                    03381 	; 	END IF
511D                    03382 CV63:
511D                    03383 	; 	IF cont1.right THEN
511D  A520              03384 	LDA JOY1_DATA
511F  2902              03385 	AND #2
5121  D003              03386 	BNE CV73
5123  4C7351            03387 	JMP CV72
5126                    03388 CV73:
5126                    03389 	; 		IF y_player % 40 = 16 THEN	' Player aligned on floor
5126  A56C              03390 	LDA CVB_Y_PLAYER
5128  A000              03391 	LDY #0
512A  48                03392 	PHA
512B  98                03393 	TYA
512C  48                03394 	PHA
512D  A928              03395 	LDA #40
512F  A000              03396 	LDY #0
5131  8502              03397 	STA TEMP
5133  8403              03398 	STY TEMP+1
5135  20CC43            03399 	JSR _MOD16
5138  38                03400 	SEC
5139  E910              03401 	SBC #16
513B  8502              03402 	STA TEMP
513D  98                03403 	TYA
513E  E900              03404 	SBC #0
5140  0502              03405 	ORA TEMP
5142  F003              03406 	BEQ CV75
5144  4C7351            03407 	JMP CV74
5147                    03408 CV75:
5147                    03409 	; 			IF x_player < 240 THEN x_player = x_player + 1
5147  A564              03410 	LDA CVB_X_PLAYER
5149  C9F0              03411 	CMP #240
514B  9003              03412 	BCC CV77
514D  4C5751            03413 	JMP CV76
5150                    03414 CV77:
5150  A564              03415 	LDA CVB_X_PLAYER
5152  18                03416 	CLC
5153  6901              03417 	ADC #1
5155  8564              03418 	STA CVB_X_PLAYER
5157                    03419 CV76:
5157                    03420 	; 			IF FRAME AND 4 THEN player_frame = 0 ELSE player_frame = 4
5157  A524              03421 	LDA FRAME
5159  A425              03422 	LDY FRAME+1
515B  2904              03423 	AND #4
515D  A000              03424 	LDY #0
515F  8402              03425 	STY TEMP
5161  0502              03426 	ORA TEMP
5163  D003              03427 	BNE CV79
5165  4C6F51            03428 	JMP CV78
5168                    03429 CV79:
5168  A900              03430 	LDA #0
516A  8556              03431 	STA CVB_PLAYER_FRAME
516C  4C7351            03432 	JMP CV80
516F                    03433 CV78:
516F  A904              03434 	LDA #4
5171  8556              03435 	STA CVB_PLAYER_FRAME
5173                    03436 CV80:
5173                    03437 	; 		END IF
5173                    03438 CV74:
5173                    03439 	; 	END IF
5173                    03440 CV72:
5173                    03441 	; 	IF cont1.up THEN
5173  A520              03442 	LDA JOY1_DATA
5175  2901              03443 	AND #1
5177  D003              03444 	BNE CV82
5179  4C6052            03445 	JMP CV81
517C                    03446 CV82:
517C                    03447 	; 		IF y_player % 40 = 16 THEN	' Player aligned on floor.
517C  A56C              03448 	LDA CVB_Y_PLAYER
517E  A000              03449 	LDY #0
5180  48                03450 	PHA
5181  98                03451 	TYA
5182  48                03452 	PHA
5183  A928              03453 	LDA #40
5185  A000              03454 	LDY #0
5187  8502              03455 	STA TEMP
5189  8403              03456 	STY TEMP+1
518B  20CC43            03457 	JSR _MOD16
518E  38                03458 	SEC
518F  E910              03459 	SBC #16
5191  8502              03460 	STA TEMP
5193  98                03461 	TYA
5194  E900              03462 	SBC #0
5196  0502              03463 	ORA TEMP
5198  F003              03464 	BEQ CV84
519A  4C3D52            03465 	JMP CV83
519D                    03466 CV84:
519D                    03467 	; 			column = (x_player + 7) /8
519D  A564              03468 	LDA CVB_X_PLAYER
519F  A000              03469 	LDY #0
51A1  18                03470 	CLC
51A2  6907              03471 	ADC #7
51A4  AA                03472 	TAX
51A5  98                03473 	TYA
51A6  6900              03474 	ADC #0
51A8  A8                03475 	TAY
51A9  8A                03476 	TXA
51AA  8402              03477 	STY TEMP
51AC  4602              03478 	LSR TEMP
51AE  6A                03479 	ROR A
51AF  4602              03480 	LSR TEMP
51B1  6A                03481 	ROR A
51B2  4602              03482 	LSR TEMP
51B4  6A                03483 	ROR A
51B5  A402              03484 	LDY TEMP
51B7  855B              03485 	STA CVB_COLUMN
51B9                    03486 	; 			row = (y_player + 8) / 8
51B9  A56C              03487 	LDA CVB_Y_PLAYER
51BB  A000              03488 	LDY #0
51BD  18                03489 	CLC
51BE  6908              03490 	ADC #8
51C0  AA                03491 	TAX
51C1  98                03492 	TYA
51C2  6900              03493 	ADC #0
51C4  A8                03494 	TAY
51C5  8A                03495 	TXA
51C6  8402              03496 	STY TEMP
51C8  4602              03497 	LSR TEMP
51CA  6A                03498 	ROR A
51CB  4602              03499 	LSR TEMP
51CD  6A                03500 	ROR A
51CE  4602              03501 	LSR TEMP
51D0  6A                03502 	ROR A
51D1  A402              03503 	LDY TEMP
51D3  856B              03504 	STA CVB_ROW
51D5                    03505 	; 			#c = $1800 + row * 32 + column
51D5  A56B              03506 	LDA CVB_ROW
51D7  A000              03507 	LDY #0
51D9  8402              03508 	STY TEMP
51DB  0A                03509 	ASL A
51DC  2602              03510 	ROL TEMP
51DE  0A                03511 	ASL A
51DF  2602              03512 	ROL TEMP
51E1  0A                03513 	ASL A
51E2  2602              03514 	ROL TEMP
51E4  0A                03515 	ASL A
51E5  2602              03516 	ROL TEMP
51E7  0A                03517 	ASL A
51E8  2602              03518 	ROL TEMP
51EA  A402              03519 	LDY TEMP
51EC  18                03520 	CLC
51ED  6900              03521 	ADC #0
51EF  AA                03522 	TAX
51F0  98                03523 	TYA
51F1  6918              03524 	ADC #24
51F3  A8                03525 	TAY
51F4  8A                03526 	TXA
51F5  18                03527 	CLC
51F6  655B              03528 	ADC CVB_COLUMN
51F8  AA                03529 	TAX
51F9  98                03530 	TYA
51FA  6900              03531 	ADC #0
51FC  A8                03532 	TAY
51FD  8A                03533 	TXA
51FE  855F              03534 	STA CVB_#C
5200  8460              03535 	STY CVB_#C+1
5202                    03536 	; 			IF VPEEK(#c) = base_character + 3 THEN	' Ladder?
5202  A55F              03537 	LDA CVB_#C
5204  A460              03538 	LDY CVB_#C+1
5206  78                03539 	SEI
5207  202A40            03540 	JSR RDVRM
520A  58                03541 	CLI
520B  A000              03542 	LDY #0
520D  48                03543 	PHA
520E  98                03544 	TYA
520F  48                03545 	PHA
5210  A563              03546 	LDA CVB_BASE_CHARACTER
5212  A000              03547 	LDY #0
5214  18                03548 	CLC
5215  6903              03549 	ADC #3
5217  AA                03550 	TAX
5218  98                03551 	TYA
5219  6900              03552 	ADC #0
521B  A8                03553 	TAY
521C  8A                03554 	TXA
521D  8502              03555 	STA TEMP
521F  8403              03556 	STY TEMP+1
5221  68                03557 	PLA
5222  A8                03558 	TAY
5223  68                03559 	PLA
5224  38                03560 	SEC
5225  E502              03561 	SBC TEMP
5227  8502              03562 	STA TEMP
5229  98                03563 	TYA
522A  E503              03564 	SBC TEMP+1
522C  0502              03565 	ORA TEMP
522E  F003              03566 	BEQ CV86
5230  4C3A52            03567 	JMP CV85
5233                    03568 CV86:
5233                    03569 	; 				y_player = y_player - 1
5233  A56C              03570 	LDA CVB_Y_PLAYER
5235  38                03571 	SEC
5236  E901              03572 	SBC #1
5238  856C              03573 	STA CVB_Y_PLAYER
523A                    03574 	; 			END IF
523A                    03575 CV85:
523A                    03576 	; 		ELSE
523A  4C6052            03577 	JMP CV87
523D                    03578 CV83:
523D                    03579 	; 			IF FRAME AND 4 THEN player_frame = 16 ELSE player_frame = 20
523D  A524              03580 	LDA FRAME
523F  A425              03581 	LDY FRAME+1
5241  2904              03582 	AND #4
5243  A000              03583 	LDY #0
5245  8402              03584 	STY TEMP
5247  0502              03585 	ORA TEMP
5249  D003              03586 	BNE CV89
524B  4C5552            03587 	JMP CV88
524E                    03588 CV89:
524E  A910              03589 	LDA #16
5250  8556              03590 	STA CVB_PLAYER_FRAME
5252  4C5952            03591 	JMP CV90
5255                    03592 CV88:
5255  A914              03593 	LDA #20
5257  8556              03594 	STA CVB_PLAYER_FRAME
5259                    03595 CV90:
5259                    03596 	; 			y_player = y_player - 1
5259  A56C              03597 	LDA CVB_Y_PLAYER
525B  38                03598 	SEC
525C  E901              03599 	SBC #1
525E  856C              03600 	STA CVB_Y_PLAYER
5260                    03601 	; 		END IF
5260                    03602 CV87:
5260                    03603 	; 	END IF
5260                    03604 CV81:
5260                    03605 	; 	IF cont1.down THEN
5260  A520              03606 	LDA JOY1_DATA
5262  2904              03607 	AND #4
5264  D003              03608 	BNE CV92
5266  4C4D53            03609 	JMP CV91
5269                    03610 CV92:
5269                    03611 	; 		IF y_player % 40 = 16 THEN	' Player aligned on floor.
5269  A56C              03612 	LDA CVB_Y_PLAYER
526B  A000              03613 	LDY #0
526D  48                03614 	PHA
526E  98                03615 	TYA
526F  48                03616 	PHA
5270  A928              03617 	LDA #40
5272  A000              03618 	LDY #0
5274  8502              03619 	STA TEMP
5276  8403              03620 	STY TEMP+1
5278  20CC43            03621 	JSR _MOD16
527B  38                03622 	SEC
527C  E910              03623 	SBC #16
527E  8502              03624 	STA TEMP
5280  98                03625 	TYA
5281  E900              03626 	SBC #0
5283  0502              03627 	ORA TEMP
5285  F003              03628 	BEQ CV94
5287  4C2A53            03629 	JMP CV93
528A                    03630 CV94:
528A                    03631 	; 			column = (x_player + 7) /8
528A  A564              03632 	LDA CVB_X_PLAYER
528C  A000              03633 	LDY #0
528E  18                03634 	CLC
528F  6907              03635 	ADC #7
5291  AA                03636 	TAX
5292  98                03637 	TYA
5293  6900              03638 	ADC #0
5295  A8                03639 	TAY
5296  8A                03640 	TXA
5297  8402              03641 	STY TEMP
5299  4602              03642 	LSR TEMP
529B  6A                03643 	ROR A
529C  4602              03644 	LSR TEMP
529E  6A                03645 	ROR A
529F  4602              03646 	LSR TEMP
52A1  6A                03647 	ROR A
52A2  A402              03648 	LDY TEMP
52A4  855B              03649 	STA CVB_COLUMN
52A6                    03650 	; 			row = (y_player + 16) / 8
52A6  A56C              03651 	LDA CVB_Y_PLAYER
52A8  A000              03652 	LDY #0
52AA  18                03653 	CLC
52AB  6910              03654 	ADC #16
52AD  AA                03655 	TAX
52AE  98                03656 	TYA
52AF  6900              03657 	ADC #0
52B1  A8                03658 	TAY
52B2  8A                03659 	TXA
52B3  8402              03660 	STY TEMP
52B5  4602              03661 	LSR TEMP
52B7  6A                03662 	ROR A
52B8  4602              03663 	LSR TEMP
52BA  6A                03664 	ROR A
52BB  4602              03665 	LSR TEMP
52BD  6A                03666 	ROR A
52BE  A402              03667 	LDY TEMP
52C0  856B              03668 	STA CVB_ROW
52C2                    03669 	; 			#c = $1800 + row * 32 + column
52C2  A56B              03670 	LDA CVB_ROW
52C4  A000              03671 	LDY #0
52C6  8402              03672 	STY TEMP
52C8  0A                03673 	ASL A
52C9  2602              03674 	ROL TEMP
52CB  0A                03675 	ASL A
52CC  2602              03676 	ROL TEMP
52CE  0A                03677 	ASL A
52CF  2602              03678 	ROL TEMP
52D1  0A                03679 	ASL A
52D2  2602              03680 	ROL TEMP
52D4  0A                03681 	ASL A
52D5  2602              03682 	ROL TEMP
52D7  A402              03683 	LDY TEMP
52D9  18                03684 	CLC
52DA  6900              03685 	ADC #0
52DC  AA                03686 	TAX
52DD  98                03687 	TYA
52DE  6918              03688 	ADC #24
52E0  A8                03689 	TAY
52E1  8A                03690 	TXA
52E2  18                03691 	CLC
52E3  655B              03692 	ADC CVB_COLUMN
52E5  AA                03693 	TAX
52E6  98                03694 	TYA
52E7  6900              03695 	ADC #0
52E9  A8                03696 	TAY
52EA  8A                03697 	TXA
52EB  855F              03698 	STA CVB_#C
52ED  8460              03699 	STY CVB_#C+1
52EF                    03700 	; 			IF VPEEK(#c) = base_character + 3 THEN	' Ladder?
52EF  A55F              03701 	LDA CVB_#C
52F1  A460              03702 	LDY CVB_#C+1
52F3  78                03703 	SEI
52F4  202A40            03704 	JSR RDVRM
52F7  58                03705 	CLI
52F8  A000              03706 	LDY #0
52FA  48                03707 	PHA
52FB  98                03708 	TYA
52FC  48                03709 	PHA
52FD  A563              03710 	LDA CVB_BASE_CHARACTER
52FF  A000              03711 	LDY #0
5301  18                03712 	CLC
5302  6903              03713 	ADC #3
5304  AA                03714 	TAX
5305  98                03715 	TYA
5306  6900              03716 	ADC #0
5308  A8                03717 	TAY
5309  8A                03718 	TXA
530A  8502              03719 	STA TEMP
530C  8403              03720 	STY TEMP+1
530E  68                03721 	PLA
530F  A8                03722 	TAY
5310  68                03723 	PLA
5311  38                03724 	SEC
5312  E502              03725 	SBC TEMP
5314  8502              03726 	STA TEMP
5316  98                03727 	TYA
5317  E503              03728 	SBC TEMP+1
5319  0502              03729 	ORA TEMP
531B  F003              03730 	BEQ CV96
531D  4C2753            03731 	JMP CV95
5320                    03732 CV96:
5320                    03733 	; 				y_player = y_player + 1
5320  A56C              03734 	LDA CVB_Y_PLAYER
5322  18                03735 	CLC
5323  6901              03736 	ADC #1
5325  856C              03737 	STA CVB_Y_PLAYER
5327                    03738 	; 			END IF
5327                    03739 CV95:
5327                    03740 	; 		ELSE
5327  4C4D53            03741 	JMP CV97
532A                    03742 CV93:
532A                    03743 	; 			IF FRAME AND 4 THEN player_frame = 16 ELSE player_frame = 20
532A  A524              03744 	LDA FRAME
532C  A425              03745 	LDY FRAME+1
532E  2904              03746 	AND #4
5330  A000              03747 	LDY #0
5332  8402              03748 	STY TEMP
5334  0502              03749 	ORA TEMP
5336  D003              03750 	BNE CV99
5338  4C4253            03751 	JMP CV98
533B                    03752 CV99:
533B  A910              03753 	LDA #16
533D  8556              03754 	STA CVB_PLAYER_FRAME
533F  4C4653            03755 	JMP CV100
5342                    03756 CV98:
5342  A914              03757 	LDA #20
5344  8556              03758 	STA CVB_PLAYER_FRAME
5346                    03759 CV100:
5346                    03760 	; 			y_player = y_player + 1
5346  A56C              03761 	LDA CVB_Y_PLAYER
5348  18                03762 	CLC
5349  6901              03763 	ADC #1
534B  856C              03764 	STA CVB_Y_PLAYER
534D                    03765 	; 		END IF
534D                    03766 CV97:
534D                    03767 	; 	END IF
534D                    03768 CV91:
534D                    03769 	; 	END
534D  60                03770 	RTS
534E                    03771 	; 
534E                    03772 	; 	'
534E                    03773 	; 	' Move the enemies.
534E                    03774 	; 	'
534E                    03775 	; move_enemies:	PROCEDURE
534E                    03776 CVB_MOVE_ENEMIES:
534E                    03777 	; 	IF enemy1_frame < 32 THEN
534E  A55A              03778 	LDA CVB_ENEMY1_FRAME
5350  C920              03779 	CMP #32
5352  9003              03780 	BCC CV102
5354  4C6E53            03781 	JMP CV101
5357                    03782 CV102:
5357                    03783 	; 		x_enemy1 = x_enemy1 - 1.
5357  A566              03784 	LDA CVB_X_ENEMY1
5359  38                03785 	SEC
535A  E901              03786 	SBC #1
535C  8566              03787 	STA CVB_X_ENEMY1
535E                    03788 	; 		IF x_enemy1 = 0 THEN enemy1_frame = 32
535E  A566              03789 	LDA CVB_X_ENEMY1
5360  C900              03790 	CMP #0
5362  F003              03791 	BEQ CV104
5364  4C6B53            03792 	JMP CV103
5367                    03793 CV104:
5367  A920              03794 	LDA #32
5369  855A              03795 	STA CVB_ENEMY1_FRAME
536B                    03796 CV103:
536B                    03797 	; 	ELSE
536B  4C8253            03798 	JMP CV105
536E                    03799 CV101:
536E                    03800 	; 		x_enemy1 = x_enemy1 + 1.
536E  A566              03801 	LDA CVB_X_ENEMY1
5370  18                03802 	CLC
5371  6901              03803 	ADC #1
5373  8566              03804 	STA CVB_X_ENEMY1
5375                    03805 	; 		IF x_enemy1 = 240 THEN enemy1_frame = 24
5375  A566              03806 	LDA CVB_X_ENEMY1
5377  C9F0              03807 	CMP #240
5379  F003              03808 	BEQ CV107
537B  4C8253            03809 	JMP CV106
537E                    03810 CV107:
537E  A918              03811 	LDA #24
5380  855A              03812 	STA CVB_ENEMY1_FRAME
5382                    03813 CV106:
5382                    03814 	; 	END IF
5382                    03815 CV105:
5382                    03816 	; 	enemy1_frame = (enemy1_frame AND $f8) + (FRAME AND 4)
5382  A55A              03817 	LDA CVB_ENEMY1_FRAME
5384  29F8              03818 	AND #248
5386  A000              03819 	LDY #0
5388  48                03820 	PHA
5389  98                03821 	TYA
538A  48                03822 	PHA
538B  A524              03823 	LDA FRAME
538D  A425              03824 	LDY FRAME+1
538F  2904              03825 	AND #4
5391  A000              03826 	LDY #0
5393  8502              03827 	STA TEMP
5395  8403              03828 	STY TEMP+1
5397  68                03829 	PLA
5398  A8                03830 	TAY
5399  68                03831 	PLA
539A  18                03832 	CLC
539B  6502              03833 	ADC TEMP
539D  AA                03834 	TAX
539E  98                03835 	TYA
539F  6503              03836 	ADC TEMP+1
53A1  A8                03837 	TAY
53A2  8A                03838 	TXA
53A3  855A              03839 	STA CVB_ENEMY1_FRAME
53A5                    03840 	; 
53A5                    03841 	; 	IF enemy2_frame < 32 THEN
53A5  A55E              03842 	LDA CVB_ENEMY2_FRAME
53A7  C920              03843 	CMP #32
53A9  9003              03844 	BCC CV109
53AB  4CC553            03845 	JMP CV108
53AE                    03846 CV109:
53AE                    03847 	; 		x_enemy2 = x_enemy2 - 1.
53AE  A567              03848 	LDA CVB_X_ENEMY2
53B0  38                03849 	SEC
53B1  E901              03850 	SBC #1
53B3  8567              03851 	STA CVB_X_ENEMY2
53B5                    03852 	; 		IF x_enemy2 = 0 THEN enemy2_frame = 32
53B5  A567              03853 	LDA CVB_X_ENEMY2
53B7  C900              03854 	CMP #0
53B9  F003              03855 	BEQ CV111
53BB  4CC253            03856 	JMP CV110
53BE                    03857 CV111:
53BE  A920              03858 	LDA #32
53C0  855E              03859 	STA CVB_ENEMY2_FRAME
53C2                    03860 CV110:
53C2                    03861 	; 	ELSE
53C2  4CD953            03862 	JMP CV112
53C5                    03863 CV108:
53C5                    03864 	; 		x_enemy2 = x_enemy2 + 1.
53C5  A567              03865 	LDA CVB_X_ENEMY2
53C7  18                03866 	CLC
53C8  6901              03867 	ADC #1
53CA  8567              03868 	STA CVB_X_ENEMY2
53CC                    03869 	; 		IF x_enemy2 = 240 THEN enemy2_frame = 24
53CC  A567              03870 	LDA CVB_X_ENEMY2
53CE  C9F0              03871 	CMP #240
53D0  F003              03872 	BEQ CV114
53D2  4CD953            03873 	JMP CV113
53D5                    03874 CV114:
53D5  A918              03875 	LDA #24
53D7  855E              03876 	STA CVB_ENEMY2_FRAME
53D9                    03877 CV113:
53D9                    03878 	; 	END IF
53D9                    03879 CV112:
53D9                    03880 	; 	enemy2_frame = (enemy2_frame AND $f8) + (FRAME AND 4)
53D9  A55E              03881 	LDA CVB_ENEMY2_FRAME
53DB  29F8              03882 	AND #248
53DD  A000              03883 	LDY #0
53DF  48                03884 	PHA
53E0  98                03885 	TYA
53E1  48                03886 	PHA
53E2  A524              03887 	LDA FRAME
53E4  A425              03888 	LDY FRAME+1
53E6  2904              03889 	AND #4
53E8  A000              03890 	LDY #0
53EA  8502              03891 	STA TEMP
53EC  8403              03892 	STY TEMP+1
53EE  68                03893 	PLA
53EF  A8                03894 	TAY
53F0  68                03895 	PLA
53F1  18                03896 	CLC
53F2  6502              03897 	ADC TEMP
53F4  AA                03898 	TAX
53F5  98                03899 	TYA
53F6  6503              03900 	ADC TEMP+1
53F8  A8                03901 	TAY
53F9  8A                03902 	TXA
53FA  855E              03903 	STA CVB_ENEMY2_FRAME
53FC                    03904 	; 
53FC                    03905 	; 	IF enemy3_frame < 32 THEN
53FC  A565              03906 	LDA CVB_ENEMY3_FRAME
53FE  C920              03907 	CMP #32
5400  9003              03908 	BCC CV116
5402  4C1C54            03909 	JMP CV115
5405                    03910 CV116:
5405                    03911 	; 		x_enemy3 = x_enemy3 - 1.
5405  A568              03912 	LDA CVB_X_ENEMY3
5407  38                03913 	SEC
5408  E901              03914 	SBC #1
540A  8568              03915 	STA CVB_X_ENEMY3
540C                    03916 	; 		IF x_enemy3 = 0 THEN enemy3_frame = 32
540C  A568              03917 	LDA CVB_X_ENEMY3
540E  C900              03918 	CMP #0
5410  F003              03919 	BEQ CV118
5412  4C1954            03920 	JMP CV117
5415                    03921 CV118:
5415  A920              03922 	LDA #32
5417  8565              03923 	STA CVB_ENEMY3_FRAME
5419                    03924 CV117:
5419                    03925 	; 	ELSE
5419  4C3054            03926 	JMP CV119
541C                    03927 CV115:
541C                    03928 	; 		x_enemy3 = x_enemy3 + 1.
541C  A568              03929 	LDA CVB_X_ENEMY3
541E  18                03930 	CLC
541F  6901              03931 	ADC #1
5421  8568              03932 	STA CVB_X_ENEMY3
5423                    03933 	; 		IF x_enemy3 = 240 THEN enemy3_frame = 24
5423  A568              03934 	LDA CVB_X_ENEMY3
5425  C9F0              03935 	CMP #240
5427  F003              03936 	BEQ CV121
5429  4C3054            03937 	JMP CV120
542C                    03938 CV121:
542C  A918              03939 	LDA #24
542E  8565              03940 	STA CVB_ENEMY3_FRAME
5430                    03941 CV120:
5430                    03942 	; 	END IF
5430                    03943 CV119:
5430                    03944 	; 	enemy3_frame = (enemy3_frame AND $f8) + (FRAME AND 4)
5430  A565              03945 	LDA CVB_ENEMY3_FRAME
5432  29F8              03946 	AND #248
5434  A000              03947 	LDY #0
5436  48                03948 	PHA
5437  98                03949 	TYA
5438  48                03950 	PHA
5439  A524              03951 	LDA FRAME
543B  A425              03952 	LDY FRAME+1
543D  2904              03953 	AND #4
543F  A000              03954 	LDY #0
5441  8502              03955 	STA TEMP
5443  8403              03956 	STY TEMP+1
5445  68                03957 	PLA
5446  A8                03958 	TAY
5447  68                03959 	PLA
5448  18                03960 	CLC
5449  6502              03961 	ADC TEMP
544B  AA                03962 	TAX
544C  98                03963 	TYA
544D  6503              03964 	ADC TEMP+1
544F  A8                03965 	TAY
5450  8A                03966 	TXA
5451  8565              03967 	STA CVB_ENEMY3_FRAME
5453                    03968 	; 	END
5453  60                03969 	RTS
5454                    03970 	; 
5454                    03971 	; game_bitmaps:
5454                    03972 CVB_GAME_BITMAPS:
5454                    03973 	; 	BITMAP "XXXXXXXX"
5454                    03974 	; 	BITMAP "XXXXXXXX"
5454                    03975 	; 	BITMAP "XXXXXXXX"
5454                    03976 	; 	BITMAP "XXXXXXXX"
5454                    03977 	; 	BITMAP "XXXXXXXX"
5454                    03978 	; 	BITMAP "XXXXXXXX"
5454                    03979 	; 	BITMAP "XXXXXXXX"
5454                    03980 	; 	BITMAP "XXXXXXXX"
5454  FFFFFFFFFFFFFFFF  03981 	DB $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF
545C                    03982 	; 
545C                    03983 	; 	BITMAP "XXX..XXX"
545C                    03984 	; 	BITMAP "XXX..XXX"
545C                    03985 	; 	BITMAP "XXX..XXX"
545C                    03986 	; 	BITMAP "XXX..XXX"
545C                    03987 	; 	BITMAP "XXX..XXX"
545C                    03988 	; 	BITMAP "XXX..XXX"
545C                    03989 	; 	BITMAP "XXX..XXX"
545C                    03990 	; 	BITMAP "XXX..XXX"
545C  E7E7E7E7E7E7E7E7  03991 	DB $E7,$E7,$E7,$E7,$E7,$E7,$E7,$E7
5464                    03992 	; 
5464                    03993 	; 	BITMAP "XXXXXXXX"
5464                    03994 	; 	BITMAP "XXXXXXXX"
5464                    03995 	; 	BITMAP "........"
5464                    03996 	; 	BITMAP "XXXXXXXX"
5464                    03997 	; 	BITMAP "XXXXXXXX"
5464                    03998 	; 	BITMAP "........"
5464                    03999 	; 	BITMAP "XXXXXXXX"
5464                    04000 	; 	BITMAP "XXXXXXXX"
5464  FFFF00FFFF00FFFF  04001 	DB $FF,$FF,$00,$FF,$FF,$00,$FF,$FF
546C                    04002 	; 
546C                    04003 	; 	BITMAP ".X....X."
546C                    04004 	; 	BITMAP ".X....X."
546C                    04005 	; 	BITMAP ".XXXXXX."
546C                    04006 	; 	BITMAP ".X....X."
546C                    04007 	; 	BITMAP ".X....X."
546C                    04008 	; 	BITMAP ".XXXXXX."
546C                    04009 	; 	BITMAP ".X....X."
546C                    04010 	; 	BITMAP ".X....X."
546C  42427E42427E4242  04011 	DB $42,$42,$7E,$42,$42,$7E,$42,$42
5474                    04012 	; 
5474                    04013 	; 	BITMAP "XXXXXXX."
5474                    04014 	; 	BITMAP "X.....X."
5474                    04015 	; 	BITMAP "X.XXX.X."
5474                    04016 	; 	BITMAP "X.X.X.X."
5474                    04017 	; 	BITMAP "X.XXX.X."
5474                    04018 	; 	BITMAP "X.....X."
5474                    04019 	; 	BITMAP "XXXXXXX."
5474                    04020 	; 	BITMAP "........"
5474  FE82BAAABA82FE00  04021 	DB $FE,$82,$BA,$AA,$BA,$82,$FE,$00
547C                    04022 	; 
547C                    04023 	; 	BITMAP "X.XXX.X."
547C                    04024 	; 	BITMAP "X.XXX.X."
547C                    04025 	; 	BITMAP "X.XXX.X."
547C                    04026 	; 	BITMAP "X.XXX.X."
547C                    04027 	; 	BITMAP "X.XXX.X."
547C                    04028 	; 	BITMAP "X.XXX.X."
547C                    04029 	; 	BITMAP "X.XXX.X."
547C                    04030 	; 	BITMAP "X.XXX.X."
547C  BABABABABABABABA  04031 	DB $BA,$BA,$BA,$BA,$BA,$BA,$BA,$BA
5484                    04032 	; 
5484                    04033 	; 	BITMAP "XXX.XXX."
5484                    04034 	; 	BITMAP "........"
5484                    04035 	; 	BITMAP "XXXXXXXX"
5484                    04036 	; 	BITMAP "XXXXXXXX"
5484                    04037 	; 	BITMAP "XXXXXXXX"
5484                    04038 	; 	BITMAP "........"
5484                    04039 	; 	BITMAP "........"
5484                    04040 	; 	BITMAP "........"
5484  EE00FFFFFF000000  04041 	DB $EE,$00,$FF,$FF,$FF,$00,$00,$00
548C                    04042 	; 
548C                    04043 	; 	BITMAP ".X....X."
548C                    04044 	; 	BITMAP ".X....X."
548C                    04045 	; 	BITMAP ".XXXXXX."
548C                    04046 	; 	BITMAP ".X....X."
548C                    04047 	; 	BITMAP ".X....X."
548C                    04048 	; 	BITMAP ".XXXXXX."
548C                    04049 	; 	BITMAP ".X....X."
548C                    04050 	; 	BITMAP ".X....X."
548C  42427E42427E4242  04051 	DB $42,$42,$7E,$42,$42,$7E,$42,$42
5494                    04052 	; 
5494                    04053 	; 	BITMAP "XXX.XXXX"
5494                    04054 	; 	BITMAP "XXX.XXXX"
5494                    04055 	; 	BITMAP "XXX.XXXX"
5494                    04056 	; 	BITMAP "........"
5494                    04057 	; 	BITMAP "XXXXXXX."
5494                    04058 	; 	BITMAP "XXXXXXX."
5494                    04059 	; 	BITMAP "XXXXXXX."
5494                    04060 	; 	BITMAP "........"
5494  EFEFEF00FEFEFE00  04061 	DB $EF,$EF,$EF,$00,$FE,$FE,$FE,$00
549C                    04062 	; 
549C                    04063 	; 	BITMAP ".XXXXXX."
549C                    04064 	; 	BITMAP ".XXXXXX."
549C                    04065 	; 	BITMAP ".XXXXXX."
549C                    04066 	; 	BITMAP "........"
549C                    04067 	; 	BITMAP ".XX.XXX."
549C                    04068 	; 	BITMAP ".XX.XXX."
549C                    04069 	; 	BITMAP ".XX.XXX."
549C                    04070 	; 	BITMAP "........"
549C  7E7E7E006E6E6E00  04071 	DB $7E,$7E,$7E,$00,$6E,$6E,$6E,$00
54A4                    04072 	; 
54A4                    04073 	; 	BITMAP "........"
54A4                    04074 	; 	BITMAP "XXXXXXXX"
54A4                    04075 	; 	BITMAP "XXXXXXXX"
54A4                    04076 	; 	BITMAP "X.X.X.X."
54A4                    04077 	; 	BITMAP ".X...X.."
54A4                    04078 	; 	BITMAP "........"
54A4                    04079 	; 	BITMAP "........"
54A4                    04080 	; 	BITMAP "........"
54A4  00FFFFAA44000000  04081 	DB $00,$FF,$FF,$AA,$44,$00,$00,$00
54AC                    04082 	; 
54AC                    04083 	; 	BITMAP ".X....X."
54AC                    04084 	; 	BITMAP ".X....X."
54AC                    04085 	; 	BITMAP ".XXXXXX."
54AC                    04086 	; 	BITMAP ".X....X."
54AC                    04087 	; 	BITMAP ".X....X."
54AC                    04088 	; 	BITMAP ".XXXXXX."
54AC                    04089 	; 	BITMAP ".X....X."
54AC                    04090 	; 	BITMAP ".X....X."
54AC  42427E42427E4242  04091 	DB $42,$42,$7E,$42,$42,$7E,$42,$42
54B4                    04092 	; 
54B4                    04093 	; 	BITMAP "XXX.XXX."
54B4                    04094 	; 	BITMAP "XXX.XXX."
54B4                    04095 	; 	BITMAP "XXX.XXX."
54B4                    04096 	; 	BITMAP "........"
54B4                    04097 	; 	BITMAP "XXX.XXX."
54B4                    04098 	; 	BITMAP "XXX.XXX."
54B4                    04099 	; 	BITMAP "XXX.XXX."
54B4                    04100 	; 	BITMAP "........"
54B4  EEEEEE00EEEEEE00  04101 	DB $EE,$EE,$EE,$00,$EE,$EE,$EE,$00
54BC                    04102 	; 
54BC                    04103 	; 	BITMAP ".X......"
54BC                    04104 	; 	BITMAP "..XX...."
54BC                    04105 	; 	BITMAP "....XX.."
54BC                    04106 	; 	BITMAP "......XX"
54BC                    04107 	; 	BITMAP "....XX.."
54BC                    04108 	; 	BITMAP "..XX...."
54BC                    04109 	; 	BITMAP ".X......"
54BC                    04110 	; 	BITMAP ".X......"
54BC  40300C030C304040  04111 	DB $40,$30,$0C,$03,$0C,$30,$40,$40
54C4                    04112 	; 
54C4                    04113 	; 	BITMAP "........"
54C4                    04114 	; 	BITMAP "XXXXXXXX"
54C4                    04115 	; 	BITMAP "........"
54C4                    04116 	; 	BITMAP "X.X.X.X."
54C4                    04117 	; 	BITMAP ".X.X.X.X"
54C4                    04118 	; 	BITMAP "........"
54C4                    04119 	; 	BITMAP "XXXXXXXX"
54C4                    04120 	; 	BITMAP "........"
54C4  00FF00AA5500FF00  04121 	DB $00,$FF,$00,$AA,$55,$00,$FF,$00
54CC                    04122 	; 
54CC                    04123 	; 	BITMAP "X......X"
54CC                    04124 	; 	BITMAP "X......X"
54CC                    04125 	; 	BITMAP "XX....XX"
54CC                    04126 	; 	BITMAP "X.XXXX.X"
54CC                    04127 	; 	BITMAP "X......X"
54CC                    04128 	; 	BITMAP "X......X"
54CC                    04129 	; 	BITMAP "XX....XX"
54CC                    04130 	; 	BITMAP "X.XXXX.X"
54CC  8181C3BD8181C3BD  04131 	DB $81,$81,$C3,$BD,$81,$81,$C3,$BD
54D4                    04132 	; 
54D4                    04133 	; 	BITMAP "X......X"
54D4                    04134 	; 	BITMAP ".X.XX..."
54D4                    04135 	; 	BITMAP "..XX.XXX"
54D4                    04136 	; 	BITMAP ".X...XXX"
54D4                    04137 	; 	BITMAP "..XXX..X"
54D4                    04138 	; 	BITMAP "..X..XXX"
54D4                    04139 	; 	BITMAP ".X..X..X"
54D4                    04140 	; 	BITMAP "..X..XXX"
54D4  8158374739274927  04141 	DB $81,$58,$37,$47,$39,$27,$49,$27
54DC                    04142 	; 
54DC                    04143 	; 	BITMAP ".X...XXX"
54DC                    04144 	; 	BITMAP ".X..X..X"
54DC                    04145 	; 	BITMAP "..X..XXX"
54DC                    04146 	; 	BITMAP ".X......"
54DC                    04147 	; 	BITMAP "..X.X..."
54DC                    04148 	; 	BITMAP "...X.X.X"
54DC                    04149 	; 	BITMAP "...X..X."
54DC                    04150 	; 	BITMAP "..X..XXX"
54DC  4749274028151227  04151 	DB $47,$49,$27,$40,$28,$15,$12,$27
54E4                    04152 	; 
54E4                    04153 	; 	BITMAP "........"
54E4                    04154 	; 	BITMAP "XXXXXXX."
54E4                    04155 	; 	BITMAP "XXXXXXX."
54E4                    04156 	; 	BITMAP "........"
54E4                    04157 	; 	BITMAP "XXX.XXXX"
54E4                    04158 	; 	BITMAP "XXX.XXXX"
54E4                    04159 	; 	BITMAP "........"
54E4                    04160 	; 	BITMAP "........"
54E4  00FEFE00EFEF0000  04161 	DB $00,$FE,$FE,$00,$EF,$EF,$00,$00
54EC                    04162 	; 
54EC                    04163 	; 	BITMAP "....XX.."
54EC                    04164 	; 	BITMAP "....XX.."
54EC                    04165 	; 	BITMAP "...XX..."
54EC                    04166 	; 	BITMAP "...XX..."
54EC                    04167 	; 	BITMAP "..XX...."
54EC                    04168 	; 	BITMAP "..XX...."
54EC                    04169 	; 	BITMAP "...XX..."
54EC                    04170 	; 	BITMAP "...XX..."
54EC  0C0C181830301818  04171 	DB $0C,$0C,$18,$18,$30,$30,$18,$18
54F4                    04172 	; 
54F4                    04173 	; 	BITMAP ".X.X.X.."
54F4                    04174 	; 	BITMAP "XXXXXXX."
54F4                    04175 	; 	BITMAP ".X.X.X.."
54F4                    04176 	; 	BITMAP "XXXXXXX."
54F4                    04177 	; 	BITMAP ".X.X.X.."
54F4                    04178 	; 	BITMAP "XXXXXXX."
54F4                    04179 	; 	BITMAP ".X.X.X.."
54F4                    04180 	; 	BITMAP "........"
54F4  54FE54FE54FE5400  04181 	DB $54,$FE,$54,$FE,$54,$FE,$54,$00
54FC                    04182 	; 
54FC                    04183 	; game_colors:
54FC                    04184 CVB_GAME_COLORS:
54FC                    04185 	; 	DATA BYTE $CC,$CC,$CC,$CC,$CC,$CC,$CC,$CC
54FC  CCCCCCCCCCCCCCCC  04186 	DB $CC,$CC,$CC,$CC,$CC,$CC,$CC,$CC
5504                    04187 	; 	DATA BYTE $21,$21,$21,$21,$21,$21,$21,$21
5504  2121212121212121  04188 	DB $21,$21,$21,$21,$21,$21,$21,$21
550C                    04189 	; 	DATA BYTE $A1,$A1,$A1,$A1,$A1,$A1,$A1,$A1
550C  A1A1A1A1A1A1A1A1  04190 	DB $A1,$A1,$A1,$A1,$A1,$A1,$A1,$A1
5514                    04191 	; 	DATA BYTE $51,$51,$51,$51,$51,$51,$51,$51
5514  5151515151515151  04192 	DB $51,$51,$51,$51,$51,$51,$51,$51
551C                    04193 	; 
551C                    04194 	; 	DATA BYTE $54,$54,$54,$54,$54,$54,$54,$54
551C  5454545454545454  04195 	DB $54,$54,$54,$54,$54,$54,$54,$54
5524                    04196 	; 	DATA BYTE $51,$51,$51,$51,$51,$51,$51,$51
5524  5151515151515151  04197 	DB $51,$51,$51,$51,$51,$51,$51,$51
552C                    04198 	; 	DATA BYTE $F1,$11,$E1,$E1,$E1,$11,$11,$11
552C  F111E1E1E1111111  04199 	DB $F1,$11,$E1,$E1,$E1,$11,$11,$11
5534                    04200 	; 	DATA BYTE $51,$51,$51,$51,$51,$51,$51,$51
5534  5151515151515151  04201 	DB $51,$51,$51,$51,$51,$51,$51,$51
553C                    04202 	; 
553C                    04203 	; 	DATA BYTE $68,$68,$68,$68,$68,$68,$68,$68
553C  6868686868686868  04204 	DB $68,$68,$68,$68,$68,$68,$68,$68
5544                    04205 	; 	DATA BYTE $81,$81,$81,$81,$81,$81,$81,$81
5544  8181818181818181  04206 	DB $81,$81,$81,$81,$81,$81,$81,$81
554C                    04207 	; 	DATA BYTE $51,$51,$51,$51,$51,$51,$51,$51
554C  5151515151515151  04208 	DB $51,$51,$51,$51,$51,$51,$51,$51
5554                    04209 	; 	DATA BYTE $51,$51,$51,$51,$51,$51,$51,$51
5554  5151515151515151  04210 	DB $51,$51,$51,$51,$51,$51,$51,$51
555C                    04211 	; 
555C                    04212 	; 	DATA BYTE $61,$61,$61,$61,$61,$61,$61,$61
555C  6161616161616161  04213 	DB $61,$61,$61,$61,$61,$61,$61,$61
5564                    04214 	; 	DATA BYTE $A1,$A1,$A1,$A1,$A1,$A1,$A1,$A1
5564  A1A1A1A1A1A1A1A1  04215 	DB $A1,$A1,$A1,$A1,$A1,$A1,$A1,$A1
556C                    04216 	; 	DATA BYTE $F1,$F1,$F1,$51,$51,$F1,$F1,$F1
556C  F1F1F15151F1F1F1  04217 	DB $F1,$F1,$F1,$51,$51,$F1,$F1,$F1
5574                    04218 	; 	DATA BYTE $E1,$E1,$E1,$E1,$E1,$E1,$E1,$E1
5574  E1E1E1E1E1E1E1E1  04219 	DB $E1,$E1,$E1,$E1,$E1,$E1,$E1,$E1
557C                    04220 	; 
557C                    04221 	; 	DATA BYTE $86,$86,$86,$86,$86,$86,$86,$86
557C  8686868686868686  04222 	DB $86,$86,$86,$86,$86,$86,$86,$86
5584                    04223 	; 	DATA BYTE $2C,$2C,$2C,$2C,$2C,$2C,$2C,$2C
5584  2C2C2C2C2C2C2C2C  04224 	DB $2C,$2C,$2C,$2C,$2C,$2C,$2C,$2C
558C                    04225 	; 	DATA BYTE $11,$6E,$6E,$6E,$6E,$6E,$6E,$11
558C  116E6E6E6E6E6E11  04226 	DB $11,$6E,$6E,$6E,$6E,$6E,$6E,$11
5594                    04227 	; 	DATA BYTE $C1,$C1,$C1,$C1,$C1,$C1,$C1,$C1
5594  C1C1C1C1C1C1C1C1  04228 	DB $C1,$C1,$C1,$C1,$C1,$C1,$C1,$C1
559C                    04229 	; 
559C                    04230 	; 	DATA BYTE $F1,$F1,$F1,$F1,$F1,$F1,$F1,$F1
559C  F1F1F1F1F1F1F1F1  04231 	DB $F1,$F1,$F1,$F1,$F1,$F1,$F1,$F1
55A4                    04232 	; 
55A4                    04233 	; game_sprites:
55A4                    04234 CVB_GAME_SPRITES:
55A4                    04235 	; 	BITMAP "................"
55A4                    04236 	; 	BITMAP ".......X.X.X...."
55A4                    04237 	; 	BITMAP ".....X.XXXXX...."
55A4                    04238 	; 	BITMAP "......XXXXXX...."
55A4                    04239 	; 	BITMAP ".....XXXXX.X...."
55A4                    04240 	; 	BITMAP "......XX.XXX...."
55A4                    04241 	; 	BITMAP ".....XXX...X...."
55A4                    04242 	; 	BITMAP "...XXXX.XXX....."
55A4                    04243 	; 	BITMAP "..XX.XXX........"
55A4                    04244 	; 	BITMAP ".XX..XXXX.XXX..."
55A4                    04245 	; 	BITMAP ".XXX.XXXX.XXX..."
55A4                    04246 	; 	BITMAP ".XXX.X.........."
55A4                    04247 	; 	BITMAP "......XXXX......"
55A4                    04248 	; 	BITMAP "....XXX.XXXXX..."
55A4                    04249 	; 	BITMAP "....XXX..XXXXX.."
55A4                    04250 	; 	BITMAP "....XXXX........"
55A4  000105030703071E  04251 	DB $00,$01,$05,$03,$07,$03,$07,$1E
55AC  37677774030E0E0F  04252 	DB $37,$67,$77,$74,$03,$0E,$0E,$0F
55B4  0050F0F0D07010E0  04253 	DB $00,$50,$F0,$F0,$D0,$70,$10,$E0
55BC  00B8B800C0F87C00  04254 	DB $00,$B8,$B8,$00,$C0,$F8,$7C,$00
55C4                    04255 	; 
55C4                    04256 	; 	BITMAP "........X.X.X..."
55C4                    04257 	; 	BITMAP "......X.XXXXX..."
55C4                    04258 	; 	BITMAP ".......XXXXXX..."
55C4                    04259 	; 	BITMAP "......XXXXX.X..."
55C4                    04260 	; 	BITMAP ".......XX.XXX..."
55C4                    04261 	; 	BITMAP "......XXX...X..."
55C4                    04262 	; 	BITMAP "......XX.XXX...."
55C4                    04263 	; 	BITMAP ".....XXXX......."
55C4                    04264 	; 	BITMAP ".....XXXXX......"
55C4                    04265 	; 	BITMAP ".....XX.XXX....."
55C4                    04266 	; 	BITMAP ".....XX.XXX....."
55C4                    04267 	; 	BITMAP ".....XXX........"
55C4                    04268 	; 	BITMAP "......XXXX......"
55C4                    04269 	; 	BITMAP "......XX........"
55C4                    04270 	; 	BITMAP "......XXXX......"
55C4                    04271 	; 	BITMAP "......XXXXX....."
55C4  0002010301030307  04272 	DB $00,$02,$01,$03,$01,$03,$03,$07
55CC  0706060703030303  04273 	DB $07,$06,$06,$07,$03,$03,$03,$03
55D4  A8F8F8E8B8887080  04274 	DB $A8,$F8,$F8,$E8,$B8,$88,$70,$80
55DC  C0E0E000C000C0E0  04275 	DB $C0,$E0,$E0,$00,$C0,$00,$C0,$E0
55E4                    04276 	; 
55E4                    04277 	; 	BITMAP "................"
55E4                    04278 	; 	BITMAP "....X.X.X......."
55E4                    04279 	; 	BITMAP "....XXXXX.X....."
55E4                    04280 	; 	BITMAP "....XXXXXX......"
55E4                    04281 	; 	BITMAP "....X.XXXXX....."
55E4                    04282 	; 	BITMAP "....XXX.XX......"
55E4                    04283 	; 	BITMAP "....X...XXX....."
55E4                    04284 	; 	BITMAP ".....XXX.XXXX..."
55E4                    04285 	; 	BITMAP "........XXX.XX.."
55E4                    04286 	; 	BITMAP "...XXX.XXXX..XX."
55E4                    04287 	; 	BITMAP "...XXX.XXXX.XXX."
55E4                    04288 	; 	BITMAP "..........X.XXX."
55E4                    04289 	; 	BITMAP "......XXXX......"
55E4                    04290 	; 	BITMAP "...XXXXX.XXX...."
55E4                    04291 	; 	BITMAP "..XXXXX..XXX...."
55E4                    04292 	; 	BITMAP "........XXXX...."
55E4  000A0F0F0B0E0807  04293 	DB $00,$0A,$0F,$0F,$0B,$0E,$08,$07
55EC  001D1D00031F3E00  04294 	DB $00,$1D,$1D,$00,$03,$1F,$3E,$00
55F4  0080A0C0E0C0E078  04295 	DB $00,$80,$A0,$C0,$E0,$C0,$E0,$78
55FC  ECE6EE2EC07070F0  04296 	DB $EC,$E6,$EE,$2E,$C0,$70,$70,$F0
5604                    04297 	; 
5604                    04298 	; 	BITMAP "...X.X.X........"
5604                    04299 	; 	BITMAP "...XXXXX.X......"
5604                    04300 	; 	BITMAP "...XXXXXX......."
5604                    04301 	; 	BITMAP "...X.XXXXX......"
5604                    04302 	; 	BITMAP "...XXX.XX......."
5604                    04303 	; 	BITMAP "...X...XXX......"
5604                    04304 	; 	BITMAP "....XXX.XX......"
5604                    04305 	; 	BITMAP ".......XXXX....."
5604                    04306 	; 	BITMAP "......XXXXX....."
5604                    04307 	; 	BITMAP ".....XXX.XX....."
5604                    04308 	; 	BITMAP ".....XXX.XX....."
5604                    04309 	; 	BITMAP "........XXX....."
5604                    04310 	; 	BITMAP "......XXXX......"
5604                    04311 	; 	BITMAP "........XX......"
5604                    04312 	; 	BITMAP "......XXXX......"
5604                    04313 	; 	BITMAP ".....XXXXX......"
5604  151F1F171D110E01  04314 	DB $15,$1F,$1F,$17,$1D,$11,$0E,$01
560C  0307070003000307  04315 	DB $03,$07,$07,$00,$03,$00,$03,$07
5614  004080C080C0C0E0  04316 	DB $00,$40,$80,$C0,$80,$C0,$C0,$E0
561C  E06060E0C0C0C0C0  04317 	DB $E0,$60,$60,$E0,$C0,$C0,$C0,$C0
5624                    04318 	; 
5624                    04319 	; 	BITMAP "....X.X.X.X....."
5624                    04320 	; 	BITMAP ".....XXXXX......"
5624                    04321 	; 	BITMAP "....XXXXXXX....."
5624                    04322 	; 	BITMAP "....XXXXXXX....."
5624                    04323 	; 	BITMAP ".....XXXXX..XXX."
5624                    04324 	; 	BITMAP ".....XXXXX..XXX."
5624                    04325 	; 	BITMAP "......XXX..XX..."
5624                    04326 	; 	BITMAP "....XX...XXX...."
5624                    04327 	; 	BITMAP "...XX.XXXX......"
5624                    04328 	; 	BITMAP ".XXX............"
5624                    04329 	; 	BITMAP ".XXX..XXXX......"
5624                    04330 	; 	BITMAP "......X..XX....."
5624                    04331 	; 	BITMAP ".....XX...XXX..."
5624                    04332 	; 	BITMAP ".....XX...XXXX.."
5624                    04333 	; 	BITMAP "...XXXX........."
5624                    04334 	; 	BITMAP "..XXXXX........."
5624  0A070F0F0707030C  04335 	DB $0A,$07,$0F,$0F,$07,$07,$03,$0C
562C  1B70730206061E3E  04336 	DB $1B,$70,$73,$02,$06,$06,$1E,$3E
5634  A0C0E0E0CECE9870  04337 	DB $A0,$C0,$E0,$E0,$CE,$CE,$98,$70
563C  C000C060383C0000  04338 	DB $C0,$00,$C0,$60,$38,$3C,$00,$00
5644                    04339 	; 
5644                    04340 	; 
5644                    04341 	; 	BITMAP ".....X.X.X.X...."
5644                    04342 	; 	BITMAP "......XXXXX....."
5644                    04343 	; 	BITMAP ".....XXXXXXX...."
5644                    04344 	; 	BITMAP ".....XXXXXXX...."
5644                    04345 	; 	BITMAP ".XXX..XXXXX....."
5644                    04346 	; 	BITMAP ".XXX..XXXXX....."
5644                    04347 	; 	BITMAP "...XX..XXX......"
5644                    04348 	; 	BITMAP "....XXX...XX...."
5644                    04349 	; 	BITMAP "......XXXX.XX..."
5644                    04350 	; 	BITMAP "............XXX."
5644                    04351 	; 	BITMAP "......XXXX..XXX."
5644                    04352 	; 	BITMAP ".....XX..X......"
5644                    04353 	; 	BITMAP "...XXX...XX....."
5644                    04354 	; 	BITMAP "..XXX....XX....."
5644                    04355 	; 	BITMAP ".........XXXX..."
5644                    04356 	; 	BITMAP ".........XXXXX.."
5644  050307077373190E  04357 	DB $05,$03,$07,$07,$73,$73,$19,$0E
564C  030003061C380000  04358 	DB $03,$00,$03,$06,$1C,$38,$00,$00
5654  50E0F0F0E0E0C030  04359 	DB $50,$E0,$F0,$F0,$E0,$E0,$C0,$30
565C  D80ECE406060787C  04360 	DB $D8,$0E,$CE,$40,$60,$60,$78,$7C
5664                    04361 	; 
5664                    04362 	; 	BITMAP "...XX.XX........"
5664                    04363 	; 	BITMAP "..X.XX.X........"
5664                    04364 	; 	BITMAP "..X.XX.X........"
5664                    04365 	; 	BITMAP "..XX.XX........."
5664                    04366 	; 	BITMAP "...XXXXX........"
5664                    04367 	; 	BITMAP ".XXXXX.XX......."
5664                    04368 	; 	BITMAP "X..XX.XXX......."
5664                    04369 	; 	BITMAP "......XXX.....X."
5664                    04370 	; 	BITMAP "....XXXX......X."
5664                    04371 	; 	BITMAP "...XXXXX.....XX."
5664                    04372 	; 	BITMAP "..XXXXX......XX."
5664                    04373 	; 	BITMAP "..XXXX......XXX."
5664                    04374 	; 	BITMAP "..XXXX..XX..XX.."
5664                    04375 	; 	BITMAP "..XXXXXXXXX.XX.."
5664                    04376 	; 	BITMAP "...XXXXXXXXXXX.."
5664                    04377 	; 	BITMAP "....XXXX..XXX..."
5664  1B2D2D361F7D9B03  04378 	DB $1B,$2D,$2D,$36,$1F,$7D,$9B,$03
566C  0F1F3E3C3C3F1F0F  04379 	DB $0F,$1F,$3E,$3C,$3C,$3F,$1F,$0F
5674  0000000000808082  04380 	DB $00,$00,$00,$00,$00,$80,$80,$82
567C  0206060ECCECFC38  04381 	DB $02,$06,$06,$0E,$CC,$EC,$FC,$38
5684                    04382 	; 
5684                    04383 	; 	BITMAP "................"
5684                    04384 	; 	BITMAP "....XX.XX......."
5684                    04385 	; 	BITMAP "...X.XX.X......."
5684                    04386 	; 	BITMAP "...X.XX.X......."
5684                    04387 	; 	BITMAP "...XX.XX........"
5684                    04388 	; 	BITMAP "....XXXXX......."
5684                    04389 	; 	BITMAP "...XXXX.XX......"
5684                    04390 	; 	BITMAP ".X.XXX.XXX......"
5684                    04391 	; 	BITMAP ".XX....XXX......"
5684                    04392 	; 	BITMAP "....XXXXX....X.."
5684                    04393 	; 	BITMAP "...XXXXX....XX.."
5684                    04394 	; 	BITMAP "...XXXX.XX..XX.."
5684                    04395 	; 	BITMAP "...XXXX.XX.XX..."
5684                    04396 	; 	BITMAP "...XXXXXXXXXX..."
5684                    04397 	; 	BITMAP "....XXXXX.XXX..."
5684                    04398 	; 	BITMAP ".....XXX..XX...."
5684  000D16161B0F1E5D  04399 	DB $00,$0D,$16,$16,$1B,$0F,$1E,$5D
568C  610F1F1E1E1F0F07  04400 	DB $61,$0F,$1F,$1E,$1E,$1F,$0F,$07
5694  008080800080C0C0  04401 	DB $00,$80,$80,$80,$00,$80,$C0,$C0
569C  C0840CCCD8F8B830  04402 	DB $C0,$84,$0C,$CC,$D8,$F8,$B8,$30
56A4                    04403 	; 
56A4                    04404 	; 	BITMAP "........XX.XX..."
56A4                    04405 	; 	BITMAP "........X.XX.X.."
56A4                    04406 	; 	BITMAP "........X.XX.X.."
56A4                    04407 	; 	BITMAP ".........XX.XX.."
56A4                    04408 	; 	BITMAP "........XXXXX..."
56A4                    04409 	; 	BITMAP ".......XX.XXXXX."
56A4                    04410 	; 	BITMAP ".......XXX.XX..X"
56A4                    04411 	; 	BITMAP ".X.....XXX......"
56A4                    04412 	; 	BITMAP ".X......XXXX...."
56A4                    04413 	; 	BITMAP ".XX.....XXXXX..."
56A4                    04414 	; 	BITMAP ".XX......XXXXX.."
56A4                    04415 	; 	BITMAP ".XXX......XXXX.."
56A4                    04416 	; 	BITMAP "..XX..XX..XXXX.."
56A4                    04417 	; 	BITMAP "..XX.XXXXXXXXX.."
56A4                    04418 	; 	BITMAP "..XXXXXXXXXXX..."
56A4                    04419 	; 	BITMAP "...XXX..XXXX...."
56A4  0000000000010141  04420 	DB $00,$00,$00,$00,$00,$01,$01,$41
56AC  4060607033373F1C  04421 	DB $40,$60,$60,$70,$33,$37,$3F,$1C
56B4  D8B4B46CF8BED9C0  04422 	DB $D8,$B4,$B4,$6C,$F8,$BE,$D9,$C0
56BC  F0F87C3C3CFCF8F0  04423 	DB $F0,$F8,$7C,$3C,$3C,$FC,$F8,$F0
56C4                    04424 	; 
56C4                    04425 	; 	BITMAP "................"
56C4                    04426 	; 	BITMAP ".......XX.XX...."
56C4                    04427 	; 	BITMAP ".......X.XX.X..."
56C4                    04428 	; 	BITMAP ".......X.XX.X..."
56C4                    04429 	; 	BITMAP "........XX.XX..."
56C4                    04430 	; 	BITMAP ".......XXXXX...."
56C4                    04431 	; 	BITMAP "......XX.XXXX..."
56C4                    04432 	; 	BITMAP "......XXX.XXX.X."
56C4                    04433 	; 	BITMAP "......XXX....XX."
56C4                    04434 	; 	BITMAP "..X....XXXXX...."
56C4                    04435 	; 	BITMAP "..XX....XXXXX..."
56C4                    04436 	; 	BITMAP "..XX..XX.XXXX..."
56C4                    04437 	; 	BITMAP "...XX.XX.XXXX..."
56C4                    04438 	; 	BITMAP "...XXXXXXXXXX..."
56C4                    04439 	; 	BITMAP "...XXX.XXXXX...."
56C4                    04440 	; 	BITMAP "....XX..XXX....."
56C4  0001010100010303  04441 	DB $00,$01,$01,$01,$00,$01,$03,$03
56CC  032130331B1F1D0C  04442 	DB $03,$21,$30,$33,$1B,$1F,$1D,$0C
56D4  00B06868D8F078BA  04443 	DB $00,$B0,$68,$68,$D8,$F0,$78,$BA
56DC  86F0F87878F8F0E0  04444 	DB $86,$F0,$F8,$78,$78,$F8,$F0,$E0
56E4                    04445 	; 
56E4                    04446 	; start_song:	PROCEDURE
56E4                    04447 CVB_START_SONG:
56E4                    04448 	; 	tick_note = 8
56E4  A908              04449 	LDA #8
56E6  8557              04450 	STA CVB_TICK_NOTE
56E8                    04451 	; 	song_note = 47
56E8  A92F              04452 	LDA #47
56EA  855D              04453 	STA CVB_SONG_NOTE
56EC                    04454 	; 	END
56EC  60                04455 	RTS
56ED                    04456 	; 
56ED                    04457 	; play_song:	PROCEDURE
56ED                    04458 CVB_PLAY_SONG:
56ED                    04459 	; 	tick_note = tick_note + 1.
56ED  A557              04460 	LDA CVB_TICK_NOTE
56EF  18                04461 	CLC
56F0  6901              04462 	ADC #1
56F2  8557              04463 	STA CVB_TICK_NOTE
56F4                    04464 	; 	IF tick_note = 16. THEN
56F4  A557              04465 	LDA CVB_TICK_NOTE
56F6  C910              04466 	CMP #16
56F8  F003              04467 	BEQ CV123
56FA  4C4C57            04468 	JMP CV122
56FD                    04469 CV123:
56FD                    04470 	; 		tick_note = 0.
56FD  A900              04471 	LDA #0
56FF  8557              04472 	STA CVB_TICK_NOTE
5701                    04473 	; 		song_note = song_note + 1.
5701  A55D              04474 	LDA CVB_SONG_NOTE
5703  18                04475 	CLC
5704  6901              04476 	ADC #1
5706  855D              04477 	STA CVB_SONG_NOTE
5708                    04478 	; 		IF song_note = 48. THEN song_note = 0.
5708  A55D              04479 	LDA CVB_SONG_NOTE
570A  C930              04480 	CMP #48
570C  F003              04481 	BEQ CV125
570E  4C1557            04482 	JMP CV124
5711                    04483 CV125:
5711  A900              04484 	LDA #0
5713  855D              04485 	STA CVB_SONG_NOTE
5715                    04486 CV124:
5715                    04487 	; 		note = song_notes(song_note)
5715  A55D              04488 	LDA CVB_SONG_NOTE
5717  A000              04489 	LDY #0
5719  18                04490 	CLC
571A  698F              04491 	ADC #CVB_SONG_NOTES
571C  AA                04492 	TAX
571D  98                04493 	TYA
571E  6957              04494 	ADC #CVB_SONG_NOTES>>8
5720  A8                04495 	TAY
5721  8A                04496 	TXA
5722  20BF42            04497 	JSR _PEEK8
5725  8569              04498 	STA CVB_NOTE
5727                    04499 	; 		SOUND 0, #note_freq(note - 1)
5727  A569              04500 	LDA CVB_NOTE
5729  A000              04501 	LDY #0
572B  38                04502 	SEC
572C  E901              04503 	SBC #1
572E  AA                04504 	TAX
572F  98                04505 	TYA
5730  E900              04506 	SBC #0
5732  A8                04507 	TAY
5733  8A                04508 	TXA
5734  8402              04509 	STY TEMP
5736  0A                04510 	ASL A
5737  2602              04511 	ROL TEMP
5739  A402              04512 	LDY TEMP
573B  18                04513 	CLC
573C  69BF              04514 	ADC #CVB_#NOTE_FREQ
573E  AA                04515 	TAX
573F  98                04516 	TYA
5740  6957              04517 	ADC #CVB_#NOTE_FREQ>>8
5742  A8                04518 	TAY
5743  8A                04519 	TXA
5744  20C842            04520 	JSR _PEEK16
5747  A280              04521 	LDX #$80
5749  204144            04522 	JSR SN76489_FREQ
574C                    04523 	; 	END IF
574C                    04524 CV122:
574C                    04525 	; 	SOUND 0, , volume_effect(tick_note)
574C  A557              04526 	LDA CVB_TICK_NOTE
574E  A000              04527 	LDY #0
5750  18                04528 	CLC
5751  697F              04529 	ADC #CVB_VOLUME_EFFECT
5753  AA                04530 	TAX
5754  98                04531 	TYA
5755  6957              04532 	ADC #CVB_VOLUME_EFFECT>>8
5757  A8                04533 	TAY
5758  8A                04534 	TXA
5759  20BF42            04535 	JSR _PEEK8
575C  A290              04536 	LDX #$90
575E  206144            04537 	JSR SN76489_VOL
5761                    04538 	; 	END
5761  60                04539 	RTS
5762                    04540 	; 
5762                    04541 	; sound_off:	PROCEDURE
5762                    04542 CVB_SOUND_OFF:
5762                    04543 	; 	SOUND 0,,0
5762  A900              04544 	LDA #0
5764  A290              04545 	LDX #$90
5766  206144            04546 	JSR SN76489_VOL
5769                    04547 	; 	SOUND 1,,0
5769  A900              04548 	LDA #0
576B  A2B0              04549 	LDX #$B0
576D  206144            04550 	JSR SN76489_VOL
5770                    04551 	; 	SOUND 2,,0
5770  A900              04552 	LDA #0
5772  A2D0              04553 	LDX #$D0
5774  206144            04554 	JSR SN76489_VOL
5777                    04555 	; 	SOUND 3,,0
5777  A900              04556 	LDA #0
5779  A2F0              04557 	LDX #$F0
577B  206144            04558 	JSR SN76489_VOL
577E                    04559 	; 	END
577E  60                04560 	RTS
577F                    04561 	; 
577F                    04562 	; volume_effect:
577F                    04563 CVB_VOLUME_EFFECT:
577F                    04564 	; 	DATA BYTE 11,12,13,12,12,11,11,10
577F  0B0C0D0C0C0B0B0A  04565 	DB $0B,$0C,$0D,$0C,$0C,$0B,$0B,$0A
5787                    04566 	; 	DATA BYTE 10,9,9,10,10,9,9,8
5787  0A09090A0A090908  04567 	DB $0A,$09,$09,$0A,$0A,$09,$09,$08
578F                    04568 	; 
578F                    04569 	; song_notes:
578F                    04570 CVB_SONG_NOTES:
578F                    04571 	; 	DATA BYTE 1,2,3,4,5,4,3,2
578F  0102030405040302  04572 	DB $01,$02,$03,$04,$05,$04,$03,$02
5797                    04573 	; 	DATA BYTE 1,2,3,4,5,4,3,2
5797  0102030405040302  04574 	DB $01,$02,$03,$04,$05,$04,$03,$02
579F                    04575 	; 	DATA BYTE 6,4,7,8,9,8,7,4
579F  0604070809080704  04576 	DB $06,$04,$07,$08,$09,$08,$07,$04
57A7                    04577 	; 	DATA BYTE 6,4,7,8,9,8,7,4
57A7  0604070809080704  04578 	DB $06,$04,$07,$08,$09,$08,$07,$04
57AF                    04579 	; 	DATA BYTE 3,12,8,10,11,10,8,12
57AF  030C080A0B0A080C  04580 	DB $03,$0C,$08,$0A,$0B,$0A,$08,$0C
57B7                    04581 	; 	DATA BYTE 6,4,7,8,9,8,7,4
57B7  0604070809080704  04582 	DB $06,$04,$07,$08,$09,$08,$07,$04
57BF                    04583 	; 
57BF                    04584 	; #note_freq:
57BF                    04585 CVB_#NOTE_FREQ:
57BF                    04586 	; 	DATA $01AC
57BF  AC01              04587 	DW $01AC
57C1                    04588 	; 	DATA $0153
57C1  5301              04589 	DW $0153
57C3                    04590 	; 	DATA $011D
57C3  1D01              04591 	DW $011D
57C5                    04592 	; 	DATA $00FE
57C5  FE00              04593 	DW $00FE
57C7                    04594 	; 	DATA $00F0
57C7  F000              04595 	DW $00F0
57C9                    04596 	; 	DATA $0140
57C9  4001              04597 	DW $0140
57CB                    04598 	; 	DATA $00D6
57CB  D600              04599 	DW $00D6
57CD                    04600 	; 	DATA $00BE
57CD  BE00              04601 	DW $00BE
57CF                    04602 	; 	DATA $00B4
57CF  B400              04603 	DW $00B4
57D1                    04604 	; 	DATA $00AA
57D1  AA00              04605 	DW $00AA
57D3                    04606 	; 	DATA $00A0
57D3  A000              04607 	DW $00A0
57D5                    04608 	; 	DATA $00E2
57D5  E200              04609 	DW $00E2
57D7                    04610 ROM_END:
57D7  FFFFFFFFFFFFFFFF  04611 	TIMES $BFE8-$ DB $FF
BFE8                    04612 
BFE8  F249              04613 	DW START
BFEA  0000              04614 	DW 0		; IRQ2 handler.
BFEC                    04615 
BFEC  0000              04616 	DW 0
BFEE  0000              04617 	DW 0
BFF0                    04618 
BFF0                    04619 	; Initial VDP registers
BFF0  02                04620 	DB $02
BFF1  82                04621 	DB $82
BFF2  06                04622 	DB $06
BFF3  FF                04623 	DB $FF
BFF4  00                04624 	DB $00
BFF5  36                04625 	DB $36
BFF6  07                04626 	DB $07
BFF7  01                04627 	DB $01
BFF8                    04628 
BFF8  0000              04629 	DW 0
BFFA  0000              04630 	DW 0
BFFC  08F8              04631 	DW BIOS_NMI_RESET_ADDR	; Handler for reset.
BFFE  D845              04632 	DW INT_HANDLER	; IRQ1 handler.

00000 ERRORS FOUND
00000 WARNINGS FOUND

65536 PROGRAM BYTES

LABEL                VALUE/ADDRESS

BASE_RAM             0050
BIOS_NMI_RESET_ADDR  f808
BIOS_READ_CONTROLLERS fa00
BIOS_WRITE_PSG       fe77
CLS                  4107
COLECO               0000
CONVERT_JOYSTICK     4698
CONVERT_JOYSTICK.1   46b4
CONVERT_JOYSTICK.2   46af
CPM                  0000
CPYBLK               40b9
CPYBLK.1             40ba
CURSOR               000c
CV1                  4a78
CV10                 4c76
CV100                5346
CV101                536e
CV102                5357
CV103                536b
CV104                5367
CV105                5382
CV106                5382
CV107                537e
CV108                53c5
CV109                53ae
CV11                 4b94
CV110                53c2
CV111                53be
CV112                53d9
CV113                53d9
CV114                53d5
CV115                541c
CV116                5405
CV117                5419
CV118                5415
CV119                5430
CV12                 4c76
CV120                5430
CV121                542c
CV122                574c
CV123                56fd
CV124                5715
CV125                5711
CV13                 4b9d
CV14                 4ba9
CV15                 4bba
CV16                 4bc6
CV17                 4bcd
CV18                 4c15
CV19                 4c73
CV2                  4a7f
CV20                 4c25
CV21                 4c3c
CV22                 4c46
CV23                 4c4e
CV25                 4c6c
CV26                 4c69
CV27                 4cc1
CV28                 4c9a
CV29                 4cc1
CV3                  4a9a
CV30                 4cbe
CV31                 4d0c
CV32                 4ce5
CV33                 4d0c
CV34                 4d09
CV35                 4d57
CV36                 4d30
CV37                 4d57
CV38                 4d54
CV39                 4d95
CV4                  4aa8
CV40                 4dcb
CV41                 4dce
CV43                 4e1d
CV44                 4e1a
CV45                 4e71
CV46                 4e29
CV47                 4e3d
CV48                 4e48
CV49                 4e50
CV5                  4af4
CV51                 4e6e
CV52                 4e6b
CV53                 4e8f
CV54                 4f1d
CV55                 4f25
CV56                 4f2d
CV57                 4f6d
CV58                 4f8d
CV59                 4fa4
CV6                  4d5a
CV60                 4fa8
CV61                 5092
CV62                 50b2
CV63                 511d
CV64                 50d0
CV65                 511d
CV66                 50f1
CV67                 5101
CV68                 50fa
CV69                 5119
CV7                  4b75
CV70                 5112
CV71                 511d
CV72                 5173
CV73                 5126
CV74                 5173
CV75                 5147
CV76                 5157
CV77                 5150
CV78                 516f
CV79                 5168
CV8                  4b8b
CV80                 5173
CV81                 5260
CV82                 517c
CV83                 523d
CV84                 519d
CV85                 523a
CV86                 5233
CV87                 5260
CV88                 5255
CV89                 524e
CV9                  4b7e
CV90                 5259
CV91                 534d
CV92                 5269
CV93                 532a
CV94                 528a
CV95                 5327
CV96                 5320
CV97                 534d
CV98                 5342
CV99                 533b
CVBASIC_BANK_SWITCHING 0000
CVBASIC_COMPRESSION  0000
CVBASIC_MUSIC_PLAYER 0000
CVB_#C               005f
CVB_#D               0061
CVB_#NOTE_FREQ       57bf
CVB_BASE_CHARACTER   0063
CVB_C                0053
CVB_COLUMN           005b
CVB_D                0054
CVB_DRAW_LEVEL       4e7b
CVB_E                0055
CVB_ENEMY1_FRAME     005a
CVB_ENEMY2_FRAME     005e
CVB_ENEMY3_FRAME     0065
CVB_ENEMY_SPEED      005c
CVB_GAME_BITMAPS     5454
CVB_GAME_COLORS      54fc
CVB_GAME_LOOP        4af4
CVB_GAME_SPRITES     55a4
CVB_LADDERS          006a
CVB_LEVEL            0059
CVB_LIVES            0058
CVB_MOVE_ENEMIES     534e
CVB_MOVE_PLAYER      50c7
CVB_NEXT_LEVEL       4aa8
CVB_NOTE             0069
CVB_PLAYER_DIES      4d5a
CVB_PLAYER_FRAME     0056
CVB_PLAY_SONG        56ed
CVB_RESTART_GAME     4a5c
CVB_RESTART_LEVEL    4a64
CVB_ROW              006b
CVB_SONG_NOTE        005d
CVB_SONG_NOTES       578f
CVB_SOUND_OFF        5762
CVB_START_SONG       56e4
CVB_TICK_NOTE        0057
CVB_VOLUME_EFFECT    577f
CVB_X_ENEMY1         0066
CVB_X_ENEMY2         0067
CVB_X_ENEMY3         0068
CVB_X_PLAYER         0064
CVB_Y_ENEMY1         0050
CVB_Y_ENEMY2         0051
CVB_Y_ENEMY3         0052
CVB_Y_PLAYER         006c
DEFINE_CHAR          4207
DEFINE_CHAR.1        4235
DEFINE_COLOR         423a
DEFINE_SPRITE        41d5
DISSCR               40a5
EINSTEIN             0000
ENASCR               40af
FILVRM               403c
FILVRM.1             4049
FLICKER              0029
FONT_BITMAPS         46f2
FRAME                0024
INT_HANDLER          45d8
INT_HANDLER.4        45ff
INT_HANDLER.5        463f
INT_HANDLER.6        460b
INT_HANDLER.7        45ef
INT_HANDLER.8        465c
JOY1_BUTTONS         0016
JOY1_DATA            0020
JOY1_DIR             0011
JOY2_BUTTONS         0017
JOY2_DATA            0021
JOY2_DIR             0013
JOYSTICK_TABLE       46b6
KEY1_DATA            0022
KEY2_DATA            0023
LDIRVM               4059
LDIRVM.1             4066
LDIRVM.2             4068
LDIRVM.3             4073
LDIRVM3              407c
LDIRVM3.1            4082
LFSR                 0026
MEMOTECH             0000
MODE                 0028
MODE_0               44a8
MODE_1               451a
MODE_1.1             4560
MODE_1.2             456c
MODE_2               458c
MSX                  0000
MUSIC_INIT           46dd
NTSC                 002e
PENCIL               0000
PLETTER_BIT          002f
PLETTER_OFF          000e
POINTER              0008
PRINT_DIGIT          418d
PRINT_DIGIT.1        41d1
PRINT_DIGIT.2        418f
PRINT_DIGIT.3        41b6
PRINT_DIGIT.4        41ad
PRINT_DIGIT.5        41bc
PRINT_DIGIT.6        41b4
PRINT_NUMBER         414d
PRINT_NUMBER1        417e
PRINT_NUMBER2        4173
PRINT_NUMBER3        4168
PRINT_NUMBER4        415d
PRINT_NUMBER5        4152
PRINT_STRING         4125
PRINT_STRING.1       414c
PSG                  0000
PV2000               0000
RAM_END              4a1d
RANDOM               4412
RANDOM.0             4420
RDVRM                402a
READ_POINTER         000a
RESULT               0006
ROM_END              57d7
SETRD                4014
SETWRT               400a
SG1000               0000
SGM                  0000
SN76489_CONTROL      446c
SN76489_FREQ         4441
SN76489_VOL          4461
SORD                 0000
SPRITES              0180
SPRITE_DATA          002a
STACK                017f
START                49f2
SVI                  0000
TEMP                 0002
TEMP2                0004
UPDATE_SPRITE        4264
VDP                  0000
VDPR                 0000
VDP_GENERIC_MODE     4473
VDP_GENERIC_SPRITES  44f1
VDP_GENERIC_SPRITES.1 450b
WAIT                 46d6
WAIT.1               46d8
WRTVDP               4000
WRTVRM               401e
_ABS16               4284
_DIV16               4382
_DIV16.1             4394
_DIV16.2             439c
_DIV16.3             43c0
_DIV16S              4347
_DIV16S.1            436b
_DIV16S.2            4378
_DIV16S.3            4381
_MOD16               43cc
_MOD16.1             43de
_MOD16.2             43e6
_MOD16.3             440a
_MOD16S              4310
_MOD16S.1            4330
_MOD16S.2            433d
_MOD16S.3            4346
_MUL16               42d7
_MUL16.1             42f1
_MUL16.2             4304
_NEG16               4289
_NEG16.1             4295
_PEEK16              42c8
_PEEK8               42bf
_READ16              42aa
_READ8               42b4
_READ8.1             42be
_SGN16               4297
_SGN16.1             42a8
_SGN16.2             42a6
